=== tests/cases/conformance/expressions/unaryOperators/decrementOperator/decrementOperatorWithEnumType.ts ===
// -- operator on enum type

enum ENUM1 { A, B, "" };
>ENUM1 : ENUM1
>A : ENUM1.A
>B : ENUM1.B

// expression
var ResultIsNumber1 = --ENUM1["A"];
>ResultIsNumber1 : 数字
>类型别名 :=> 数字
>--ENUM1["A"] : 数字
>类型别名 :=> 数字
>ENUM1["A"] : 任意
>类型别名 :=> 任意
>ENUM1 : 类为 ENUM1
>"A" : "A"

var ResultIsNumber2 = ENUM1.A--;
>ResultIsNumber2 : 数字
>类型别名 :=> 数字
>ENUM1.A-- : 数字
>类型别名 :=> 数字
>ENUM1.A : 任意
>类型别名 :=> 任意
>ENUM1 : 类为 ENUM1
>A : 任意
>类型别名 :=> 任意

// miss assignment operator
--ENUM1["A"];
>--ENUM1["A"] : 数字
>类型别名 :=> 数字
>ENUM1["A"] : 任意
>类型别名 :=> 任意
>ENUM1 : 类为 ENUM1
>"A" : "A"

ENUM1[A]--;
>ENUM1[A]-- : 数字
>类型别名 :=> 数字
>ENUM1[A] : 文字
>类型别名 :=> 文字
>ENUM1 : 类为 ENUM1
>A : 任意
>类型别名 :=> 任意

