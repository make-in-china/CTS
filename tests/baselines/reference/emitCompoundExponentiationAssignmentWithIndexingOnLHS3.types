=== tests/cases/conformance/es7/exponentiationOperator/emitCompoundExponentiationAssignmentWithIndexingOnLHS3.ts ===
var object = {
>object : { _0: 数字; 0: 数字; }
>{    _0: 2,    get 0() {        return this._0;    },    set 0(x: number) {        this._0 = x;    },} : { _0: 数字; 0: 数字; }

    _0: 2,
>_0 : 数字
>类型别名 :=> 数字
>2 : 2

    get 0() {
        return this._0;
>this._0 : 任意
>类型别名 :=> 任意
>this : 任意
>类型别名 :=> 任意
>_0 : 任意
>类型别名 :=> 任意

    },
    set 0(x: number) {
>x : 数字
>类型别名 :=> 数字

        this._0 = x;
>this._0 = x : 数字
>类型别名 :=> 数字
>this._0 : 任意
>类型别名 :=> 任意
>this : 任意
>类型别名 :=> 任意
>_0 : 任意
>类型别名 :=> 任意
>x : 数字
>类型别名 :=> 数字

    },
}
object[0] **= object[0];
>object[0] **= object[0] : 数字
>类型别名 :=> 数字
>object[0] : 数字
>类型别名 :=> 数字
>object : { _0: 数字; 0: 数字; }
>0 : 0
>object[0] : 数字
>类型别名 :=> 数字
>object : { _0: 数字; 0: 数字; }
>0 : 0

object[0] **= object[0] **= 2;
>object[0] **= object[0] **= 2 : 数字
>类型别名 :=> 数字
>object[0] : 数字
>类型别名 :=> 数字
>object : { _0: 数字; 0: 数字; }
>0 : 0
>object[0] **= 2 : 数字
>类型别名 :=> 数字
>object[0] : 数字
>类型别名 :=> 数字
>object : { _0: 数字; 0: 数字; }
>0 : 0
>2 : 2

object[0] **= object[0] ** 2;
>object[0] **= object[0] ** 2 : 数字
>类型别名 :=> 数字
>object[0] : 数字
>类型别名 :=> 数字
>object : { _0: 数字; 0: 数字; }
>0 : 0
>object[0] ** 2 : 数字
>类型别名 :=> 数字
>object[0] : 数字
>类型别名 :=> 数字
>object : { _0: 数字; 0: 数字; }
>0 : 0
>2 : 2

