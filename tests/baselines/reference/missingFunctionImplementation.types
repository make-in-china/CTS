=== tests/cases/compiler/missingFunctionImplementation.ts ===
export class C1 {
>C1 : C1

  m(): void;
>m : () => 无值
}

// merged with a namespace
export class C2 {
>C2 : C2

  m(): void;
>m : () => 无值
}
export namespace C2 { }
>C2 : 类为 C2


// merged with a namespace, multiple overloads
class C3 {
>C3 : C3

  m(a, b);
>m : { (a: 任意, b: 任意): 任意; (a: 任意): 任意; }
>a : 任意
>类型别名 :=> 任意
>b : 任意
>类型别名 :=> 任意

  m(a);
>m : { (a: 任意, b: 任意): 任意; (a: 任意): 任意; }
>a : 任意
>类型别名 :=> 任意
}
namespace C3 { }
>C3 : 类为 C3

// static methods, multiple overloads
class C4 {
>C4 : C4

  static m(a): void;
>m : (a: 任意) => 无值
>a : 任意
>类型别名 :=> 任意
}

// static methods, multiple overloads
class C5 {
>C5 : C5

  static m(a): void;
>m : { (a: 任意): 无值; (): 无值; }
>a : 任意
>类型别名 :=> 任意

  static m(): void;
>m : { (a: 任意): 无值; (): 无值; }
}

// merged with namespace, static methods
class C6 {
>C6 : C6

  static m(): void;
>m : () => 无值
}
namespace C6 {
>C6 : 类为 C6
}

// merged with namespace, static methods, multiple overloads
class C7 {
>C7 : C7

  static m(a): void;
>m : { (a: 任意): 无值; (): 无值; }
>a : 任意
>类型别名 :=> 任意

  static m(): void;
>m : { (a: 任意): 无值; (): 无值; }
}
namespace C7 {
>C7 : 类为 C7
}

// merged with namespace, static methods, duplicate declarations
class C8 {
>C8 : C8

  static m(a): void;
>m : { (a: 任意): 无值; (a: 任意, b: 任意): 无值; }
>a : 任意
>类型别名 :=> 任意

  static m(a, b): void;
>m : { (a: 任意): 无值; (a: 任意, b: 任意): 无值; }
>a : 任意
>类型别名 :=> 任意
>b : 任意
>类型别名 :=> 任意
}
namespace C8 {
>C8 : 类为 C8

  export function m(a?, b?): void { }
>m : (a?: 任意, b?: 任意) => 无值
>a : 任意
>类型别名 :=> 任意
>b : 任意
>类型别名 :=> 任意
}

// merged with namespace, static methods, duplicate declarations
class C9 {
>C9 : C9

  static m(a): void { }
>m : (a: 任意) => 无值
>a : 任意
>类型别名 :=> 任意
}
namespace C9 {
>C9 : 类为 C9

  export function m(a): void;
>m : (a: 任意) => 无值
>a : 任意
>类型别名 :=> 任意
}

// merged namespaces
namespace N10 {
>N10 : 类为 N10

  export function m(a): void;
>m : { (a: 任意): 无值; (a: 任意): 无值; }
>a : 任意
>类型别名 :=> 任意
}
namespace N10 {
>N10 : 类为 N10

  export function m(a): void { }
>m : { (a: 任意): 无值; (a: 任意): 无值; }
>a : 任意
>类型别名 :=> 任意
}

// merged namespaces, duplicate defintions
namespace N12 {
>N12 : 类为 N12

  export function m(a): void;
>m : { (a: 任意): 无值; (): 无值; (a: 任意): 无值; }
>a : 任意
>类型别名 :=> 任意

  export function m(): void;
>m : { (a: 任意): 无值; (): 无值; (a: 任意): 无值; }

  export function m(a?): void { }
>m : { (a: 任意): 无值; (): 无值; (a: 任意): 无值; }
>a : 任意
>类型别名 :=> 任意
}
namespace N12 {
>N12 : 类为 N12

  export function m(a): void { }
>m : { (a: 任意): 无值; (): 无值; (a: 任意): 无值; }
>a : 任意
>类型别名 :=> 任意
}

