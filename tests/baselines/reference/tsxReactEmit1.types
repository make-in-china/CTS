=== tests/cases/conformance/jsx/file.tsx ===
declare module JSX {
>JSX : 任意
>类型别名 :=> 任意

	interface Element { }
>Element : Element

	interface IntrinsicElements {
>IntrinsicElements : IntrinsicElements

		[s: string]: any;
>s : 文字
>类型别名 :=> 文字
	}
}
declare var React: any;
>React : 任意
>类型别名 :=> 任意

var p;
>p : 任意
>类型别名 :=> 任意

var selfClosed1 = <div />;
>selfClosed1 : JSX.Element
><div /> : JSX.Element
>div : 任意
>类型别名 :=> 任意

var selfClosed2 = <div x="1" />;
>selfClosed2 : JSX.Element
><div x="1" /> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>x : 文字
>类型别名 :=> 文字

var selfClosed3 = <div x='1' />;
>selfClosed3 : JSX.Element
><div x='1' /> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>x : 文字
>类型别名 :=> 文字

var selfClosed4 = <div x="1" y='0' />;
>selfClosed4 : JSX.Element
><div x="1" y='0' /> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>x : 文字
>类型别名 :=> 文字
>y : 文字
>类型别名 :=> 文字

var selfClosed5 = <div x={0} y='0' />;
>selfClosed5 : JSX.Element
><div x={0} y='0' /> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>x : 数字
>类型别名 :=> 数字
>0 : 0
>y : 文字
>类型别名 :=> 文字

var selfClosed6 = <div x={"1"} y='0' />;
>selfClosed6 : JSX.Element
><div x={"1"} y='0' /> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>x : 文字
>类型别名 :=> 文字
>"1" : "1"
>y : 文字
>类型别名 :=> 文字

var selfClosed7 = <div x={p} y='p' b />;
>selfClosed7 : JSX.Element
><div x={p} y='p' b /> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>p : 任意
>类型别名 :=> 任意
>y : 文字
>类型别名 :=> 文字
>b : 为真
>类型别名 :=> 为真

var openClosed1 = <div></div>;
>openClosed1 : JSX.Element
><div></div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

var openClosed2 = <div n='m'>foo</div>;
>openClosed2 : JSX.Element
><div n='m'>foo</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>n : 文字
>类型别名 :=> 文字
>div : 任意
>类型别名 :=> 任意

var openClosed3 = <div n='m'>{p}</div>;
>openClosed3 : JSX.Element
><div n='m'>{p}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>n : 文字
>类型别名 :=> 文字
>p : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

var openClosed4 = <div n='m'>{p < p}</div>;
>openClosed4 : JSX.Element
><div n='m'>{p < p}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>n : 文字
>类型别名 :=> 文字
>p < p : 真假
>类型别名 :=> 真假
>p : 任意
>类型别名 :=> 任意
>p : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

var openClosed5 = <div n='m' b>{p > p}</div>;
>openClosed5 : JSX.Element
><div n='m' b>{p > p}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>n : 文字
>类型别名 :=> 文字
>b : 为真
>类型别名 :=> 为真
>p > p : 真假
>类型别名 :=> 真假
>p : 任意
>类型别名 :=> 任意
>p : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

class SomeClass {
>SomeClass : SomeClass

	f() {
>f : () => 无值

		var rewrites1 = <div>{() => this}</div>;
>rewrites1 : JSX.Element
><div>{() => this}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>() => this : () => 本体
>this : 本体
>div : 任意
>类型别名 :=> 任意

		var rewrites2 = <div>{[p, ...p, p]}</div>;
>rewrites2 : JSX.Element
><div>{[p, ...p, p]}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>[p, ...p, p] : 任意[]
>p : 任意
>类型别名 :=> 任意
>...p : 任意
>类型别名 :=> 任意
>p : 任意
>类型别名 :=> 任意
>p : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

		var rewrites3 = <div>{{p}}</div>;
>rewrites3 : JSX.Element
><div>{{p}}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>{p} : { p: 任意; }
>p : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

		var rewrites4 = <div a={() => this}></div>;
>rewrites4 : JSX.Element
><div a={() => this}></div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>a : () => 本体
>() => this : () => 本体
>this : 本体
>div : 任意
>类型别名 :=> 任意

		var rewrites5 = <div a={[p, ...p, p]}></div>;
>rewrites5 : JSX.Element
><div a={[p, ...p, p]}></div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>a : 任意[]
>[p, ...p, p] : 任意[]
>p : 任意
>类型别名 :=> 任意
>...p : 任意
>类型别名 :=> 任意
>p : 任意
>类型别名 :=> 任意
>p : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

		var rewrites6 = <div a={{p}}></div>;
>rewrites6 : JSX.Element
><div a={{p}}></div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>a : { p: 任意; }
>{p} : { p: 任意; }
>p : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意
	}
}

var whitespace1 = <div>      </div>;
>whitespace1 : JSX.Element
><div>      </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

var whitespace2 = <div>  {p}    </div>;
>whitespace2 : JSX.Element
><div>  {p}    </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>p : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

var whitespace3 = <div>  
>whitespace3 : JSX.Element
><div>        {p}          </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意

      {p}    
>p : 任意
>类型别名 :=> 任意

      </div>;
>div : 任意
>类型别名 :=> 任意

