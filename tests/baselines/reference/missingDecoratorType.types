=== tests/cases/conformance/decorators/a.ts ===
interface Object { }
>Object : Object

interface Array<T> { }
>Array : T[]
>T : T

interface String { }
>String : String

interface Boolean { }
>Boolean : Boolean

interface Number { }
>Number : Number

interface Function { }
>Function : Function

interface RegExp { }
>RegExp : RegExp

interface IArguments { }
>IArguments : IArguments

=== tests/cases/conformance/decorators/b.ts ===
declare function dec(t, k, d);
>dec : (t: any, k: any, d: any) => any
>t : any
>类型别名 :=> 任意
>k : any
>类型别名 :=> 任意
>d : any
>类型别名 :=> 任意

class C {
>C : C

    @dec
>dec : (t: any, k: any, d: any) => any

    method() {}
>method : () => void
}


