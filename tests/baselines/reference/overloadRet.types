=== tests/cases/compiler/overloadRet.ts ===
interface I {
>I : I

    f(s:string):number;  
>f : { (s: 文字): 数字; (n: 数字): 文字; }
>s : 文字
>类型别名 :=> 文字

    f(n:number):string;
>f : { (s: 文字): 数字; (n: 数字): 文字; }
>n : 数字
>类型别名 :=> 数字

    g(n:number):any; 
>g : { (n: 数字): 任意; (n: 数字, m: 数字): 文字; }
>n : 数字
>类型别名 :=> 数字

    g(n:number,m:number):string;
>g : { (n: 数字): 任意; (n: 数字, m: 数字): 文字; }
>n : 数字
>类型别名 :=> 数字
>m : 数字
>类型别名 :=> 数字

    h(n:number):I;  
>h : { (n: 数字): I; (b: 真假): 数字; }
>n : 数字
>类型别名 :=> 数字
>I : I

    h(b:boolean):number;
>h : { (n: 数字): I; (b: 真假): 数字; }
>b : 真假
>类型别名 :=> 真假

    i(b:boolean):number;
>i : { (b: 真假): 数字; (b: 真假): 任意; }
>b : 真假
>类型别名 :=> 真假

    i(b:boolean):any;
>i : { (b: 真假): 数字; (b: 真假): 任意; }
>b : 真假
>类型别名 :=> 真假
}
