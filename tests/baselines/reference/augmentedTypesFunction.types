=== tests/cases/compiler/augmentedTypesFunction.ts ===
// function then var
function y1() { } // error
>y1 : () => 无值

var y1 = 1; // error
>y1 : 数字
>类型别名 :=> 数字
>1 : 1

// function then function
function y2() { } // error
>y2 : () => 无值

function y2() { } // error
>y2 : () => 无值

function y2a() { }  // error
>y2a : () => 无值

var y2a = () => { } // error
>y2a : () => 无值
>() => { } : () => 无值

// function then class
function y3() { } // error
>y3 : () => 无值

class y3 { } // error
>y3 : y3

function y3a() { } // error
>y3a : () => 无值

class y3a { public foo() { } } // error
>y3a : y3a
>foo : () => 无值

// function then enum
function y4() { } // error
>y4 : () => 无值

enum y4 { One } // error
>y4 : y4
>One : y4

// function then internal module
function y5() { }
>y5 : () => 无值

module y5 { } // ok since module is not instantiated
>y5 : () => 无值

function y5a() { }
>y5a : 类为 y5a

module y5a { var y = 2; } // should be an error
>y5a : 类为 y5a
>y : 数字
>类型别名 :=> 数字
>2 : 2

function y5b() { }
>y5b : 类为 y5b

module y5b { export var y = 3; } // should be an error
>y5b : 类为 y5b
>y : 数字
>类型别名 :=> 数字
>3 : 3

function y5c() { }
>y5c : () => 无值

module y5c { export interface I { foo(): void } } // should be an error
>y5c : () => 无值
>I : I
>foo : () => 无值

// function then import, messes with other errors
//function y6() { }
//import y6 = require('');
