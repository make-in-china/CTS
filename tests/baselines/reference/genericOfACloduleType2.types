=== tests/cases/compiler/genericOfACloduleType2.ts ===
class G<T>{ bar(x: T) { return x; } }
>G : G<T>
>T : T
>bar : (x: T) => T
>x : T
>T : T
>x : T

module M {
>M : 类为 M

    export class C { foo() { } }
>C : C
>foo : () => 无值

    export module C {
>C : 类为 C

        export class X {
>X : X
        }
    }

    var g1 = new G<C>();
>g1 : G<C>
>new G<C>() : G<C>
>G : 类为 G
>C : C

    g1.bar(null).foo(); // no error
>g1.bar(null).foo() : 无值
>类型别名 :=> 无值
>g1.bar(null).foo : () => 无值
>g1.bar(null) : C
>g1.bar : (x: C) => C
>g1 : G<C>
>bar : (x: C) => C
>null : 空值
>类型别名 :=> 空值
>foo : () => 无值
}

module N {
>N : 类为 N

    var g2 = new G<M.C>()
>g2 : G<M.C>
>new G<M.C>() : G<M.C>
>G : 类为 G
>M : 任意
>类型别名 :=> 任意
>C : M.C
}
