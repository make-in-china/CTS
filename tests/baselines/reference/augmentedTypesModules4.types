=== tests/cases/compiler/augmentedTypesModules4.ts ===
// module then enum
// should be errors
module m4 { }
>m4 : 类为 m4

enum m4 { }
>m4 : m4

module m4a { var y = 2; }
>m4a : 类为 m4a
>y : 数字
>类型别名 :=> 数字
>2 : 2

enum m4a { One }
>m4a : m4a
>One : m4a

module m4b { export var y = 2; }
>m4b : 类为 m4b
>y : 数字
>类型别名 :=> 数字
>2 : 2

enum m4b { One }
>m4b : m4b
>One : m4b

module m4c { interface I { foo(): void } }
>m4c : 类为 m4c
>I : I
>foo : () => 无值

enum m4c { One }
>m4c : m4c
>One : m4c

module m4d { class C { foo() { } } }
>m4d : 类为 m4d
>C : C
>foo : () => 无值

enum m4d { One }
>m4d : m4d
>One : m4d

//// module then module

module m5 { export var y = 2; }
>m5 : 类为 m5
>y : 数字
>类型别名 :=> 数字
>2 : 2

module m5 { export interface I { foo(): void } } // should already be reasonably well covered
>m5 : 类为 m5
>I : I
>foo : () => 无值

