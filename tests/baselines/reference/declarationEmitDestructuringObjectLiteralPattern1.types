=== tests/cases/compiler/declarationEmitDestructuringObjectLiteralPattern1.ts ===
var { } = { x: 5, y: "hello" };
>{ x: 5, y: "hello" } : { x: 数字; y: 文字; }
>x : 数字
>类型别名 :=> 数字
>5 : 5
>y : 文字
>类型别名 :=> 文字
>"hello" : "hello"

var { x4 } = { x4: 5, y4: "hello" };
>x4 : 数字
>类型别名 :=> 数字
>{ x4: 5, y4: "hello" } : { x4: 数字; y4: 文字; }
>x4 : 数字
>类型别名 :=> 数字
>5 : 5
>y4 : 文字
>类型别名 :=> 文字
>"hello" : "hello"

var { y5 } = { x5: 5, y5: "hello" };
>y5 : 文字
>类型别名 :=> 文字
>{ x5: 5, y5: "hello" } : { x5: 数字; y5: 文字; }
>x5 : 数字
>类型别名 :=> 数字
>5 : 5
>y5 : 文字
>类型别名 :=> 文字
>"hello" : "hello"

var { x6, y6 } = { x6: 5, y6: "hello" };
>x6 : 数字
>类型别名 :=> 数字
>y6 : 文字
>类型别名 :=> 文字
>{ x6: 5, y6: "hello" } : { x6: 数字; y6: 文字; }
>x6 : 数字
>类型别名 :=> 数字
>5 : 5
>y6 : 文字
>类型别名 :=> 文字
>"hello" : "hello"

var { x7: a1 } = { x7: 5, y7: "hello" };
>x7 : 任意
>类型别名 :=> 任意
>a1 : 数字
>类型别名 :=> 数字
>{ x7: 5, y7: "hello" } : { x7: 数字; y7: 文字; }
>x7 : 数字
>类型别名 :=> 数字
>5 : 5
>y7 : 文字
>类型别名 :=> 文字
>"hello" : "hello"

var { y8: b1 } = { x8: 5, y8: "hello" };
>y8 : 任意
>类型别名 :=> 任意
>b1 : 文字
>类型别名 :=> 文字
>{ x8: 5, y8: "hello" } : { x8: 数字; y8: 文字; }
>x8 : 数字
>类型别名 :=> 数字
>5 : 5
>y8 : 文字
>类型别名 :=> 文字
>"hello" : "hello"

var { x9: a2, y9: b2 } = { x9: 5, y9: "hello" };
>x9 : 任意
>类型别名 :=> 任意
>a2 : 数字
>类型别名 :=> 数字
>y9 : 任意
>类型别名 :=> 任意
>b2 : 文字
>类型别名 :=> 文字
>{ x9: 5, y9: "hello" } : { x9: 数字; y9: 文字; }
>x9 : 数字
>类型别名 :=> 数字
>5 : 5
>y9 : 文字
>类型别名 :=> 文字
>"hello" : "hello"

