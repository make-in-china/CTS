=== tests/cases/conformance/classes/constructorDeclarations/classConstructorAccessibility3.ts ===
class Foo {
>Foo : Foo

     constructor(public x: number) { }
>x : 数字
>类型别名 :=> 数字
}

class Bar {
>Bar : Bar

    public constructor(public x: number) { }
>x : 数字
>类型别名 :=> 数字
}

class Baz {
>Baz : Baz

    protected constructor(public x: number) { }
>x : 数字
>类型别名 :=> 数字
}

class Qux {
>Qux : Qux

     private constructor(public x: number) { }
>x : 数字
>类型别名 :=> 数字
}

// b is public
let a = Foo;
>a : 类为 Foo
>Foo : 类为 Foo

a = Bar;
>a = Bar : 类为 Bar
>a : 类为 Foo
>Bar : 类为 Bar

a = Baz; // error Baz is protected
>a = Baz : 类为 Baz
>a : 类为 Foo
>Baz : 类为 Baz

a = Qux; // error Qux is private
>a = Qux : 类为 Qux
>a : 类为 Foo
>Qux : 类为 Qux

// b is protected
let b = Baz;
>b : 类为 Baz
>Baz : 类为 Baz

b = Foo;
>b = Foo : 类为 Foo
>b : 类为 Baz
>Foo : 类为 Foo

b = Bar;
>b = Bar : 类为 Bar
>b : 类为 Baz
>Bar : 类为 Bar

b = Qux; // error Qux is private
>b = Qux : 类为 Qux
>b : 类为 Baz
>Qux : 类为 Qux

// c is private
let c = Qux;
>c : 类为 Qux
>Qux : 类为 Qux

c = Foo;
>c = Foo : 类为 Foo
>c : 类为 Qux
>Foo : 类为 Foo

c = Bar;
>c = Bar : 类为 Bar
>c : 类为 Qux
>Bar : 类为 Bar

c = Baz;
>c = Baz : 类为 Baz
>c : 类为 Qux
>Baz : 类为 Baz

