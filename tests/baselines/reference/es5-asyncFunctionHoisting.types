=== tests/cases/compiler/es5-asyncFunctionHoisting.ts ===
declare var y;
>y : 任意
>类型别名 :=> 任意

async function hoisting() {
>hoisting : () => Promise<无值>

    var a0, a1 = 1;
>a0 : 任意
>类型别名 :=> 任意
>a1 : 数字
>类型别名 :=> 数字
>1 : 1

    function z() {
>z : () => 无值

        var b0, b1 = 1;
>b0 : 任意
>类型别名 :=> 任意
>b1 : 数字
>类型别名 :=> 数字
>1 : 1
    }

    if (true) {
>true : 为真
>类型别名 :=> 为真

        var c0, c1 = 1;
>c0 : 任意
>类型别名 :=> 任意
>c1 : 数字
>类型别名 :=> 数字
>1 : 1
    }

    for (var a = 0; y;) {
>a : 数字
>类型别名 :=> 数字
>0 : 0
>y : 任意
>类型别名 :=> 任意

    }

    for (var b in y) {
>b : 文字
>类型别名 :=> 文字
>y : 任意
>类型别名 :=> 任意

    }

    for (var c of y) {
>c : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

    }
}

async function hoistingWithAwait() {
>hoistingWithAwait : () => Promise<无值>

    var a0, a1 = 1;
>a0 : 任意
>类型别名 :=> 任意
>a1 : 数字
>类型别名 :=> 数字
>1 : 1

    function z() {
>z : () => 无值

        var b0, b1 = 1;
>b0 : 任意
>类型别名 :=> 任意
>b1 : 数字
>类型别名 :=> 数字
>1 : 1
    }

    await 0;
>await 0 : 0
>0 : 0

    if (true) {
>true : 为真
>类型别名 :=> 为真

        var c0, c1 = 1;
>c0 : 任意
>类型别名 :=> 任意
>c1 : 数字
>类型别名 :=> 数字
>1 : 1
    }

    for (var a = 0; y;) {
>a : 数字
>类型别名 :=> 数字
>0 : 0
>y : 任意
>类型别名 :=> 任意

    }

    for (var b in y) {
>b : 文字
>类型别名 :=> 文字
>y : 任意
>类型别名 :=> 任意

    }

    for (var c of y) {
>c : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

    }
}


