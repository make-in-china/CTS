=== tests/cases/compiler/externalModuleAssignToVar_core.ts ===
///<reference path='externalModuleAssignToVar_core_require.ts'/>
import ext = require('externalModuleAssignToVar_core_require');
>ext : 类为 ext

var y1: { C: new() => ext.C; } = ext;
>y1 : { C: 新建 () => ext.C; }
>C : 新建 () => ext.C
>ext : 任意
>类型别名 :=> 任意
>C : ext.C
>ext : 类为 ext

y1 = ext; // ok
>y1 = ext : 类为 ext
>y1 : { C: 新建 () => ext.C; }
>ext : 类为 ext

import ext2 = require('externalModuleAssignToVar_core_require2');
>ext2 : 类为 ext2

var y2: new() => ext2 = ext2;
>y2 : 新建 () => ext2
>ext2 : ext2
>ext2 : 类为 ext2

y2 = ext2; // ok
>y2 = ext2 : 类为 ext2
>y2 : 新建 () => ext2
>ext2 : 类为 ext2

import ext3 = require('externalModuleAssignToVar_ext');
>ext3 : 类为 ext3

var y3: new () => ext3 = ext3;
>y3 : 新建 () => ext3
>ext3 : ext3
>ext3 : 类为 ext3

y3 = ext3; // ok
>y3 = ext3 : 类为 ext3
>y3 : 新建 () => ext3
>ext3 : 类为 ext3

=== tests/cases/compiler/externalModuleAssignToVar_ext.ts ===
class D { foo: string; }
>D : D
>foo : 文字
>类型别名 :=> 文字

export = D;
>D : D

=== tests/cases/compiler/externalModuleAssignToVar_core_require.ts ===
export class C { bar: string; }
>C : C
>bar : 文字
>类型别名 :=> 文字

=== tests/cases/compiler/externalModuleAssignToVar_core_require2.ts ===
class C { baz: string; }
>C : C
>baz : 文字
>类型别名 :=> 文字

export = C;
>C : C

