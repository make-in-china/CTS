=== tests/cases/conformance/types/members/objectTypeHidingMembersOfObjectAssignmentCompat2.ts ===
interface I {
>I : I

    toString(): number;
>toString : () => 数字
}

var i: I;
>i : I
>I : I

var o: Object;
>o : Object
>Object : Object

o = i; // error
>o = i : I
>o : Object
>i : I

i = o; // error
>i = o : Object
>i : I
>o : Object

class C {
>C : C

    toString(): number { return 1; }
>toString : () => 数字
>1 : 1
}
var c: C;
>c : C
>C : C

o = c; // error
>o = c : C
>o : Object
>c : C

c = o; // error
>c = o : Object
>c : C
>o : Object

var a = {
>a : { toString: () => 无值; }
>{    toString: () => { }} : { toString: () => 无值; }

    toString: () => { }
>toString : () => 无值
>() => { } : () => 无值
}
o = a; // error
>o = a : { toString: () => 无值; }
>o : Object
>a : { toString: () => 无值; }

a = o; // ok
>a = o : Object
>a : { toString: () => 无值; }
>o : Object

