=== tests/cases/conformance/controlFlow/controlFlowDeleteOperator.ts ===
function f() {
>f : () => 无值

    let x: { a?: number | string, b: number | string } = { b: 1 };
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>a : 文字 | 数字 | 未定
>b : 文字 | 数字
>{ b: 1 } : { b: 数字; }
>b : 数字
>类型别名 :=> 数字
>1 : 1

    x.a;
>x.a : 文字 | 数字 | 未定
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>a : 文字 | 数字 | 未定

    x.b;
>x.b : 文字 | 数字
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>b : 文字 | 数字

    x.a = 1;
>x.a = 1 : 1
>x.a : 文字 | 数字 | 未定
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>a : 文字 | 数字 | 未定
>1 : 1

    x.b = 1;
>x.b = 1 : 1
>x.b : 文字 | 数字
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>b : 文字 | 数字
>1 : 1

    x.a;
>x.a : 数字
>类型别名 :=> 数字
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>a : 数字
>类型别名 :=> 数字

    x.b;
>x.b : 数字
>类型别名 :=> 数字
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>b : 数字
>类型别名 :=> 数字

    delete x.a;
>delete x.a : 真假
>类型别名 :=> 真假
>x.a : 数字
>类型别名 :=> 数字
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>a : 数字
>类型别名 :=> 数字

    delete x.b;
>delete x.b : 真假
>类型别名 :=> 真假
>x.b : 数字
>类型别名 :=> 数字
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>b : 数字
>类型别名 :=> 数字

    x.a;
>x.a : 未定
>类型别名 :=> 未定
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>a : 未定
>类型别名 :=> 未定

    x.b;
>x.b : 文字 | 数字
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
>b : 文字 | 数字

    x;
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }

    delete x;  // No effect
>delete x : 真假
>类型别名 :=> 真假
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }

    x;
>x : { a?: 文字 | 数字 | 未定; b: 文字 | 数字; }
}
