=== tests/cases/conformance/parser/ecmascript5/parserArgumentList1.ts ===
export function removeClass (node:HTMLElement, className:string) {
>removeClass : (node: 任意, className: 文字) => 无值
>node : 任意
>类型别名 :=> 任意
>HTMLElement : No type information available!
>className : 文字
>类型别名 :=> 文字

	node.className = node.className.replace(_classNameRegexp(className), function (everything, leftDelimiter, name, rightDelimiter) {
>node.className = node.className.replace(_classNameRegexp(className), function (everything, leftDelimiter, name, rightDelimiter) {		return leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '';	}) : 任意
>类型别名 :=> 任意
>node.className : 任意
>类型别名 :=> 任意
>node : 任意
>类型别名 :=> 任意
>className : 任意
>类型别名 :=> 任意
>node.className.replace(_classNameRegexp(className), function (everything, leftDelimiter, name, rightDelimiter) {		return leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '';	}) : 任意
>类型别名 :=> 任意
>node.className.replace : 任意
>类型别名 :=> 任意
>node.className : 任意
>类型别名 :=> 任意
>node : 任意
>类型别名 :=> 任意
>className : 任意
>类型别名 :=> 任意
>replace : 任意
>类型别名 :=> 任意
>_classNameRegexp(className) : 任意
>类型别名 :=> 任意
>_classNameRegexp : 任意
>类型别名 :=> 任意
>className : 文字
>类型别名 :=> 文字
>function (everything, leftDelimiter, name, rightDelimiter) {		return leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '';	} : (everything: 任意, leftDelimiter: 任意, name: 任意, rightDelimiter: 任意) => " " | ""
>everything : 任意
>类型别名 :=> 任意
>leftDelimiter : 任意
>类型别名 :=> 任意
>name : 任意
>类型别名 :=> 任意
>rightDelimiter : 任意
>类型别名 :=> 任意

		return leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '';
>leftDelimiter.length + rightDelimiter.length === 2 ? ' ' : '' : " " | ""
>leftDelimiter.length + rightDelimiter.length === 2 : 真假
>类型别名 :=> 真假
>leftDelimiter.length + rightDelimiter.length : 任意
>类型别名 :=> 任意
>leftDelimiter.length : 任意
>类型别名 :=> 任意
>leftDelimiter : 任意
>类型别名 :=> 任意
>length : 任意
>类型别名 :=> 任意
>rightDelimiter.length : 任意
>类型别名 :=> 任意
>rightDelimiter : 任意
>类型别名 :=> 任意
>length : 任意
>类型别名 :=> 任意
>2 : 2
>' ' : " "
>'' : ""

	});
}
