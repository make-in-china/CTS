=== tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembers3.ts ===
// members N and M of types S and T have the same name, same accessibility, same optionality, and N is assignable M
// additional optional properties do not cause errors

class S implements S2 { foo: string; }
>S : S
>S2 : S2
>foo : 文字
>类型别名 :=> 文字

class T implements T2 { foo: string; }
>T : T
>T2 : T2
>foo : 文字
>类型别名 :=> 文字

var s: S;
>s : S
>S : S

var t: T;
>t : T
>T : T

interface S2 { foo: string; bar?: string }
>S2 : S2
>foo : 文字
>类型别名 :=> 文字
>bar : 文字
>类型别名 :=> 文字

interface T2 { foo: string; baz?: string }
>T2 : T2
>foo : 文字
>类型别名 :=> 文字
>baz : 文字
>类型别名 :=> 文字

var s2: S2;
>s2 : S2
>S2 : S2

var t2: T2;
>t2 : T2
>T2 : T2

var a: { foo: string; bar?: string }
>a : { foo: 文字; bar?: 文字; }
>foo : 文字
>类型别名 :=> 文字
>bar : 文字
>类型别名 :=> 文字

var b: { foo: string; baz?: string }
>b : { foo: 文字; baz?: 文字; }
>foo : 文字
>类型别名 :=> 文字
>baz : 文字
>类型别名 :=> 文字

var a2: S2 = { foo: '' };
>a2 : S2
>S2 : S2
>{ foo: '' } : { foo: 文字; }
>foo : 文字
>类型别名 :=> 文字
>'' : ""

var b2: T2 = { foo: '' };
>b2 : T2
>T2 : T2
>{ foo: '' } : { foo: 文字; }
>foo : 文字
>类型别名 :=> 文字
>'' : ""

s = t;
>s = t : T
>s : S
>t : T

t = s;
>t = s : S
>t : T
>s : S

s = s2;
>s = s2 : S2
>s : S
>s2 : S2

s = a2;
>s = a2 : S2
>s : S
>a2 : S2

s2 = t2;
>s2 = t2 : T2
>s2 : S2
>t2 : T2

t2 = s2;
>t2 = s2 : S2
>t2 : T2
>s2 : S2

s2 = t;
>s2 = t : T
>s2 : S2
>t : T

s2 = b;
>s2 = b : { foo: 文字; baz?: 文字; }
>s2 : S2
>b : { foo: 文字; baz?: 文字; }

s2 = a2;
>s2 = a2 : S2
>s2 : S2
>a2 : S2

a = b;
>a = b : { foo: 文字; baz?: 文字; }
>a : { foo: 文字; bar?: 文字; }
>b : { foo: 文字; baz?: 文字; }

b = a;
>b = a : { foo: 文字; bar?: 文字; }
>b : { foo: 文字; baz?: 文字; }
>a : { foo: 文字; bar?: 文字; }

a = s;
>a = s : S
>a : { foo: 文字; bar?: 文字; }
>s : S

a = s2;
>a = s2 : S2
>a : { foo: 文字; bar?: 文字; }
>s2 : S2

a = a2;
>a = a2 : S2
>a : { foo: 文字; bar?: 文字; }
>a2 : S2

a2 = b2;
>a2 = b2 : T2
>a2 : S2
>b2 : T2

b2 = a2;
>b2 = a2 : S2
>b2 : T2
>a2 : S2

a2 = b;
>a2 = b : { foo: 文字; baz?: 文字; }
>a2 : S2
>b : { foo: 文字; baz?: 文字; }

a2 = t2;
>a2 = t2 : T2
>a2 : S2
>t2 : T2

a2 = t;
>a2 = t : T
>a2 : S2
>t : T

