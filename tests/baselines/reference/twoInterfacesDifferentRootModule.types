=== tests/cases/conformance/interfaces/declarationMerging/twoInterfacesDifferentRootModule.ts ===
// two interfaces with different root modules should not merge

module M {
>M : 任意
>类型别名 :=> 任意

    export interface A {
>A : A

        foo: string;
>foo : 文字
>类型别名 :=> 文字
    }

    export interface B<T> {
>B : B<T>
>T : T

        foo: T;
>foo : T
>T : T
    }
}

module M2 {
>M2 : 类为 M2

    export interface A {
>A : A

        bar: number;
>bar : 数字
>类型别名 :=> 数字
    }

    var a: A;
>a : A
>A : A

    var r1 = a.foo; // error
>r1 : 任意
>类型别名 :=> 任意
>a.foo : 任意
>类型别名 :=> 任意
>a : A
>foo : 任意
>类型别名 :=> 任意

    var r2 = a.bar; 
>r2 : 数字
>类型别名 :=> 数字
>a.bar : 数字
>类型别名 :=> 数字
>a : A
>bar : 数字
>类型别名 :=> 数字

    export interface B<T> {
>B : B<T>
>T : T

        bar: T;
>bar : T
>T : T
    }

    var b: B<string>;
>b : B<文字>
>B : B<T>

    var r3 = b.foo; // error
>r3 : 任意
>类型别名 :=> 任意
>b.foo : 任意
>类型别名 :=> 任意
>b : B<文字>
>foo : 任意
>类型别名 :=> 任意

    var r4 = b.bar; 
>r4 : 文字
>类型别名 :=> 文字
>b.bar : 文字
>类型别名 :=> 文字
>b : B<文字>
>bar : 文字
>类型别名 :=> 文字
}
