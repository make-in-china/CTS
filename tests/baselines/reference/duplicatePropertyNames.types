=== tests/cases/conformance/types/members/duplicatePropertyNames.ts ===
// duplicate property names are an error in all types

interface Number {
>Number : Number

    foo: string;
>foo : 文字
>类型别名 :=> 文字

    foo: string;
>foo : 文字
>类型别名 :=> 文字
}

interface String {
>String : String

    foo(): string;
>foo : { (): 文字; (): 文字; }

    foo(): string;
>foo : { (): 文字; (): 文字; }
}

interface Array<T> {
>Array : T[]
>T : T

    foo: T;
>foo : T
>T : T

    foo: T;
>foo : T
>T : T
}

class C {
>C : C

    foo: string;
>foo : 文字
>类型别名 :=> 文字

    foo: string;
>foo : 文字
>类型别名 :=> 文字

    bar(x) { }
>bar : (x: 任意) => 无值
>x : 任意
>类型别名 :=> 任意

    bar(x) { }
>bar : (x: 任意) => 无值
>x : 任意
>类型别名 :=> 任意

    baz = () => { }
>baz : () => 无值
>() => { } : () => 无值

    baz = () => { }
>baz : () => 无值
>() => { } : () => 无值
}

interface I {
>I : I

    foo: string;
>foo : 文字
>类型别名 :=> 文字

    foo: string;
>foo : 文字
>类型别名 :=> 文字
}

var a: {
>a : { foo: 文字; bar: () => {}; }

    foo: string;
>foo : 文字
>类型别名 :=> 文字

    foo: string;
>foo : 文字
>类型别名 :=> 文字

    bar: () => {};
>bar : () => {}

    bar: () => {};
>bar : () => {}
}

var b = {
>b : { foo: 文字; bar: () => 无值; }
>{    foo: '',    foo: '',    bar: () => { },    bar: () => { }} : { foo: 文字; bar: () => 无值; }

    foo: '',
>foo : 文字
>类型别名 :=> 文字
>'' : ""

    foo: '',
>foo : 文字
>类型别名 :=> 文字
>'' : ""

    bar: () => { },
>bar : () => 无值
>() => { } : () => 无值

    bar: () => { }
>bar : () => 无值
>() => { } : () => 无值
}

