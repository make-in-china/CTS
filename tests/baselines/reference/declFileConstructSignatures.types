=== tests/cases/compiler/declFileConstructSignatures_0.ts ===
export interface IConstructSignature {
>IConstructSignature : IConstructSignature

    /** This comment should appear for foo*/
    new (): string;
}

export interface IConstructSignatureWithParameters {
>IConstructSignatureWithParameters : IConstructSignatureWithParameters

    /** This is comment for function signature*/
    new (/** this is comment about a*/a: string,
>a : string
>类型别名 :=> 文字

        /** this is comment for b*/
        b: number);
>b : number
>类型别名 :=> 数字
}

export interface IConstructSignatureWithRestParameters {
>IConstructSignatureWithRestParameters : IConstructSignatureWithRestParameters

    new (a: string, ...rests: string[]): string;
>a : string
>类型别名 :=> 文字
>rests : string[]
}

export interface IConstructSignatureWithOverloads {
>IConstructSignatureWithOverloads : IConstructSignatureWithOverloads

    new (a: string): string;
>a : string
>类型别名 :=> 文字

    new (a: number): number;
>a : number
>类型别名 :=> 数字
}

export interface IConstructSignatureWithTypeParameters<T> {
>IConstructSignatureWithTypeParameters : IConstructSignatureWithTypeParameters<T>
>T : T

    /** This comment should appear for foo*/
    new (a: T): T;
>a : T
>T : T
>T : T
}

export interface IConstructSignatureWithOwnTypeParametes {
>IConstructSignatureWithOwnTypeParametes : IConstructSignatureWithOwnTypeParametes

    new <T extends IConstructSignature>(a: T): T;
>T : T
>IConstructSignature : IConstructSignature
>a : T
>T : T
>T : T
}

=== tests/cases/compiler/declFileConstructSignatures_1.ts ===
interface IGlobalConstructSignature {
>IGlobalConstructSignature : IGlobalConstructSignature

    /** This comment should appear for foo*/
    new (): string;
}

interface IGlobalConstructSignatureWithParameters {
>IGlobalConstructSignatureWithParameters : IGlobalConstructSignatureWithParameters

    /** This is comment for function signature*/
    new (/** this is comment about a*/a: string,
>a : string
>类型别名 :=> 文字

        /** this is comment for b*/
        b: number);
>b : number
>类型别名 :=> 数字
}

interface IGlobalConstructSignatureWithRestParameters {
>IGlobalConstructSignatureWithRestParameters : IGlobalConstructSignatureWithRestParameters

    new (a: string, ...rests: string[]): string;
>a : string
>类型别名 :=> 文字
>rests : string[]

}

interface IGlobalConstructSignatureWithOverloads {
>IGlobalConstructSignatureWithOverloads : IGlobalConstructSignatureWithOverloads

    new (a: string): string;
>a : string
>类型别名 :=> 文字

    new (a: number): number;
>a : number
>类型别名 :=> 数字
}

interface IGlobalConstructSignatureWithTypeParameters<T> {
>IGlobalConstructSignatureWithTypeParameters : IGlobalConstructSignatureWithTypeParameters<T>
>T : T

    /** This comment should appear for foo*/
    new (a: T): T;
>a : T
>T : T
>T : T
}

interface IGlobalConstructSignatureWithOwnTypeParametes {
>IGlobalConstructSignatureWithOwnTypeParametes : IGlobalConstructSignatureWithOwnTypeParametes

    new <T extends IGlobalConstructSignature>(a: T): T;
>T : T
>IGlobalConstructSignature : IGlobalConstructSignature
>a : T
>T : T
>T : T
}
