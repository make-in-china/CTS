=== tests/cases/conformance/jsdoc/a.js ===
/** @type {String} */
var S;
>S : 文字
>类型别名 :=> 文字

/** @type {string} */
var s;
>s : 文字
>类型别名 :=> 文字

/** @type {Number} */
var N;
>N : 数字
>类型别名 :=> 数字

/** @type {number} */
var n;
>n : 数字
>类型别名 :=> 数字

/** @type {Boolean} */
var B;
>B : 真假
>类型别名 :=> 真假

/** @type {boolean} */
var b;
>b : 真假
>类型别名 :=> 真假

/** @type {Void} */
var V;
>V : 无值
>类型别名 :=> 无值

/** @type {void} */
var v;
>v : 无值
>类型别名 :=> 无值

/** @type {Undefined} */
var U;
>U : 未定
>类型别名 :=> 未定

/** @type {undefined} */
var u;
>u : 未定
>类型别名 :=> 未定

/** @type {Null} */
var Nl;
>Nl : 空值
>类型别名 :=> 空值

/** @type {null} */
var nl;
>nl : 空值
>类型别名 :=> 空值

/** @type {Array} */
var A;
>A : 任意[]

/** @type {array} */
var a;
>a : 任意[]

/** @type {Promise} */
var P;
>P : Promise<任意>

/** @type {promise} */
var p;
>p : Promise<任意>

/** @type {?number} */
var nullable;
>nullable : 数字 | 空值

/** @type {Object} */
var Obj;
>Obj : 任意
>类型别名 :=> 任意

/** @type {object} */
var obj;
>obj : 任意
>类型别名 :=> 任意

/** @type {Function} */
var Func;
>Func : Function

=== tests/cases/conformance/jsdoc/b.ts ===
var S: string;
>S : 文字
>类型别名 :=> 文字

var s: string;
>s : 文字
>类型别名 :=> 文字

var N: number;
>N : 数字
>类型别名 :=> 数字

var n: number
>n : 数字
>类型别名 :=> 数字

var B: boolean;
>B : 真假
>类型别名 :=> 真假

var b: boolean;
>b : 真假
>类型别名 :=> 真假

var V :void;
>V : 无值
>类型别名 :=> 无值

var v: void;
>v : 无值
>类型别名 :=> 无值

var U: undefined;
>U : 未定
>类型别名 :=> 未定

var u: undefined;
>u : 未定
>类型别名 :=> 未定

var Nl: null;
>Nl : 空值
>类型别名 :=> 空值
>null : 空值
>类型别名 :=> 空值

var nl: null;
>nl : 空值
>类型别名 :=> 空值
>null : 空值
>类型别名 :=> 空值

var A: any[];
>A : 任意[]

var a: any[];
>a : 任意[]

var P: Promise<any>;
>P : Promise<任意>
>Promise : Promise<T>

var p: Promise<any>;
>p : Promise<任意>
>Promise : Promise<T>

var nullable: number | null;
>nullable : 数字 | 空值
>null : 空值
>类型别名 :=> 空值

var Obj: any;
>Obj : 任意
>类型别名 :=> 任意

var obj: any;
>obj : 任意
>类型别名 :=> 任意

var Func: Function;
>Func : Function
>Function : Function

