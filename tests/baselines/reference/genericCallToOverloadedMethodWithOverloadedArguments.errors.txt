tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts(23,38): error TS2345: Argument of type '{ (n: 数字): Promise<数字>; (s: 文字): Promise<文字>; }' is not assignable to parameter of type '(x: 数字) => Promise<文字>'.
  Type 'Promise<数字>' is not assignable to type 'Promise<文字>'.
    Type '数字' is not assignable to type '文字'.
tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts(52,38): error TS2345: Argument of type '{ (n: 数字): Promise<数字>; (s: 文字): Promise<文字>; }' is not assignable to parameter of type '(x: 数字) => Promise<文字>'.
  Type 'Promise<数字>' is not assignable to type 'Promise<文字>'.
    Type '数字' is not assignable to type '文字'.
tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts(68,38): error TS2345: Argument of type '{ (n: 数字): Promise<数字>; (s: 文字): Promise<文字>; }' is not assignable to parameter of type '(x: 数字) => Promise<文字>'.
  Type 'Promise<数字>' is not assignable to type 'Promise<文字>'.
    Type '数字' is not assignable to type '文字'.
tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts(84,38): error TS2345: Argument of type '{ (n: 数字): Promise<数字>; (s: 文字): Promise<文字>; (b: 真假): Promise<真假>; }' is not assignable to parameter of type '(x: 数字) => Promise<真假>'.
  Type 'Promise<数字>' is not assignable to type 'Promise<真假>'.
    Type '数字' is not assignable to type '真假'.


==== tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts (4 errors) ====
    module m1 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
    }
    
    //////////////////////////////////////
    
    module m2 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
        declare function testFunction(s: string): Promise<string>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
                                         ~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ (n: 数字): Promise<数字>; (s: 文字): Promise<文字>; }' is not assignable to parameter of type '(x: 数字) => Promise<文字>'.
!!! error TS2345:   Type 'Promise<数字>' is not assignable to type 'Promise<文字>'.
!!! error TS2345:     Type '数字' is not assignable to type '文字'.
    }
    
    //////////////////////////////////////
    
    module m3 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
            then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
    }
    
    //////////////////////////////////////
    
    module m4 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
            then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
        declare function testFunction(s: string): Promise<string>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
                                         ~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ (n: 数字): Promise<数字>; (s: 文字): Promise<文字>; }' is not assignable to parameter of type '(x: 数字) => Promise<文字>'.
!!! error TS2345:   Type 'Promise<数字>' is not assignable to type 'Promise<文字>'.
!!! error TS2345:     Type '数字' is not assignable to type '文字'.
    }
    
    //////////////////////////////////////
    
    module m5 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
            then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
            then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => U, progress?: (preservation: any) => void): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
        declare function testFunction(s: string): Promise<string>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
                                         ~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ (n: 数字): Promise<数字>; (s: 文字): Promise<文字>; }' is not assignable to parameter of type '(x: 数字) => Promise<文字>'.
!!! error TS2345:   Type 'Promise<数字>' is not assignable to type 'Promise<文字>'.
!!! error TS2345:     Type '数字' is not assignable to type '文字'.
    }
    
    //////////////////////////////////////
    
    module m6 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
            then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
        declare function testFunction(s: string): Promise<string>;
        declare function testFunction(b: boolean): Promise<boolean>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
                                         ~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ (n: 数字): Promise<数字>; (s: 文字): Promise<文字>; (b: 真假): Promise<真假>; }' is not assignable to parameter of type '(x: 数字) => Promise<真假>'.
!!! error TS2345:   Type 'Promise<数字>' is not assignable to type 'Promise<真假>'.
!!! error TS2345:     Type '数字' is not assignable to type '真假'.
    }
    