=== tests/cases/compiler/declFileObjectLiteralWithAccessors.ts ===
function /*1*/makePoint(x: number) { 
>makePoint : (x: number) => { b: number; x: number; }
>x : number
>类型别名 :=> 数字

    return {
>{        b: 10,        get x() { return x; },        set x(a: number) { this.b = a; }    } : { b: number; x: number; }

        b: 10,
>b : number
>类型别名 :=> 数字
>10 : 10

        get x() { return x; },
>x : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字

        set x(a: number) { this.b = a; }
>x : number
>类型别名 :=> 数字
>a : number
>类型别名 :=> 数字
>this.b = a : number
>类型别名 :=> 数字
>this.b : any
>类型别名 :=> 任意
>this : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意
>a : number
>类型别名 :=> 数字

    };
};
var /*4*/point = makePoint(2);
>point : { b: number; x: number; }
>makePoint(2) : { b: number; x: number; }
>makePoint : (x: number) => { b: number; x: number; }
>2 : 2

var /*2*/x = point.x;
>x : number
>类型别名 :=> 数字
>point.x : number
>类型别名 :=> 数字
>point : { b: number; x: number; }
>x : number
>类型别名 :=> 数字

point./*3*/x = 30;
>point./*3*/x = 30 : 30
>point./*3*/x : number
>类型别名 :=> 数字
>point : { b: number; x: number; }
>x : number
>类型别名 :=> 数字
>30 : 30

