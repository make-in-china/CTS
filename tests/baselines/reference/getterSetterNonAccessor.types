=== tests/cases/compiler/getterSetterNonAccessor.ts ===
function getFunc():any{return 0;}
>getFunc : () => 任意
>0 : 0

function setFunc(v){}          
>setFunc : (v: 任意) => 无值
>v : 任意
>类型别名 :=> 任意

Object.defineProperty({}, "0", <PropertyDescriptor>({
>Object.defineProperty({}, "0", <PropertyDescriptor>({          get: getFunc,          set: setFunc,          configurable: true      })) : 任意
>类型别名 :=> 任意
>Object.defineProperty : (o: 任意, p: 文字, attributes: PropertyDescriptor & ThisType<任意>) => 任意
>Object : ObjectConstructor
>defineProperty : (o: 任意, p: 文字, attributes: PropertyDescriptor & ThisType<任意>) => 任意
>{} : {}
>"0" : "0"
><PropertyDescriptor>({          get: getFunc,          set: setFunc,          configurable: true      }) : PropertyDescriptor
>PropertyDescriptor : PropertyDescriptor
>({          get: getFunc,          set: setFunc,          configurable: true      }) : { get: () => 任意; set: (v: 任意) => 无值; configurable: 为真; }
>{          get: getFunc,          set: setFunc,          configurable: true      } : { get: () => 任意; set: (v: 任意) => 无值; configurable: 为真; }

          get: getFunc,
>get : () => 任意
>getFunc : () => 任意

          set: setFunc,
>set : (v: 任意) => 无值
>setFunc : (v: 任意) => 无值

          configurable: true
>configurable : 真假
>类型别名 :=> 真假
>true : 为真
>类型别名 :=> 为真

      }));

