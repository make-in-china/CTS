=== tests/cases/compiler/fatarrowfunctionsInFunctions.ts ===
declare function setTimeout(expression: any, msec?: number, language?: any): number;
>setTimeout : (expression: 任意, msec?: 数字, language?: 任意) => 数字
>expression : 任意
>类型别名 :=> 任意
>msec : 数字
>类型别名 :=> 数字
>language : 任意
>类型别名 :=> 任意

var messenger = {
>messenger : { message: 文字; start: () => 无值; }
>{    message: "Hello World",    start: function() {        var _self = this;        setTimeout(function() {            _self.message.toString();         }, 3000);     }} : { message: 文字; start: () => 无值; }

    message: "Hello World",
>message : 文字
>类型别名 :=> 文字
>"Hello World" : "Hello World"

    start: function() {
>start : () => 无值
>function() {        var _self = this;        setTimeout(function() {            _self.message.toString();         }, 3000);     } : () => 无值

        var _self = this;
>_self : 任意
>类型别名 :=> 任意
>this : 任意
>类型别名 :=> 任意

        setTimeout(function() {
>setTimeout(function() {            _self.message.toString();         }, 3000) : 数字
>类型别名 :=> 数字
>setTimeout : (expression: 任意, msec?: 数字, language?: 任意) => 数字
>function() {            _self.message.toString();         } : () => 无值

            _self.message.toString(); 
>_self.message.toString() : 任意
>类型别名 :=> 任意
>_self.message.toString : 任意
>类型别名 :=> 任意
>_self.message : 任意
>类型别名 :=> 任意
>_self : 任意
>类型别名 :=> 任意
>message : 任意
>类型别名 :=> 任意
>toString : 任意
>类型别名 :=> 任意

        }, 3000); 
>3000 : 3000
    }
}; 
messenger.start(); 
>messenger.start() : 无值
>类型别名 :=> 无值
>messenger.start : () => 无值
>messenger : { message: 文字; start: () => 无值; }
>start : () => 无值

