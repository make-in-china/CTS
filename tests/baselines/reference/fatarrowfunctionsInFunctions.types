=== tests/cases/compiler/fatarrowfunctionsInFunctions.ts ===
declare function setTimeout(expression: any, msec?: number, language?: any): number;
>setTimeout : (expression: any, msec?: number, language?: any) => number
>expression : any
>类型别名 :=> 任意
>msec : number
>类型别名 :=> 数字
>language : any
>类型别名 :=> 任意

var messenger = {
>messenger : { message: string; start: () => void; }
>{    message: "Hello World",    start: function() {        var _self = this;        setTimeout(function() {            _self.message.toString();         }, 3000);     }} : { message: string; start: () => void; }

    message: "Hello World",
>message : string
>类型别名 :=> 文字
>"Hello World" : "Hello World"

    start: function() {
>start : () => void
>function() {        var _self = this;        setTimeout(function() {            _self.message.toString();         }, 3000);     } : () => void

        var _self = this;
>_self : any
>类型别名 :=> 任意
>this : any
>类型别名 :=> 任意

        setTimeout(function() {
>setTimeout(function() {            _self.message.toString();         }, 3000) : number
>类型别名 :=> 数字
>setTimeout : (expression: any, msec?: number, language?: any) => number
>function() {            _self.message.toString();         } : () => void

            _self.message.toString(); 
>_self.message.toString() : any
>类型别名 :=> 任意
>_self.message.toString : any
>类型别名 :=> 任意
>_self.message : any
>类型别名 :=> 任意
>_self : any
>类型别名 :=> 任意
>message : any
>类型别名 :=> 任意
>toString : any
>类型别名 :=> 任意

        }, 3000); 
>3000 : 3000
    }
}; 
messenger.start(); 
>messenger.start() : void
>类型别名 :=> 无值
>messenger.start : () => void
>messenger : { message: string; start: () => void; }
>start : () => void

