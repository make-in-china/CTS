=== tests/cases/conformance/es6/Symbols/symbolDeclarationEmit12.ts ===
module M {
>M : typeof M

    interface I { }
>I : I

    export class C {
>C : C

        [Symbol.iterator]: I;
>Symbol.iterator : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>iterator : symbol
>类型别名 :=> 符号
>I : I

        [Symbol.toPrimitive](x: I) { }
>Symbol.toPrimitive : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>toPrimitive : symbol
>类型别名 :=> 符号
>x : I
>I : I

        [Symbol.isConcatSpreadable](): I {
>Symbol.isConcatSpreadable : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>isConcatSpreadable : symbol
>类型别名 :=> 符号
>I : I

            return undefined
>undefined : undefined
>类型别名 :=> 未定
        }
        get [Symbol.toPrimitive]() { return undefined; }
>Symbol.toPrimitive : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>toPrimitive : symbol
>类型别名 :=> 符号
>undefined : undefined
>类型别名 :=> 未定

        set [Symbol.toPrimitive](x: I) { }
>Symbol.toPrimitive : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>toPrimitive : symbol
>类型别名 :=> 符号
>x : I
>I : I
    }
}
