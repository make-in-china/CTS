=== tests/cases/compiler/library_DatePrototypeProperties.ts ===
// Properties of the Date prototype object as per ES5 spec
// http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.5
Date.prototype.constructor;
>Date.prototype.constructor : Function
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>constructor : Function

Date.prototype.toString();
>Date.prototype.toString() : 文字
>类型别名 :=> 文字
>Date.prototype.toString : () => 文字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toString : () => 文字

Date.prototype.toDateString();
>Date.prototype.toDateString() : 文字
>类型别名 :=> 文字
>Date.prototype.toDateString : () => 文字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toDateString : () => 文字

Date.prototype.toTimeString();
>Date.prototype.toTimeString() : 文字
>类型别名 :=> 文字
>Date.prototype.toTimeString : () => 文字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toTimeString : () => 文字

Date.prototype.toLocaleString();
>Date.prototype.toLocaleString() : 文字
>类型别名 :=> 文字
>Date.prototype.toLocaleString : { (): 文字; (locales?: 文字 | 文字[], options?: Intl.DateTimeFormatOptions): 文字; }
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toLocaleString : { (): 文字; (locales?: 文字 | 文字[], options?: Intl.DateTimeFormatOptions): 文字; }

Date.prototype.toLocaleDateString();
>Date.prototype.toLocaleDateString() : 文字
>类型别名 :=> 文字
>Date.prototype.toLocaleDateString : { (): 文字; (locales?: 文字 | 文字[], options?: Intl.DateTimeFormatOptions): 文字; }
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toLocaleDateString : { (): 文字; (locales?: 文字 | 文字[], options?: Intl.DateTimeFormatOptions): 文字; }

Date.prototype.toLocaleTimeString();
>Date.prototype.toLocaleTimeString() : 文字
>类型别名 :=> 文字
>Date.prototype.toLocaleTimeString : { (): 文字; (locales?: 文字 | 文字[], options?: Intl.DateTimeFormatOptions): 文字; }
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toLocaleTimeString : { (): 文字; (locales?: 文字 | 文字[], options?: Intl.DateTimeFormatOptions): 文字; }

Date.prototype.valueOf();
>Date.prototype.valueOf() : 数字
>类型别名 :=> 数字
>Date.prototype.valueOf : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>valueOf : () => 数字

Date.prototype.getTime();
>Date.prototype.getTime() : 数字
>类型别名 :=> 数字
>Date.prototype.getTime : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getTime : () => 数字

Date.prototype.getFullYear();
>Date.prototype.getFullYear() : 数字
>类型别名 :=> 数字
>Date.prototype.getFullYear : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getFullYear : () => 数字

Date.prototype.getUTCFullYear();
>Date.prototype.getUTCFullYear() : 数字
>类型别名 :=> 数字
>Date.prototype.getUTCFullYear : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCFullYear : () => 数字

Date.prototype.getMonth();
>Date.prototype.getMonth() : 数字
>类型别名 :=> 数字
>Date.prototype.getMonth : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getMonth : () => 数字

Date.prototype.getUTCMonth();
>Date.prototype.getUTCMonth() : 数字
>类型别名 :=> 数字
>Date.prototype.getUTCMonth : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCMonth : () => 数字

Date.prototype.getDate();
>Date.prototype.getDate() : 数字
>类型别名 :=> 数字
>Date.prototype.getDate : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getDate : () => 数字

Date.prototype.getUTCDate();
>Date.prototype.getUTCDate() : 数字
>类型别名 :=> 数字
>Date.prototype.getUTCDate : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCDate : () => 数字

Date.prototype.getDay();
>Date.prototype.getDay() : 数字
>类型别名 :=> 数字
>Date.prototype.getDay : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getDay : () => 数字

Date.prototype.getUTCDay();
>Date.prototype.getUTCDay() : 数字
>类型别名 :=> 数字
>Date.prototype.getUTCDay : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCDay : () => 数字

Date.prototype.getHours();
>Date.prototype.getHours() : 数字
>类型别名 :=> 数字
>Date.prototype.getHours : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getHours : () => 数字

Date.prototype.getUTCHours();
>Date.prototype.getUTCHours() : 数字
>类型别名 :=> 数字
>Date.prototype.getUTCHours : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCHours : () => 数字

Date.prototype.getMinutes();
>Date.prototype.getMinutes() : 数字
>类型别名 :=> 数字
>Date.prototype.getMinutes : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getMinutes : () => 数字

Date.prototype.getUTCMinutes();
>Date.prototype.getUTCMinutes() : 数字
>类型别名 :=> 数字
>Date.prototype.getUTCMinutes : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCMinutes : () => 数字

Date.prototype.getSeconds();
>Date.prototype.getSeconds() : 数字
>类型别名 :=> 数字
>Date.prototype.getSeconds : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getSeconds : () => 数字

Date.prototype.getUTCSeconds();
>Date.prototype.getUTCSeconds() : 数字
>类型别名 :=> 数字
>Date.prototype.getUTCSeconds : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCSeconds : () => 数字

Date.prototype.getMilliseconds();
>Date.prototype.getMilliseconds() : 数字
>类型别名 :=> 数字
>Date.prototype.getMilliseconds : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getMilliseconds : () => 数字

Date.prototype.getUTCMilliseconds();
>Date.prototype.getUTCMilliseconds() : 数字
>类型别名 :=> 数字
>Date.prototype.getUTCMilliseconds : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCMilliseconds : () => 数字

Date.prototype.getTimezoneOffset();
>Date.prototype.getTimezoneOffset() : 数字
>类型别名 :=> 数字
>Date.prototype.getTimezoneOffset : () => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getTimezoneOffset : () => 数字

Date.prototype.setTime(0);
>Date.prototype.setTime(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setTime : (time: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setTime : (time: 数字) => 数字
>0 : 0

Date.prototype.setMilliseconds(0);
>Date.prototype.setMilliseconds(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setMilliseconds : (ms: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setMilliseconds : (ms: 数字) => 数字
>0 : 0

Date.prototype.setUTCMilliseconds(0);
>Date.prototype.setUTCMilliseconds(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setUTCMilliseconds : (ms: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCMilliseconds : (ms: 数字) => 数字
>0 : 0

Date.prototype.setSeconds(0);
>Date.prototype.setSeconds(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setSeconds : (sec: 数字, ms?: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setSeconds : (sec: 数字, ms?: 数字) => 数字
>0 : 0

Date.prototype.setUTCSeconds(0);
>Date.prototype.setUTCSeconds(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setUTCSeconds : (sec: 数字, ms?: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCSeconds : (sec: 数字, ms?: 数字) => 数字
>0 : 0

Date.prototype.setMinutes(0);
>Date.prototype.setMinutes(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setMinutes : (min: 数字, sec?: 数字, ms?: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setMinutes : (min: 数字, sec?: 数字, ms?: 数字) => 数字
>0 : 0

Date.prototype.setUTCMinutes(0);
>Date.prototype.setUTCMinutes(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setUTCMinutes : (min: 数字, sec?: 数字, ms?: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCMinutes : (min: 数字, sec?: 数字, ms?: 数字) => 数字
>0 : 0

Date.prototype.setHours(0);
>Date.prototype.setHours(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setHours : (hours: 数字, min?: 数字, sec?: 数字, ms?: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setHours : (hours: 数字, min?: 数字, sec?: 数字, ms?: 数字) => 数字
>0 : 0

Date.prototype.setUTCHours(0);
>Date.prototype.setUTCHours(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setUTCHours : (hours: 数字, min?: 数字, sec?: 数字, ms?: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCHours : (hours: 数字, min?: 数字, sec?: 数字, ms?: 数字) => 数字
>0 : 0

Date.prototype.setDate(0);
>Date.prototype.setDate(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setDate : (date: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setDate : (date: 数字) => 数字
>0 : 0

Date.prototype.setUTCDate(0);
>Date.prototype.setUTCDate(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setUTCDate : (date: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCDate : (date: 数字) => 数字
>0 : 0

Date.prototype.setMonth(0);
>Date.prototype.setMonth(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setMonth : (month: 数字, date?: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setMonth : (month: 数字, date?: 数字) => 数字
>0 : 0

Date.prototype.setUTCMonth(0);
>Date.prototype.setUTCMonth(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setUTCMonth : (month: 数字, date?: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCMonth : (month: 数字, date?: 数字) => 数字
>0 : 0

Date.prototype.setFullYear(0);
>Date.prototype.setFullYear(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setFullYear : (year: 数字, month?: 数字, date?: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setFullYear : (year: 数字, month?: 数字, date?: 数字) => 数字
>0 : 0

Date.prototype.setUTCFullYear(0);
>Date.prototype.setUTCFullYear(0) : 数字
>类型别名 :=> 数字
>Date.prototype.setUTCFullYear : (year: 数字, month?: 数字, date?: 数字) => 数字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCFullYear : (year: 数字, month?: 数字, date?: 数字) => 数字
>0 : 0

Date.prototype.toUTCString();
>Date.prototype.toUTCString() : 文字
>类型别名 :=> 文字
>Date.prototype.toUTCString : () => 文字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toUTCString : () => 文字

Date.prototype.toISOString();
>Date.prototype.toISOString() : 文字
>类型别名 :=> 文字
>Date.prototype.toISOString : () => 文字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toISOString : () => 文字

Date.prototype.toJSON(null);
>Date.prototype.toJSON(null) : 文字
>类型别名 :=> 文字
>Date.prototype.toJSON : (key?: 任意) => 文字
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toJSON : (key?: 任意) => 文字
>null : 空值
>类型别名 :=> 空值

