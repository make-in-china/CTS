=== tests/cases/compiler/a.ts ===
import { b } from './b';
>b : { f: () => 无值; }

export const a = {
>a : { f: () => 无值; }
>{    f: () => {        class A { }        class B extends A { }        b.f();    }} : { f: () => 无值; }

    f: () => {
>f : () => 无值
>() => {        class A { }        class B extends A { }        b.f();    } : () => 无值

        class A { }
>A : A

        class B extends A { }
>B : B
>A : A

        b.f();
>b.f() : 无值
>类型别名 :=> 无值
>b.f : () => 无值
>b : { f: () => 无值; }
>f : () => 无值
    }
};
=== tests/cases/compiler/b.ts ===
import { a } from './a';
>a : { f: () => 无值; }

export const b = {
>b : { f: () => 无值; }
>{    f: () => {        class A { }        class B extends A { }        a.f();    }} : { f: () => 无值; }

    f: () => {
>f : () => 无值
>() => {        class A { }        class B extends A { }        a.f();    } : () => 无值

        class A { }
>A : A

        class B extends A { }
>B : B
>A : A

        a.f();
>a.f() : 无值
>类型别名 :=> 无值
>a.f : () => 无值
>a : { f: () => 无值; }
>f : () => 无值
    }
};
