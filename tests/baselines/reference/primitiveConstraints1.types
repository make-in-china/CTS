=== tests/cases/compiler/primitiveConstraints1.ts ===
function foo1<T extends U, U>(t: T, u: U) { }
>foo1 : <T 扩展 U, U>(t: T, u: U) => 无值
>T : T
>U : U
>U : U
>t : T
>T : T
>u : U
>U : U

foo1<string, number>('hm', 1); // no error
>foo1<string, number>('hm', 1) : 任意
>类型别名 :=> 任意
>foo1 : <T 扩展 U, U>(t: T, u: U) => 无值
>'hm' : "hm"
>1 : 1
 
function foo2<T, U extends T>(t: T, u: U) { }
>foo2 : <T, U 扩展 T>(t: T, u: U) => 无值
>T : T
>U : U
>T : T
>t : T
>T : T
>u : U
>U : U

foo2<number, string>(1, 'hm'); // error
>foo2<number, string>(1, 'hm') : 任意
>类型别名 :=> 任意
>foo2 : <T, U 扩展 T>(t: T, u: U) => 无值
>1 : 1
>'hm' : "hm"

