=== tests/cases/conformance/types/typeRelationships/recursiveTypes/objectTypeWithRecursiveWrappedProperty2.ts ===
// Basic recursive type

class List<T> {
>List : List<T>
>T : T

    data: T;
>data : T
>T : T

    next: List<List<T>>;
>next : List<List<T>>
>List : List<T>
>List : List<T>
>T : T
}

var list1 = new List<number>();
>list1 : List<数字>
>new List<number>() : List<数字>
>List : 类为 List

var list2 = new List<number>();
>list2 : List<数字>
>new List<number>() : List<数字>
>List : 类为 List

var list3 = new List<string>();
>list3 : List<文字>
>new List<string>() : List<文字>
>List : 类为 List

list1 = list2; // ok
>list1 = list2 : List<数字>
>list1 : List<数字>
>list2 : List<数字>

list1 = list3; // error
>list1 = list3 : List<文字>
>list1 : List<数字>
>list3 : List<文字>

