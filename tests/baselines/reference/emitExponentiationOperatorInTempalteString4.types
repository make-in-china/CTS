=== tests/cases/conformance/es7/exponentiationOperator/emitExponentiationOperatorInTempalteString4.ts ===
var t1 = 10;
>t1 : number
>类型别名 :=> 数字
>10 : 10

var t2 = 10;
>t2 : number
>类型别名 :=> 数字
>10 : 10

var s;
>s : any
>类型别名 :=> 任意

// With TemplateTail
`${t1 ** -t2} world`;
>`${t1 ** -t2} world` : string
>类型别名 :=> 文字
>t1 ** -t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>-t2 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字

`${(-t1) ** t2 - t1} world`;
>`${(-t1) ** t2 - t1} world` : string
>类型别名 :=> 文字
>(-t1) ** t2 - t1 : number
>类型别名 :=> 数字
>(-t1) ** t2 : number
>类型别名 :=> 数字
>(-t1) : number
>类型别名 :=> 数字
>-t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`${(-++t1) ** t2 - t1} world`;
>`${(-++t1) ** t2 - t1} world` : string
>类型别名 :=> 文字
>(-++t1) ** t2 - t1 : number
>类型别名 :=> 数字
>(-++t1) ** t2 : number
>类型别名 :=> 数字
>(-++t1) : number
>类型别名 :=> 数字
>-++t1 : number
>类型别名 :=> 数字
>++t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`${(-t1++) ** t2 - t1} world`;
>`${(-t1++) ** t2 - t1} world` : string
>类型别名 :=> 文字
>(-t1++) ** t2 - t1 : number
>类型别名 :=> 数字
>(-t1++) ** t2 : number
>类型别名 :=> 数字
>(-t1++) : number
>类型别名 :=> 数字
>-t1++ : number
>类型别名 :=> 数字
>t1++ : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`${(~t1) ** t2 ** --t1 } world`;
>`${(~t1) ** t2 ** --t1 } world` : string
>类型别名 :=> 文字
>(~t1) ** t2 ** --t1 : number
>类型别名 :=> 数字
>(~t1) : number
>类型别名 :=> 数字
>~t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 ** --t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>--t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`${typeof (t1 ** t2 ** t1) } world`;
>`${typeof (t1 ** t2 ** t1) } world` : string
>类型别名 :=> 文字
>typeof (t1 ** t2 ** t1) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>(t1 ** t2 ** t1) : number
>类型别名 :=> 数字
>t1 ** t2 ** t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 ** t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

// TempateHead & TemplateTail are empt
`${t1 ** -t2} hello world ${t1 ** -t2}`;
>`${t1 ** -t2} hello world ${t1 ** -t2}` : string
>类型别名 :=> 文字
>t1 ** -t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>-t2 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 ** -t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>-t2 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字

`${(-t1) ** t2 - t1} hello world ${(-t1) ** t2 - t1}`;
>`${(-t1) ** t2 - t1} hello world ${(-t1) ** t2 - t1}` : string
>类型别名 :=> 文字
>(-t1) ** t2 - t1 : number
>类型别名 :=> 数字
>(-t1) ** t2 : number
>类型别名 :=> 数字
>(-t1) : number
>类型别名 :=> 数字
>-t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>(-t1) ** t2 - t1 : number
>类型别名 :=> 数字
>(-t1) ** t2 : number
>类型别名 :=> 数字
>(-t1) : number
>类型别名 :=> 数字
>-t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`${(-++t1) ** t2 - t1} hello world ${t1 ** (-++t1) **- t1}`;
>`${(-++t1) ** t2 - t1} hello world ${t1 ** (-++t1) **- t1}` : string
>类型别名 :=> 文字
>(-++t1) ** t2 - t1 : number
>类型别名 :=> 数字
>(-++t1) ** t2 : number
>类型别名 :=> 数字
>(-++t1) : number
>类型别名 :=> 数字
>-++t1 : number
>类型别名 :=> 数字
>++t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t1 ** (-++t1) **- t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>(-++t1) **- t1 : number
>类型别名 :=> 数字
>(-++t1) : number
>类型别名 :=> 数字
>-++t1 : number
>类型别名 :=> 数字
>++t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>- t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`${(-t1++) ** t2 - t1} hello world ${t2 ** (-t1++) **  - t1}`;
>`${(-t1++) ** t2 - t1} hello world ${t2 ** (-t1++) **  - t1}` : string
>类型别名 :=> 文字
>(-t1++) ** t2 - t1 : number
>类型别名 :=> 数字
>(-t1++) ** t2 : number
>类型别名 :=> 数字
>(-t1++) : number
>类型别名 :=> 数字
>-t1++ : number
>类型别名 :=> 数字
>t1++ : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 ** (-t1++) **  - t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>(-t1++) **  - t1 : number
>类型别名 :=> 数字
>(-t1++) : number
>类型别名 :=> 数字
>-t1++ : number
>类型别名 :=> 数字
>t1++ : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>- t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`${(~t1) ** t2 ** --t1 } hello world ${(~t1) ** t2 ** --t1 }`;
>`${(~t1) ** t2 ** --t1 } hello world ${(~t1) ** t2 ** --t1 }` : string
>类型别名 :=> 文字
>(~t1) ** t2 ** --t1 : number
>类型别名 :=> 数字
>(~t1) : number
>类型别名 :=> 数字
>~t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 ** --t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>--t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>(~t1) ** t2 ** --t1 : number
>类型别名 :=> 数字
>(~t1) : number
>类型别名 :=> 数字
>~t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 ** --t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>--t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`${typeof (t1 ** t2 ** t1)} hello world ${typeof (t1 ** t2 ** t1)}`;
>`${typeof (t1 ** t2 ** t1)} hello world ${typeof (t1 ** t2 ** t1)}` : string
>类型别名 :=> 文字
>typeof (t1 ** t2 ** t1) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>(t1 ** t2 ** t1) : number
>类型别名 :=> 数字
>t1 ** t2 ** t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 ** t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>typeof (t1 ** t2 ** t1) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>(t1 ** t2 ** t1) : number
>类型别名 :=> 数字
>t1 ** t2 ** t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 ** t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

// With templateHead
`hello ${(-t1) ** t2 - t1}`;
>`hello ${(-t1) ** t2 - t1}` : string
>类型别名 :=> 文字
>(-t1) ** t2 - t1 : number
>类型别名 :=> 数字
>(-t1) ** t2 : number
>类型别名 :=> 数字
>(-t1) : number
>类型别名 :=> 数字
>-t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`hello ${(-++t1) ** t2 - t1}`;
>`hello ${(-++t1) ** t2 - t1}` : string
>类型别名 :=> 文字
>(-++t1) ** t2 - t1 : number
>类型别名 :=> 数字
>(-++t1) ** t2 : number
>类型别名 :=> 数字
>(-++t1) : number
>类型别名 :=> 数字
>-++t1 : number
>类型别名 :=> 数字
>++t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`hello ${(-t1++) ** t2 - t1}`;
>`hello ${(-t1++) ** t2 - t1}` : string
>类型别名 :=> 文字
>(-t1++) ** t2 - t1 : number
>类型别名 :=> 数字
>(-t1++) ** t2 : number
>类型别名 :=> 数字
>(-t1++) : number
>类型别名 :=> 数字
>-t1++ : number
>类型别名 :=> 数字
>t1++ : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`hello ${(~t1) ** t2 ** --t1 }`;
>`hello ${(~t1) ** t2 ** --t1 }` : string
>类型别名 :=> 文字
>(~t1) ** t2 ** --t1 : number
>类型别名 :=> 数字
>(~t1) : number
>类型别名 :=> 数字
>~t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 ** --t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>--t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

`hello ${typeof (t1 ** t2 ** t1)}`;
>`hello ${typeof (t1 ** t2 ** t1)}` : string
>类型别名 :=> 文字
>typeof (t1 ** t2 ** t1) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>(t1 ** t2 ** t1) : number
>类型别名 :=> 数字
>t1 ** t2 ** t1 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字
>t2 ** t1 : number
>类型别名 :=> 数字
>t2 : number
>类型别名 :=> 数字
>t1 : number
>类型别名 :=> 数字

