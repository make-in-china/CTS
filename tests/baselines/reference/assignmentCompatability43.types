=== tests/cases/compiler/assignmentCompatability43.ts ===
module __test1__ {
>__test1__ : 类为 __test1__

    export interface interfaceWithPublicAndOptional<T,U> { one: T; two?: U; };  var obj4: interfaceWithPublicAndOptional<number,string> = { one: 1 };;
>interfaceWithPublicAndOptional : interfaceWithPublicAndOptional<T, U>
>T : T
>U : U
>one : T
>T : T
>two : U
>U : U
>obj4 : interfaceWithPublicAndOptional<数字, 文字>
>interfaceWithPublicAndOptional : interfaceWithPublicAndOptional<T, U>
>{ one: 1 } : { one: 数字; }
>one : 数字
>类型别名 :=> 数字
>1 : 1

    export var __val__obj4 = obj4;
>__val__obj4 : interfaceWithPublicAndOptional<数字, 文字>
>obj4 : interfaceWithPublicAndOptional<数字, 文字>
}
module __test2__ {
>__test2__ : 类为 __test2__

    export                   interface interfaceTwo<T,U> { one: T; two: U; };   var obj2: interfaceTwo<number,string> = { one: 1, two: "a" };;
>interfaceTwo : interfaceTwo<T, U>
>T : T
>U : U
>one : T
>T : T
>two : U
>U : U
>obj2 : interfaceTwo<数字, 文字>
>interfaceTwo : interfaceTwo<T, U>
>{ one: 1, two: "a" } : { one: 数字; two: 文字; }
>one : 数字
>类型别名 :=> 数字
>1 : 1
>two : 文字
>类型别名 :=> 文字
>"a" : "a"

    export var __val__obj2 = obj2;
>__val__obj2 : interfaceTwo<数字, 文字>
>obj2 : interfaceTwo<数字, 文字>
}
__test2__.__val__obj2 = __test1__.__val__obj4
>__test2__.__val__obj2 = __test1__.__val__obj4 : __test1__.interfaceWithPublicAndOptional<数字, 文字>
>__test2__.__val__obj2 : __test2__.interfaceTwo<数字, 文字>
>__test2__ : 类为 __test2__
>__val__obj2 : __test2__.interfaceTwo<数字, 文字>
>__test1__.__val__obj4 : __test1__.interfaceWithPublicAndOptional<数字, 文字>
>__test1__ : 类为 __test1__
>__val__obj4 : __test1__.interfaceWithPublicAndOptional<数字, 文字>

