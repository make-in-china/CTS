=== tests/cases/compiler/es2017basicAsync.ts ===
async (): Promise<void> => {
>async (): Promise<void> => {    await 0;} : () => Promise<无值>
>Promise : Promise<T>

    await 0;
>await 0 : 0
>0 : 0
}

async function asyncFunc() {
>asyncFunc : () => Promise<无值>

    await 0;
>await 0 : 0
>0 : 0
}

const asyncArrowFunc = async (): Promise<void> => {
>asyncArrowFunc : () => Promise<无值>
>async (): Promise<void> => {    await 0;} : () => Promise<无值>
>Promise : Promise<T>

    await 0;
>await 0 : 0
>0 : 0
}

async function asyncIIFE() {
>asyncIIFE : () => Promise<无值>

    await 0;
>await 0 : 0
>0 : 0

    await (async function(): Promise<void> {
>await (async function(): Promise<void> {        await 1;    })() : 无值
>类型别名 :=> 无值
>(async function(): Promise<void> {        await 1;    })() : Promise<无值>
>(async function(): Promise<void> {        await 1;    }) : () => Promise<无值>
>async function(): Promise<void> {        await 1;    } : () => Promise<无值>
>Promise : Promise<T>

        await 1;
>await 1 : 1
>1 : 1

    })();
    
    await (async function asyncNamedFunc(): Promise<void> {
>await (async function asyncNamedFunc(): Promise<void> {        await 1;    })() : 无值
>类型别名 :=> 无值
>(async function asyncNamedFunc(): Promise<void> {        await 1;    })() : Promise<无值>
>(async function asyncNamedFunc(): Promise<void> {        await 1;    }) : () => Promise<无值>
>async function asyncNamedFunc(): Promise<void> {        await 1;    } : () => Promise<无值>
>asyncNamedFunc : () => Promise<无值>
>Promise : Promise<T>

        await 1;
>await 1 : 1
>1 : 1

    })();
    
    await (async (): Promise<void> => {
>await (async (): Promise<void> => {        await 1;    })() : 无值
>类型别名 :=> 无值
>(async (): Promise<void> => {        await 1;    })() : Promise<无值>
>(async (): Promise<void> => {        await 1;    }) : () => Promise<无值>
>async (): Promise<void> => {        await 1;    } : () => Promise<无值>
>Promise : Promise<T>

        await 1;
>await 1 : 1
>1 : 1

    })();
}

class AsyncClass {
>AsyncClass : AsyncClass

    asyncPropFunc = async function(): Promise<void> {
>asyncPropFunc : () => Promise<无值>
>async function(): Promise<void> {        await 2;    } : () => Promise<无值>
>Promise : Promise<T>

        await 2;
>await 2 : 2
>2 : 2
    }
    
    asyncPropNamedFunc = async function namedFunc(): Promise<void> {
>asyncPropNamedFunc : () => Promise<无值>
>async function namedFunc(): Promise<void> {        await 2;    } : () => Promise<无值>
>namedFunc : () => Promise<无值>
>Promise : Promise<T>

        await 2;
>await 2 : 2
>2 : 2
    }

    asyncPropArrowFunc = async (): Promise<void> => {
>asyncPropArrowFunc : () => Promise<无值>
>async (): Promise<void> => {        await 2;    } : () => Promise<无值>
>Promise : Promise<T>

        await 2;
>await 2 : 2
>2 : 2
    }

    async asyncMethod(): Promise<void> {
>asyncMethod : () => Promise<无值>
>Promise : Promise<T>

        await 2;
>await 2 : 2
>2 : 2
    }
}

