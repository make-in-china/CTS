=== tests/cases/compiler/argumentsObjectIterator02_ES6.ts ===
function doubleAndReturnAsArray(x: number, y: number, z: number): [number, number, number] {
>doubleAndReturnAsArray : (x: 数字, y: 数字, z: 数字) => [数字, 数字, 数字]
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字
>z : 数字
>类型别名 :=> 数字

    let blah = arguments[Symbol.iterator];
>blah : () => IterableIterator<任意>
>arguments[Symbol.iterator] : () => IterableIterator<任意>
>arguments : IArguments
>Symbol.iterator : 符号
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>iterator : 符号
>类型别名 :=> 符号

    let result = [];
>result : 任意[]
>[] : 未定[]

    for (let arg of blah()) {
>arg : 任意
>类型别名 :=> 任意
>blah() : IterableIterator<任意>
>blah : () => IterableIterator<任意>

        result.push(arg + arg);
>result.push(arg + arg) : 数字
>类型别名 :=> 数字
>result.push : (...items: 任意[]) => 数字
>result : 任意[]
>push : (...items: 任意[]) => 数字
>arg + arg : 任意
>类型别名 :=> 任意
>arg : 任意
>类型别名 :=> 任意
>arg : 任意
>类型别名 :=> 任意
    }
    return <[any, any, any]>result;
><[any, any, any]>result : [任意, 任意, 任意]
>result : 任意[]
}


