=== tests/cases/compiler/declarationEmitBindingPatterns.ts ===
const k = ({x: z = 'y'}) => { }
>k : ({ x: z }: { x?: string; }) => void
>({x: z = 'y'}) => { } : ({ x: z }: { x?: string; }) => void
>x : any
>类型别名 :=> 任意
>z : string
>类型别名 :=> 文字
>'y' : "y"

var a;
>a : any
>类型别名 :=> 任意

function f({} = a, [] = a, { p: {} = a} = a) {
>f : ({}?: any, []?: any, { p: {} }?: any) => void
>a : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
>p : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
}
