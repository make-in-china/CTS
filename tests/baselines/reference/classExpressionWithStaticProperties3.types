=== tests/cases/compiler/classExpressionWithStaticProperties3.ts ===
declare var console: any;
>console : any
>类型别名 :=> 任意

const arr: {y(): number}[] = [];
>arr : { y(): number; }[]
>y : () => number
>[] : undefined[]

for (let i = 0; i < 3; i++) {
>i : number
>类型别名 :=> 数字
>0 : 0
>i < 3 : boolean
>类型别名 :=> 真假
>i : number
>类型别名 :=> 数字
>3 : 3
>i++ : number
>类型别名 :=> 数字
>i : number
>类型别名 :=> 数字

    arr.push(class C {
>arr.push(class C {        static x = i;        static y = () => C.x * 2;    }) : number
>类型别名 :=> 数字
>arr.push : (...items: { y(): number; }[]) => number
>arr : { y(): number; }[]
>push : (...items: { y(): number; }[]) => number
>class C {        static x = i;        static y = () => C.x * 2;    } : typeof C
>C : typeof C

        static x = i;
>x : number
>类型别名 :=> 数字
>i : number
>类型别名 :=> 数字

        static y = () => C.x * 2;
>y : () => number
>() => C.x * 2 : () => number
>C.x * 2 : number
>类型别名 :=> 数字
>C.x : number
>类型别名 :=> 数字
>C : typeof C
>x : number
>类型别名 :=> 数字
>2 : 2

    });
}
arr.forEach(C => console.log(C.y()));
>arr.forEach(C => console.log(C.y())) : void
>类型别名 :=> 无值
>arr.forEach : (callbackfn: (value: { y(): number; }, index: number, array: { y(): number; }[]) => void, thisArg?: any) => void
>arr : { y(): number; }[]
>forEach : (callbackfn: (value: { y(): number; }, index: number, array: { y(): number; }[]) => void, thisArg?: any) => void
>C => console.log(C.y()) : (C: { y(): number; }) => any
>C : { y(): number; }
>console.log(C.y()) : any
>类型别名 :=> 任意
>console.log : any
>类型别名 :=> 任意
>console : any
>类型别名 :=> 任意
>log : any
>类型别名 :=> 任意
>C.y() : number
>类型别名 :=> 数字
>C.y : () => number
>C : { y(): number; }
>y : () => number

