=== tests/cases/conformance/classes/constructorDeclarations/classConstructorAccessibility.ts ===
class C {
>C : C

    public constructor(public x: number) { }
>x : number
>类型别名 :=> 数字
}

class D {
>D : D

    private constructor(public x: number) { }
>x : number
>类型别名 :=> 数字
}

class E {
>E : E

    protected constructor(public x: number) { }
>x : number
>类型别名 :=> 数字
}

var c = new C(1);
>c : C
>new C(1) : C
>C : typeof C
>1 : 1

var d = new D(1); // error
>d : any
>类型别名 :=> 任意
>new D(1) : any
>类型别名 :=> 任意
>D : typeof D
>1 : 1

var e = new E(1); // error
>e : any
>类型别名 :=> 任意
>new E(1) : any
>类型别名 :=> 任意
>E : typeof E
>1 : 1

module Generic {
>Generic : typeof Generic

    class C<T> {
>C : C<T>
>T : T

        public constructor(public x: T) { }
>x : T
>T : T
    }

    class D<T> {
>D : D<T>
>T : T

        private constructor(public x: T) { }
>x : T
>T : T
    }

    class E<T> {
>E : E<T>
>T : T

        protected constructor(public x: T) { }
>x : T
>T : T
    }

    var c = new C(1);
>c : C<number>
>new C(1) : C<number>
>C : typeof C
>1 : 1

    var d = new D(1); // error
>d : any
>类型别名 :=> 任意
>new D(1) : any
>类型别名 :=> 任意
>D : typeof D
>1 : 1

    var e = new E(1); // error
>e : any
>类型别名 :=> 任意
>new E(1) : any
>类型别名 :=> 任意
>E : typeof E
>1 : 1
}

