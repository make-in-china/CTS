=== tests/cases/compiler/assignmentCompatFunctionsWithOptionalArgs.ts ===
function foo(x: { id: number; name?: string; }): void;
>foo : (x: { id: 数字; name?: 文字; }) => 无值
>x : { id: 数字; name?: 文字; }
>id : 数字
>类型别名 :=> 数字
>name : 文字
>类型别名 :=> 文字

foo({ id: 1234 });                 // Ok
>foo({ id: 1234 }) : 无值
>类型别名 :=> 无值
>foo : (x: { id: 数字; name?: 文字; }) => 无值
>{ id: 1234 } : { id: 数字; }
>id : 数字
>类型别名 :=> 数字
>1234 : 1234

foo({ id: 1234, name: "hello" });  // Ok
>foo({ id: 1234, name: "hello" }) : 无值
>类型别名 :=> 无值
>foo : (x: { id: 数字; name?: 文字; }) => 无值
>{ id: 1234, name: "hello" } : { id: 数字; name: 文字; }
>id : 数字
>类型别名 :=> 数字
>1234 : 1234
>name : 文字
>类型别名 :=> 文字
>"hello" : "hello"

foo({ id: 1234, name: false });    // Error, name of wrong type
>foo({ id: 1234, name: false }) : 无值
>类型别名 :=> 无值
>foo : (x: { id: 数字; name?: 文字; }) => 无值
>{ id: 1234, name: false } : { id: 数字; name: 真假; }
>id : 数字
>类型别名 :=> 数字
>1234 : 1234
>name : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假

foo({ name: "hello" });            // Error, id required but missing
>foo({ name: "hello" }) : 无值
>类型别名 :=> 无值
>foo : (x: { id: 数字; name?: 文字; }) => 无值
>{ name: "hello" } : { name: 文字; }
>name : 文字
>类型别名 :=> 文字
>"hello" : "hello"

