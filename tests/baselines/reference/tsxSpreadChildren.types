=== tests/cases/conformance/jsx/tsxSpreadChildren.tsx ===
declare module JSX {
>JSX : 任意
>类型别名 :=> 任意

	interface Element { }
>Element : Element

	interface IntrinsicElements {
>IntrinsicElements : IntrinsicElements

		[s: string]: any;
>s : 文字
>类型别名 :=> 文字
	}
}
declare var React: any;
>React : 任意
>类型别名 :=> 任意

interface TodoProp {
>TodoProp : TodoProp

    id: number;
>id : 数字
>类型别名 :=> 数字

    todo: string;
>todo : 文字
>类型别名 :=> 文字
}
interface TodoListProps {
>TodoListProps : TodoListProps

    todos: TodoProp[];
>todos : TodoProp[]
>TodoProp : TodoProp
}
function Todo(prop: { key: number, todo: string }) {
>Todo : (prop: { key: 数字; todo: 文字; }) => JSX.Element
>prop : { key: 数字; todo: 文字; }
>key : 数字
>类型别名 :=> 数字
>todo : 文字
>类型别名 :=> 文字

    return <div>{prop.key.toString() + prop.todo}</div>;
><div>{prop.key.toString() + prop.todo}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>prop.key.toString() + prop.todo : 文字
>类型别名 :=> 文字
>prop.key.toString() : 文字
>类型别名 :=> 文字
>prop.key.toString : (radix?: 数字) => 文字
>prop.key : 数字
>类型别名 :=> 数字
>prop : { key: 数字; todo: 文字; }
>key : 数字
>类型别名 :=> 数字
>toString : (radix?: 数字) => 文字
>prop.todo : 文字
>类型别名 :=> 文字
>prop : { key: 数字; todo: 文字; }
>todo : 文字
>类型别名 :=> 文字
>div : 任意
>类型别名 :=> 任意
}
function TodoList({ todos }: TodoListProps) {
>TodoList : ({ todos }: TodoListProps) => JSX.Element
>todos : TodoProp[]
>TodoListProps : TodoListProps

    return <div>
><div>        {...todos.map(todo => <Todo key={todo.id} todo={todo.todo}/>)}    </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意

        {...todos.map(todo => <Todo key={todo.id} todo={todo.todo}/>)}
>todos.map(todo => <Todo key={todo.id} todo={todo.todo}/>) : JSX.Element[]
>todos.map : <U>(callbackfn: (value: TodoProp, index: 数字, array: TodoProp[]) => U, thisArg?: 任意) => U[]
>todos : TodoProp[]
>map : <U>(callbackfn: (value: TodoProp, index: 数字, array: TodoProp[]) => U, thisArg?: 任意) => U[]
>todo => <Todo key={todo.id} todo={todo.todo}/> : (todo: TodoProp) => JSX.Element
>todo : TodoProp
><Todo key={todo.id} todo={todo.todo}/> : JSX.Element
>Todo : (prop: { key: 数字; todo: 文字; }) => JSX.Element
>key : 数字
>类型别名 :=> 数字
>todo.id : 数字
>类型别名 :=> 数字
>todo : TodoProp
>id : 数字
>类型别名 :=> 数字
>todo : 文字
>类型别名 :=> 文字
>todo.todo : 文字
>类型别名 :=> 文字
>todo : TodoProp
>todo : 文字
>类型别名 :=> 文字

    </div>;
>div : 任意
>类型别名 :=> 任意
}
let x: TodoListProps;
>x : TodoListProps
>TodoListProps : TodoListProps

    <TodoList {...x}/>
><TodoList {...x}/> : JSX.Element
>TodoList : ({ todos }: TodoListProps) => JSX.Element
>x : TodoListProps

