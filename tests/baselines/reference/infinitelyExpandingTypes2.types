=== tests/cases/compiler/infinitelyExpandingTypes2.ts ===
interface Foo<T> {
>Foo : Foo<T>
>T : T

    x: Foo<Foo<T>>;
>x : Foo<Foo<T>>
>Foo : Foo<T>
>Foo : Foo<T>
>T : T
} 

interface Bar<T> extends Foo<T> {
>Bar : Bar<T>
>T : T
>Foo : Foo<T>
>T : T

    y: string;
>y : string
>类型别名 :=> 文字
}

function f(p: Foo<number>) {
>f : (p: Foo<number>) => void
>p : Foo<number>
>Foo : Foo<T>

    console.log(p);
>console.log(p) : any
>类型别名 :=> 任意
>console.log : any
>类型别名 :=> 任意
>console : any
>类型别名 :=> 任意
>log : any
>类型别名 :=> 任意
>p : Foo<number>
}

var v: Bar<number> = null;
>v : Bar<number>
>Bar : Bar<T>
>null : null
>类型别名 :=> 空值

f(v); // should not error
>f(v) : void
>类型别名 :=> 无值
>f : (p: Foo<number>) => void
>v : Bar<number>

