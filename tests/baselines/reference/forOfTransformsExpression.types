=== tests/cases/compiler/forOfTransformsExpression.ts ===
// https://github.com/Microsoft/TypeScript/issues/11024
let items = [{ name: "A" }, { name: "C" }, { name: "B" }];
>items : { name: 文字; }[]
>[{ name: "A" }, { name: "C" }, { name: "B" }] : { name: 文字; }[]
>{ name: "A" } : { name: 文字; }
>name : 文字
>类型别名 :=> 文字
>"A" : "A"
>{ name: "C" } : { name: 文字; }
>name : 文字
>类型别名 :=> 文字
>"C" : "C"
>{ name: "B" } : { name: 文字; }
>name : 文字
>类型别名 :=> 文字
>"B" : "B"

for (var item of items.sort((a, b) => a.name.localeCompare(b.name))) {
>item : { name: 文字; }
>items.sort((a, b) => a.name.localeCompare(b.name)) : { name: 文字; }[]
>items.sort : (compareFn?: (a: { name: 文字; }, b: { name: 文字; }) => 数字) => { name: 文字; }[]
>items : { name: 文字; }[]
>sort : (compareFn?: (a: { name: 文字; }, b: { name: 文字; }) => 数字) => { name: 文字; }[]
>(a, b) => a.name.localeCompare(b.name) : (a: { name: 文字; }, b: { name: 文字; }) => 数字
>a : { name: 文字; }
>b : { name: 文字; }
>a.name.localeCompare(b.name) : 数字
>类型别名 :=> 数字
>a.name.localeCompare : { (that: 文字): 数字; (that: 文字, locales?: 文字 | 文字[], options?: Intl.CollatorOptions): 数字; }
>a.name : 文字
>类型别名 :=> 文字
>a : { name: 文字; }
>name : 文字
>类型别名 :=> 文字
>localeCompare : { (that: 文字): 数字; (that: 文字, locales?: 文字 | 文字[], options?: Intl.CollatorOptions): 数字; }
>b.name : 文字
>类型别名 :=> 文字
>b : { name: 文字; }
>name : 文字
>类型别名 :=> 文字

}
