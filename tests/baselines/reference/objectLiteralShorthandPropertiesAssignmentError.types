=== tests/cases/conformance/es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesAssignmentError.ts ===
var id: number = 10000;
>id : number
>类型别名 :=> 数字
>10000 : 10000

var name: string = "my name";
>name : string
>类型别名 :=> 文字
>"my name" : "my name"

var person: { b: string; id: number } = { name, id };  // error
>person : { b: string; id: number; }
>b : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字
>{ name, id } : { name: string; id: number; }
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字

var person1: { name, id };  // ok
>person1 : { name: any; id: any; }
>name : any
>类型别名 :=> 任意
>id : any
>类型别名 :=> 任意

function foo(name: string, id: number): { id: string, name: number } { return { name, id }; }  // error
>foo : (name: string, id: number) => { id: string; name: number; }
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字
>id : string
>类型别名 :=> 文字
>name : number
>类型别名 :=> 数字
>{ name, id } : { name: string; id: number; }
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字

function bar(obj: { name: string; id: boolean }) { }
>bar : (obj: { name: string; id: boolean; }) => void
>obj : { name: string; id: boolean; }
>name : string
>类型别名 :=> 文字
>id : boolean
>类型别名 :=> 真假

bar({ name, id });  // error
>bar({ name, id }) : void
>类型别名 :=> 无值
>bar : (obj: { name: string; id: boolean; }) => void
>{ name, id } : { name: string; id: number; }
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字


