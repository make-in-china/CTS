=== tests/cases/compiler/sourceMapValidationDestructuringForArrayBindingPatternDefaultValues2.ts ===
declare var console: {
>console : { log(msg: 任意): 无值; }

    log(msg: any): void;
>log : (msg: 任意) => 无值
>msg : 任意
>类型别名 :=> 任意
}
type Robot = [number, string, string];
>Robot : [数字, 文字, 文字]

type MultiSkilledRobot = [string, [string, string]];
>MultiSkilledRobot : [文字, [文字, 文字]]

let robotA: Robot = [1, "mower", "mowing"];
>robotA : [数字, 文字, 文字]
>Robot : [数字, 文字, 文字]
>[1, "mower", "mowing"] : [数字, 文字, 文字]
>1 : 1
>"mower" : "mower"
>"mowing" : "mowing"

function getRobot() {
>getRobot : () => [数字, 文字, 文字]

    return robotA;
>robotA : [数字, 文字, 文字]
}

let multiRobotA: MultiSkilledRobot = ["mower", ["mowing", ""]];
>multiRobotA : [文字, [文字, 文字]]
>MultiSkilledRobot : [文字, [文字, 文字]]
>["mower", ["mowing", ""]] : [文字, [文字, 文字]]
>"mower" : "mower"
>["mowing", ""] : [文字, 文字]
>"mowing" : "mowing"
>"" : ""

let multiRobotB: MultiSkilledRobot = ["trimmer", ["trimming", "edging"]];
>multiRobotB : [文字, [文字, 文字]]
>MultiSkilledRobot : [文字, [文字, 文字]]
>["trimmer", ["trimming", "edging"]] : [文字, [文字, 文字]]
>"trimmer" : "trimmer"
>["trimming", "edging"] : [文字, 文字]
>"trimming" : "trimming"
>"edging" : "edging"

function getMultiRobot() {
>getMultiRobot : () => [文字, [文字, 文字]]

    return multiRobotA;
>multiRobotA : [文字, [文字, 文字]]
}

let nameA: string, primarySkillA: string, secondarySkillA: string;
>nameA : 文字
>类型别名 :=> 文字
>primarySkillA : 文字
>类型别名 :=> 文字
>secondarySkillA : 文字
>类型别名 :=> 文字

let numberB: number, nameB: string;
>numberB : 数字
>类型别名 :=> 数字
>nameB : 文字
>类型别名 :=> 文字

let numberA2: number, nameA2: string, skillA2: string, nameMA: string;
>numberA2 : 数字
>类型别名 :=> 数字
>nameA2 : 文字
>类型别名 :=> 文字
>skillA2 : 文字
>类型别名 :=> 文字
>nameMA : 文字
>类型别名 :=> 文字

let numberA3: number, robotAInfo: (number | string)[], multiRobotAInfo: (string | [string, string])[];
>numberA3 : 数字
>类型别名 :=> 数字
>robotAInfo : (文字 | 数字)[]
>multiRobotAInfo : (文字 | [文字, 文字])[]

let i: number;
>i : 数字
>类型别名 :=> 数字

for ([, nameA = "name"] = robotA, i = 0; i < 1; i++) {
>[, nameA = "name"] = robotA, i = 0 : 0
>[, nameA = "name"] = robotA : [数字, 文字, 文字]
>[, nameA = "name"] : [未定, 文字]
> : 未定
>类型别名 :=> 未定
>nameA = "name" : "name"
>nameA : 文字
>类型别名 :=> 文字
>"name" : "name"
>robotA : [数字, 文字, 文字]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for ([, nameA = "name"] = getRobot(), i = 0; i < 1; i++) {
>[, nameA = "name"] = getRobot(), i = 0 : 0
>[, nameA = "name"] = getRobot() : [数字, 文字, 文字]
>[, nameA = "name"] : [未定, 文字]
> : 未定
>类型别名 :=> 未定
>nameA = "name" : "name"
>nameA : 文字
>类型别名 :=> 文字
>"name" : "name"
>getRobot() : [数字, 文字, 文字]
>getRobot : () => [数字, 文字, 文字]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for ([, nameA = "name"] = [2, "trimmer", "trimming"], i = 0; i < 1; i++) {
>[, nameA = "name"] = [2, "trimmer", "trimming"], i = 0 : 0
>[, nameA = "name"] = [2, "trimmer", "trimming"] : [数字, 文字, 文字]
>[, nameA = "name"] : [未定, 文字]
> : 未定
>类型别名 :=> 未定
>nameA = "name" : "name"
>nameA : 文字
>类型别名 :=> 文字
>"name" : "name"
>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>2 : 2
>"trimmer" : "trimmer"
>"trimming" : "trimming"
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for ([, [
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"]] = multiRobotA, i = 0 : 0
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"]] = multiRobotA : [文字, [文字, 文字]]
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"]] : [未定, [文字, 文字]]
> : 未定
>类型别名 :=> 未定
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"] : [文字, 文字]
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] : [文字, 文字]

    primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : 文字
>类型别名 :=> 文字
>"primary" : "primary"

    secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : 文字
>类型别名 :=> 文字
>"secondary" : "secondary"

] = ["none", "none"]] = multiRobotA, i = 0; i < 1; i++) {
>["none", "none"] : [文字, 文字]
>"none" : "none"
>"none" : "none"
>multiRobotA : [文字, [文字, 文字]]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(primarySkillA);
>console.log(primarySkillA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>primarySkillA : 文字
>类型别名 :=> 文字
}
for ([, [
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"]] = getMultiRobot(), i = 0 : 0
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"]] = getMultiRobot() : [文字, [文字, 文字]]
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"]] : [未定, [文字, 文字]]
> : 未定
>类型别名 :=> 未定
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"] : [文字, 文字]
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] : [文字, 文字]

    primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : 文字
>类型别名 :=> 文字
>"primary" : "primary"

    secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : 文字
>类型别名 :=> 文字
>"secondary" : "secondary"

] = ["none", "none"]] = getMultiRobot(), i = 0; i < 1; i++) {
>["none", "none"] : [文字, 文字]
>"none" : "none"
>"none" : "none"
>getMultiRobot() : [文字, [文字, 文字]]
>getMultiRobot : () => [文字, [文字, 文字]]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(primarySkillA);
>console.log(primarySkillA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>primarySkillA : 文字
>类型别名 :=> 文字
}
for ([, [
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"]] = ["trimmer", ["trimming", "edging"]], i = 0 : 0
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"]] = ["trimmer", ["trimming", "edging"]] : [文字, [文字, 文字]]
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"]] : [未定, [文字, 文字]]
> : 未定
>类型别名 :=> 未定
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["none", "none"] : [文字, 文字]
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] : [文字, 文字]

    primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : 文字
>类型别名 :=> 文字
>"primary" : "primary"

    secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : 文字
>类型别名 :=> 文字
>"secondary" : "secondary"

] = ["none", "none"]] = ["trimmer", ["trimming", "edging"]], i = 0; i < 1; i++) {
>["none", "none"] : [文字, 文字]
>"none" : "none"
>"none" : "none"
>["trimmer", ["trimming", "edging"]] : [文字, [文字, 文字]]
>"trimmer" : "trimmer"
>["trimming", "edging"] : [文字, 文字]
>"trimming" : "trimming"
>"edging" : "edging"
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(primarySkillA);
>console.log(primarySkillA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>primarySkillA : 文字
>类型别名 :=> 文字
}

for ([numberB = -1] = robotA, i = 0; i < 1; i++) {
>[numberB = -1] = robotA, i = 0 : 0
>[numberB = -1] = robotA : [数字, 文字, 文字]
>[numberB = -1] : [数字]
>numberB = -1 : -1
>numberB : 数字
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>robotA : [数字, 文字, 文字]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(numberB);
>console.log(numberB) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>numberB : 数字
>类型别名 :=> 数字
}
for ([numberB = -1] = getRobot(), i = 0; i < 1; i++) {
>[numberB = -1] = getRobot(), i = 0 : 0
>[numberB = -1] = getRobot() : [数字, 文字, 文字]
>[numberB = -1] : [数字]
>numberB = -1 : -1
>numberB : 数字
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>getRobot() : [数字, 文字, 文字]
>getRobot : () => [数字, 文字, 文字]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(numberB);
>console.log(numberB) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>numberB : 数字
>类型别名 :=> 数字
}
for ([numberB = -1] = [2, "trimmer", "trimming"], i = 0; i < 1; i++) {
>[numberB = -1] = [2, "trimmer", "trimming"], i = 0 : 0
>[numberB = -1] = [2, "trimmer", "trimming"] : [数字, 文字, 文字]
>[numberB = -1] : [数字]
>numberB = -1 : -1
>numberB : 数字
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>2 : 2
>"trimmer" : "trimmer"
>"trimming" : "trimming"
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(numberB);
>console.log(numberB) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>numberB : 数字
>类型别名 :=> 数字
}
for ([nameB = "name"] = multiRobotA, i = 0; i < 1; i++) {
>[nameB = "name"] = multiRobotA, i = 0 : 0
>[nameB = "name"] = multiRobotA : [文字, [文字, 文字]]
>[nameB = "name"] : [文字]
>nameB = "name" : "name"
>nameB : 文字
>类型别名 :=> 文字
>"name" : "name"
>multiRobotA : [文字, [文字, 文字]]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameB);
>console.log(nameB) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameB : 文字
>类型别名 :=> 文字
}
for ([nameB = "name"] = getMultiRobot(), i = 0; i < 1; i++) {
>[nameB = "name"] = getMultiRobot(), i = 0 : 0
>[nameB = "name"] = getMultiRobot() : [文字, [文字, 文字]]
>[nameB = "name"] : [文字]
>nameB = "name" : "name"
>nameB : 文字
>类型别名 :=> 文字
>"name" : "name"
>getMultiRobot() : [文字, [文字, 文字]]
>getMultiRobot : () => [文字, [文字, 文字]]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameB);
>console.log(nameB) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameB : 文字
>类型别名 :=> 文字
}
for ([nameB = "name"] = ["trimmer", ["trimming", "edging"]], i = 0; i < 1; i++) {
>[nameB = "name"] = ["trimmer", ["trimming", "edging"]], i = 0 : 0
>[nameB = "name"] = ["trimmer", ["trimming", "edging"]] : [文字, 文字[]]
>[nameB = "name"] : [文字]
>nameB = "name" : "name"
>nameB : 文字
>类型别名 :=> 文字
>"name" : "name"
>["trimmer", ["trimming", "edging"]] : [文字, 文字[]]
>"trimmer" : "trimmer"
>["trimming", "edging"] : 文字[]
>"trimming" : "trimming"
>"edging" : "edging"
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameB);
>console.log(nameB) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameB : 文字
>类型别名 :=> 文字
}

for ([numberA2 = -1, nameA2 = "name", skillA2 = "skill"] = robotA, i = 0; i < 1; i++) {
>[numberA2 = -1, nameA2 = "name", skillA2 = "skill"] = robotA, i = 0 : 0
>[numberA2 = -1, nameA2 = "name", skillA2 = "skill"] = robotA : [数字, 文字, 文字]
>[numberA2 = -1, nameA2 = "name", skillA2 = "skill"] : [数字, 文字, 文字]
>numberA2 = -1 : -1
>numberA2 : 数字
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>nameA2 = "name" : "name"
>nameA2 : 文字
>类型别名 :=> 文字
>"name" : "name"
>skillA2 = "skill" : "skill"
>skillA2 : 文字
>类型别名 :=> 文字
>"skill" : "skill"
>robotA : [数字, 文字, 文字]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameA2);
>console.log(nameA2) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA2 : 文字
>类型别名 :=> 文字
}
for ([numberA2 = -1, nameA2 = "name", skillA2 = "skill"] = getRobot(), i = 0; i < 1; i++) {
>[numberA2 = -1, nameA2 = "name", skillA2 = "skill"] = getRobot(), i = 0 : 0
>[numberA2 = -1, nameA2 = "name", skillA2 = "skill"] = getRobot() : [数字, 文字, 文字]
>[numberA2 = -1, nameA2 = "name", skillA2 = "skill"] : [数字, 文字, 文字]
>numberA2 = -1 : -1
>numberA2 : 数字
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>nameA2 = "name" : "name"
>nameA2 : 文字
>类型别名 :=> 文字
>"name" : "name"
>skillA2 = "skill" : "skill"
>skillA2 : 文字
>类型别名 :=> 文字
>"skill" : "skill"
>getRobot() : [数字, 文字, 文字]
>getRobot : () => [数字, 文字, 文字]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameA2);
>console.log(nameA2) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA2 : 文字
>类型别名 :=> 文字
}
for ([numberA2 = -1, nameA2 = "name", skillA2 = "skill"] = [2, "trimmer", "trimming"], i = 0; i < 1; i++) {
>[numberA2 = -1, nameA2 = "name", skillA2 = "skill"] = [2, "trimmer", "trimming"], i = 0 : 0
>[numberA2 = -1, nameA2 = "name", skillA2 = "skill"] = [2, "trimmer", "trimming"] : [数字, 文字, 文字]
>[numberA2 = -1, nameA2 = "name", skillA2 = "skill"] : [数字, 文字, 文字]
>numberA2 = -1 : -1
>numberA2 : 数字
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>nameA2 = "name" : "name"
>nameA2 : 文字
>类型别名 :=> 文字
>"name" : "name"
>skillA2 = "skill" : "skill"
>skillA2 : 文字
>类型别名 :=> 文字
>"skill" : "skill"
>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>2 : 2
>"trimmer" : "trimmer"
>"trimming" : "trimming"
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameA2);
>console.log(nameA2) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA2 : 文字
>类型别名 :=> 文字
}
for (let
    [nameMA = "noName",
>nameMA : 文字
>类型别名 :=> 文字
>"noName" : "noName"

        [
            primarySkillA = "primary",
>primarySkillA : 文字
>类型别名 :=> 文字
>"primary" : "primary"

            secondarySkillA = "secondary"
>secondarySkillA : 文字
>类型别名 :=> 文字
>"secondary" : "secondary"

        ] = ["none", "none"]
>["none", "none"] : [文字, 文字]
>"none" : "none"
>"none" : "none"

    ] = multiRobotA, i = 0; i < 1; i++) {
>multiRobotA : [文字, [文字, 文字]]
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameMA);
>console.log(nameMA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameMA : 文字
>类型别名 :=> 文字
}
for ([nameMA = "noName",
>[nameMA = "noName",    [        primarySkillA = "primary",        secondarySkillA = "secondary"    ] = ["none", "none"]] = getMultiRobot(), i = 0 : 0
>[nameMA = "noName",    [        primarySkillA = "primary",        secondarySkillA = "secondary"    ] = ["none", "none"]] = getMultiRobot() : [文字, [文字, 文字]]
>[nameMA = "noName",    [        primarySkillA = "primary",        secondarySkillA = "secondary"    ] = ["none", "none"]] : [文字, [文字, 文字]]
>nameMA = "noName" : "noName"
>nameMA : 文字
>类型别名 :=> 文字
>"noName" : "noName"

    [
>[        primarySkillA = "primary",        secondarySkillA = "secondary"    ] = ["none", "none"] : [文字, 文字]
>[        primarySkillA = "primary",        secondarySkillA = "secondary"    ] : [文字, 文字]

        primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : 文字
>类型别名 :=> 文字
>"primary" : "primary"

        secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : 文字
>类型别名 :=> 文字
>"secondary" : "secondary"

    ] = ["none", "none"]
>["none", "none"] : [文字, 文字]
>"none" : "none"
>"none" : "none"

] = getMultiRobot(), i = 0; i < 1; i++) {
>getMultiRobot() : [文字, [文字, 文字]]
>getMultiRobot : () => [文字, [文字, 文字]]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameMA);
>console.log(nameMA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameMA : 文字
>类型别名 :=> 文字
}
for ([nameMA = "noName",
>[nameMA = "noName",    [        primarySkillA = "primary",        secondarySkillA = "secondary"    ] = ["none", "none"]] = ["trimmer", ["trimming", "edging"]], i = 0 : 0
>[nameMA = "noName",    [        primarySkillA = "primary",        secondarySkillA = "secondary"    ] = ["none", "none"]] = ["trimmer", ["trimming", "edging"]] : [文字, [文字, 文字]]
>[nameMA = "noName",    [        primarySkillA = "primary",        secondarySkillA = "secondary"    ] = ["none", "none"]] : [文字, [文字, 文字]]
>nameMA = "noName" : "noName"
>nameMA : 文字
>类型别名 :=> 文字
>"noName" : "noName"

    [
>[        primarySkillA = "primary",        secondarySkillA = "secondary"    ] = ["none", "none"] : [文字, 文字]
>[        primarySkillA = "primary",        secondarySkillA = "secondary"    ] : [文字, 文字]

        primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : 文字
>类型别名 :=> 文字
>"primary" : "primary"

        secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : 文字
>类型别名 :=> 文字
>"secondary" : "secondary"

    ] = ["none", "none"]
>["none", "none"] : [文字, 文字]
>"none" : "none"
>"none" : "none"

] = ["trimmer", ["trimming", "edging"]], i = 0; i < 1; i++) {
>["trimmer", ["trimming", "edging"]] : [文字, [文字, 文字]]
>"trimmer" : "trimmer"
>["trimming", "edging"] : [文字, 文字]
>"trimming" : "trimming"
>"edging" : "edging"
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(nameMA);
>console.log(nameMA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameMA : 文字
>类型别名 :=> 文字
}

for ([numberA3 = -1, ...robotAInfo] = robotA, i = 0; i < 1; i++) {
>[numberA3 = -1, ...robotAInfo] = robotA, i = 0 : 0
>[numberA3 = -1, ...robotAInfo] = robotA : [数字, 文字, 文字]
>[numberA3 = -1, ...robotAInfo] : (文字 | 数字)[]
>numberA3 = -1 : -1
>numberA3 : 数字
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>...robotAInfo : 文字 | 数字
>robotAInfo : (文字 | 数字)[]
>robotA : [数字, 文字, 文字]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(numberA3);
>console.log(numberA3) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>numberA3 : 数字
>类型别名 :=> 数字
}
for ([numberA3 = -1, ...robotAInfo] = getRobot(), i = 0; i < 1; i++) {
>[numberA3 = -1, ...robotAInfo] = getRobot(), i = 0 : 0
>[numberA3 = -1, ...robotAInfo] = getRobot() : [数字, 文字, 文字]
>[numberA3 = -1, ...robotAInfo] : (文字 | 数字)[]
>numberA3 = -1 : -1
>numberA3 : 数字
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>...robotAInfo : 文字 | 数字
>robotAInfo : (文字 | 数字)[]
>getRobot() : [数字, 文字, 文字]
>getRobot : () => [数字, 文字, 文字]
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(numberA3);
>console.log(numberA3) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>numberA3 : 数字
>类型别名 :=> 数字
}
for ([numberA3 = -1, ...robotAInfo] = <Robot>[2, "trimmer", "trimming"], i = 0; i < 1; i++) {
>[numberA3 = -1, ...robotAInfo] = <Robot>[2, "trimmer", "trimming"], i = 0 : 0
>[numberA3 = -1, ...robotAInfo] = <Robot>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>[numberA3 = -1, ...robotAInfo] : (文字 | 数字)[]
>numberA3 = -1 : -1
>numberA3 : 数字
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>...robotAInfo : 文字 | 数字
>robotAInfo : (文字 | 数字)[]
><Robot>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>Robot : [数字, 文字, 文字]
>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>2 : 2
>"trimmer" : "trimmer"
>"trimming" : "trimming"
>i = 0 : 0
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 1 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>1 : 1
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    console.log(numberA3);
>console.log(numberA3) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>numberA3 : 数字
>类型别名 :=> 数字
}
