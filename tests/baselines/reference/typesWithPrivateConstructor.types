=== tests/cases/conformance/types/members/typesWithPrivateConstructor.ts ===
class C {
>C : C

    private constructor() { }
}

var c = new C(); // error C is private
>c : 任意
>类型别名 :=> 任意
>new C() : 任意
>类型别名 :=> 任意
>C : 类为 C

var r: () => void = c.constructor;
>r : () => 无值
>c.constructor : 任意
>类型别名 :=> 任意
>c : 任意
>类型别名 :=> 任意
>constructor : 任意
>类型别名 :=> 任意

class C2 {
>C2 : C2

    private constructor(x: number);
>x : 数字
>类型别名 :=> 数字

    private constructor(x: any) { }
>x : 任意
>类型别名 :=> 任意
}

var c2 = new C2(); // error C2 is private
>c2 : 任意
>类型别名 :=> 任意
>new C2() : 任意
>类型别名 :=> 任意
>C2 : 类为 C2

var r2: (x: number) => void = c2.constructor;
>r2 : (x: 数字) => 无值
>x : 数字
>类型别名 :=> 数字
>c2.constructor : 任意
>类型别名 :=> 任意
>c2 : 任意
>类型别名 :=> 任意
>constructor : 任意
>类型别名 :=> 任意

