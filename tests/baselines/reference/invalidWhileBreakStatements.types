=== tests/cases/conformance/statements/breakStatements/invalidWhileBreakStatements.ts ===
// All errors

// naked break not allowed
break;

// non-existent label
ONE:
>ONE : 任意
>类型别名 :=> 任意

while (true) break TWO;
>true : 为真
>类型别名 :=> 为真
>TWO : 任意
>类型别名 :=> 任意

// break from inside function
TWO:
>TWO : 任意
>类型别名 :=> 任意

while (true){
>true : 为真
>类型别名 :=> 为真

    var x = () => {
>x : () => 无值
>() => {        break TWO;    } : () => 无值

        break TWO;
>TWO : 任意
>类型别名 :=> 任意
    }
}

THREE:
>THREE : 任意
>类型别名 :=> 任意

while (true) {
>true : 为真
>类型别名 :=> 为真

    var fn = function () {
>fn : () => 无值
>function () {        break THREE;    } : () => 无值

        break THREE;
>THREE : 任意
>类型别名 :=> 任意
    }
}

// break forward
while (true) {
>true : 为真
>类型别名 :=> 为真

    break FIVE;
>FIVE : 任意
>类型别名 :=> 任意

    FIVE:
>FIVE : 任意
>类型别名 :=> 任意

    while (true) { }
>true : 为真
>类型别名 :=> 为真
}

// label on non-loop statement
NINE:
>NINE : 任意
>类型别名 :=> 任意

var y = 12;
>y : 数字
>类型别名 :=> 数字
>12 : 12

while (true) {
>true : 为真
>类型别名 :=> 为真

    break NINE;
>NINE : 任意
>类型别名 :=> 任意
}
