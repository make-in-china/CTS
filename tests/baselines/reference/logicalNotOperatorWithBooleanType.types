=== tests/cases/conformance/expressions/unaryOperators/logicalNotOperator/logicalNotOperatorWithBooleanType.ts ===
// ! operator on boolean type
var BOOLEAN: boolean;
>BOOLEAN : 真假
>类型别名 :=> 真假

function foo(): boolean { return true; }
>foo : () => 真假
>true : 为真
>类型别名 :=> 为真

class A {
>A : A

    public a: boolean;
>a : 真假
>类型别名 :=> 真假

    static foo() { return false; }
>foo : () => 真假
>false : 为假
>类型别名 :=> 为假
}
module M {
>M : 类为 M

    export var n: boolean;
>n : 真假
>类型别名 :=> 真假
}

var objA = new A();
>objA : A
>new A() : A
>A : 类为 A

// boolean type var
var ResultIsBoolean1 = !BOOLEAN;
>ResultIsBoolean1 : 真假
>类型别名 :=> 真假
>!BOOLEAN : 真假
>类型别名 :=> 真假
>BOOLEAN : 真假
>类型别名 :=> 真假

// boolean type literal
var ResultIsBoolean2 = !true;
>ResultIsBoolean2 : 真假
>类型别名 :=> 真假
>!true : 真假
>类型别名 :=> 真假
>true : 为真
>类型别名 :=> 为真

var ResultIsBoolean3 = !{ x: true, y: false };
>ResultIsBoolean3 : 真假
>类型别名 :=> 真假
>!{ x: true, y: false } : 真假
>类型别名 :=> 真假
>{ x: true, y: false } : { x: 真假; y: 真假; }
>x : 真假
>类型别名 :=> 真假
>true : 为真
>类型别名 :=> 为真
>y : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假

// boolean type expressions
var ResultIsBoolean4 = !objA.a;
>ResultIsBoolean4 : 真假
>类型别名 :=> 真假
>!objA.a : 真假
>类型别名 :=> 真假
>objA.a : 真假
>类型别名 :=> 真假
>objA : A
>a : 真假
>类型别名 :=> 真假

var ResultIsBoolean5 = !M.n;
>ResultIsBoolean5 : 真假
>类型别名 :=> 真假
>!M.n : 真假
>类型别名 :=> 真假
>M.n : 真假
>类型别名 :=> 真假
>M : 类为 M
>n : 真假
>类型别名 :=> 真假

var ResultIsBoolean6 = !foo();
>ResultIsBoolean6 : 真假
>类型别名 :=> 真假
>!foo() : 真假
>类型别名 :=> 真假
>foo() : 真假
>类型别名 :=> 真假
>foo : () => 真假

var ResultIsBoolean7 = !A.foo();
>ResultIsBoolean7 : 真假
>类型别名 :=> 真假
>!A.foo() : 真假
>类型别名 :=> 真假
>A.foo() : 真假
>类型别名 :=> 真假
>A.foo : () => 真假
>A : 类为 A
>foo : () => 真假

// multiple ! operators
var ResultIsBoolean = !!BOOLEAN;
>ResultIsBoolean : 真假
>类型别名 :=> 真假
>!!BOOLEAN : 真假
>类型别名 :=> 真假
>!BOOLEAN : 真假
>类型别名 :=> 真假
>BOOLEAN : 真假
>类型别名 :=> 真假

// miss assignment operators
!true;
>!true : 真假
>类型别名 :=> 真假
>true : 为真
>类型别名 :=> 为真

!BOOLEAN;
>!BOOLEAN : 真假
>类型别名 :=> 真假
>BOOLEAN : 真假
>类型别名 :=> 真假

!foo();
>!foo() : 真假
>类型别名 :=> 真假
>foo() : 真假
>类型别名 :=> 真假
>foo : () => 真假

!true, false;
>!true, false : 为假
>类型别名 :=> 为假
>!true : 真假
>类型别名 :=> 真假
>true : 为真
>类型别名 :=> 为真
>false : 为假
>类型别名 :=> 为假

!objA.a;
>!objA.a : 真假
>类型别名 :=> 真假
>objA.a : 真假
>类型别名 :=> 真假
>objA : A
>a : 真假
>类型别名 :=> 真假

!M.n;
>!M.n : 真假
>类型别名 :=> 真假
>M.n : 真假
>类型别名 :=> 真假
>M : 类为 M
>n : 真假
>类型别名 :=> 真假

