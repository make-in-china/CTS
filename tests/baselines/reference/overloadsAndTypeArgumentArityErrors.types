=== tests/cases/compiler/overloadsAndTypeArgumentArityErrors.ts ===
declare function Callbacks(flags?: string): void;
>Callbacks : { (flags?: 文字): 无值; <T>(flags?: 文字): 无值; <T1, T2>(flags?: 文字): 无值; }
>flags : 文字
>类型别名 :=> 文字

declare function Callbacks<T>(flags?: string): void;
>Callbacks : { (flags?: 文字): 无值; <T>(flags?: 文字): 无值; <T1, T2>(flags?: 文字): 无值; }
>T : T
>flags : 文字
>类型别名 :=> 文字

declare function Callbacks<T1, T2>(flags?: string): void;
>Callbacks : { (flags?: 文字): 无值; <T>(flags?: 文字): 无值; <T1, T2>(flags?: 文字): 无值; }
>T1 : T1
>T2 : T2
>flags : 文字
>类型别名 :=> 文字

Callbacks<number, string, boolean>('s'); // wrong number of type arguments
>Callbacks<number, string, boolean>('s') : 任意
>类型别名 :=> 任意
>Callbacks : { (flags?: 文字): 无值; <T>(flags?: 文字): 无值; <T1, T2>(flags?: 文字): 无值; }
>'s' : "s"

new Callbacks<number, string, boolean>('s'); // wrong number of type arguments
>new Callbacks<number, string, boolean>('s') : 任意
>类型别名 :=> 任意
>Callbacks : { (flags?: 文字): 无值; <T>(flags?: 文字): 无值; <T1, T2>(flags?: 文字): 无值; }
>'s' : "s"

