=== tests/cases/conformance/types/primitives/number/assignFromNumberInterface2.ts ===
interface Number {
>Number : Number

    doStuff(): string;
>doStuff : () => 文字
}

interface NotNumber {
>NotNumber : NotNumber

    toString(radix?: number): string;
>toString : (radix?: 数字) => 文字
>radix : 数字
>类型别名 :=> 数字

    toFixed(fractionDigits?: number): string;
>toFixed : (fractionDigits?: 数字) => 文字
>fractionDigits : 数字
>类型别名 :=> 数字

    toExponential(fractionDigits?: number): string;
>toExponential : (fractionDigits?: 数字) => 文字
>fractionDigits : 数字
>类型别名 :=> 数字

    toPrecision(precision?: number): string;
>toPrecision : (precision?: 数字) => 文字
>precision : 数字
>类型别名 :=> 数字

    valueOf(): number;
>valueOf : () => 数字

    doStuff(): string;
>doStuff : () => 文字
}

var x = 1;
>x : 数字
>类型别名 :=> 数字
>1 : 1

var a: Number;
>a : Number
>Number : Number

var b: NotNumber;
>b : NotNumber
>NotNumber : NotNumber

a = x; 
>a = x : 数字
>类型别名 :=> 数字
>a : Number
>x : 数字
>类型别名 :=> 数字

a = b; 
>a = b : NotNumber
>a : Number
>b : NotNumber

b = a; 
>b = a : Number
>b : NotNumber
>a : Number

b = x; 
>b = x : 数字
>类型别名 :=> 数字
>b : NotNumber
>x : 数字
>类型别名 :=> 数字

x = a; // expected error
>x = a : Number
>x : 数字
>类型别名 :=> 数字
>a : Number

x = b; // expected error
>x = b : NotNumber
>x : 数字
>类型别名 :=> 数字
>b : NotNumber


