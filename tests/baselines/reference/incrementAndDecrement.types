=== tests/cases/conformance/expressions/operators/incrementAndDecrement.ts ===
enum E { A, B, C };
>E : E
>A : E.A
>B : E.B
>C : E.C

var x = 4;
>x : 数字
>类型别名 :=> 数字
>4 : 4

var e = E.B;
>e : E
>E.B : E.B
>E : 类为 E
>B : E.B

var a: any;
>a : 任意
>类型别名 :=> 任意

var w = window;
>w : 任意
>类型别名 :=> 任意
>window : 任意
>类型别名 :=> 任意

// Assign to expression++
x++ = 4; // Error
>x++ : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>4 : 4

// Assign to expression--
x-- = 5; // Error
>x-- : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>5 : 5

// Assign to++expression
++x = 4; // Error
>++x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>4 : 4

// Assign to--expression
--x = 5; // Error
>--x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>5 : 5

// Pre and postfix++ on number
x++;
>x++ : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

x--;
>x-- : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

++x;
>++x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

--x;
>--x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

++x++; // Error
>++x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>++ : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

--x--; // Error
>--x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>-- : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

++x--; // Error
>++x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>-- : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

--x++; // Error
>--x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>++ : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

// Pre and postfix++ on enum
e++;
>e++ : 数字
>类型别名 :=> 数字
>e : E

e--;
>e-- : 数字
>类型别名 :=> 数字
>e : E

++e;
>++e : 数字
>类型别名 :=> 数字
>e : E

--e;
>--e : 数字
>类型别名 :=> 数字
>e : E

++e++; // Error
>++e : 数字
>类型别名 :=> 数字
>e : E
>++ : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

--e--; // Error
>--e : 数字
>类型别名 :=> 数字
>e : E
>-- : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

++e--; // Error
>++e : 数字
>类型别名 :=> 数字
>e : E
>-- : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

--e++; // Error
>--e : 数字
>类型别名 :=> 数字
>e : E
>++ : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

// Pre and postfix++ on value of type 'any'
a++;
>a++ : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意

a--;
>a-- : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意

++a;
>++a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意

--a;
>--a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意

++a++; // Error
>++a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>++ : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

--a--; // Error
>--a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>-- : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

++a--; // Error
>++a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>-- : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

--a++; // Error
>--a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>++ : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意


// Pre and postfix++ on other types
w++; // Error
>w++ : 数字
>类型别名 :=> 数字
>w : 任意
>类型别名 :=> 任意

w--; // Error
>w-- : 数字
>类型别名 :=> 数字
>w : 任意
>类型别名 :=> 任意

++w; // Error
>++w : 数字
>类型别名 :=> 数字
>w : 任意
>类型别名 :=> 任意

--w; // Error
>--w : 数字
>类型别名 :=> 数字
>w : 任意
>类型别名 :=> 任意

++w++; // Error
>++w : 数字
>类型别名 :=> 数字
>w : 任意
>类型别名 :=> 任意
>++ : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

--w--; // Error
>--w : 数字
>类型别名 :=> 数字
>w : 任意
>类型别名 :=> 任意
>-- : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

++w--; // Error
>++w : 数字
>类型别名 :=> 数字
>w : 任意
>类型别名 :=> 任意
>-- : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

--w++; // Error
>--w : 数字
>类型别名 :=> 数字
>w : 任意
>类型别名 :=> 任意
>++ : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意



