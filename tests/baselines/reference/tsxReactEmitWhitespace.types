=== tests/cases/conformance/jsx/file.tsx ===
declare module JSX {
>JSX : 任意
>类型别名 :=> 任意

	interface Element { }
>Element : Element

	interface IntrinsicElements {
>IntrinsicElements : IntrinsicElements

		[s: string]: any;
>s : 文字
>类型别名 :=> 文字
	}
}
declare var React: any;
>React : 任意
>类型别名 :=> 任意

// THIS FILE HAS TEST-SIGNIFICANT LEADING/TRAILING
// WHITESPACE, DO NOT RUN 'FORMAT DOCUMENT' ON IT

var p = 0;
>p : 数字
>类型别名 :=> 数字
>0 : 0

// Emit "   "
<div>   </div>;
><div>   </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

// Emit "  ", p, "   "
<div>  {p}    </div>;
><div>  {p}    </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>p : 数字
>类型别名 :=> 数字
>div : 任意
>类型别名 :=> 任意

// Emit only p
<div>  
><div>        {p}          </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意

      {p}    
>p : 数字
>类型别名 :=> 数字

      </div>;
>div : 任意
>类型别名 :=> 任意

// Emit only p
<div>
><div>  {p}    </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意

  {p}
>p : 数字
>类型别名 :=> 数字

    </div>;
>div : 任意
>类型别名 :=> 任意

// Emit "  3"
<div>  3  
><div>  3    </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意

  </div>;
>div : 任意
>类型别名 :=> 任意

// Emit "  3  "
<div>  3  </div>;
><div>  3  </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

// Emit "3"
<div>   
><div>      3       </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意

   3    
   </div>;
>div : 任意
>类型别名 :=> 任意

// Emit no args
<div>   
><div>      </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意

   </div>;
>div : 任意
>类型别名 :=> 任意

// Emit "foo bar"
<div>  
><div>     foo bar     </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意

   foo

 bar   

  </div>;
>div : 任意
>类型别名 :=> 任意

// Emit "hello\\ world"
<div>
><div>    hello\world</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意

    hello\

world
</div>;
>div : 任意
>类型别名 :=> 任意

// Emit "  a b  c d  "
<div>  a
><div>  a    b  c    d  </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意

    b  c
    d  </div>;
>div : 任意
>类型别名 :=> 任意

