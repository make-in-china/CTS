=== tests/cases/compiler/privacyCannotNameVarTypeDeclFile_consumer.ts ===
import exporter = require("./privacyCannotNameVarTypeDeclFile_exporter");
>exporter : 类为 exporter

export class publicClassWithWithPrivatePropertyTypes {
>publicClassWithWithPrivatePropertyTypes : publicClassWithWithPrivatePropertyTypes

    static myPublicStaticProperty = exporter.createExportedWidget1(); // Error
>myPublicStaticProperty : Widget1
>exporter.createExportedWidget1() : Widget1
>exporter.createExportedWidget1 : () => Widget1
>exporter : 类为 exporter
>createExportedWidget1 : () => Widget1

    private static myPrivateStaticProperty = exporter.createExportedWidget1();
>myPrivateStaticProperty : Widget1
>exporter.createExportedWidget1() : Widget1
>exporter.createExportedWidget1 : () => Widget1
>exporter : 类为 exporter
>createExportedWidget1 : () => Widget1

    myPublicProperty = exporter.createExportedWidget1(); // Error
>myPublicProperty : Widget1
>exporter.createExportedWidget1() : Widget1
>exporter.createExportedWidget1 : () => Widget1
>exporter : 类为 exporter
>createExportedWidget1 : () => Widget1

    private myPrivateProperty = exporter.createExportedWidget1();
>myPrivateProperty : Widget1
>exporter.createExportedWidget1() : Widget1
>exporter.createExportedWidget1 : () => Widget1
>exporter : 类为 exporter
>createExportedWidget1 : () => Widget1

    static myPublicStaticProperty1 = exporter.createExportedWidget3(); // Error
>myPublicStaticProperty1 : Widget3
>exporter.createExportedWidget3() : Widget3
>exporter.createExportedWidget3 : () => Widget3
>exporter : 类为 exporter
>createExportedWidget3 : () => Widget3

    private static myPrivateStaticProperty1 = exporter.createExportedWidget3();
>myPrivateStaticProperty1 : Widget3
>exporter.createExportedWidget3() : Widget3
>exporter.createExportedWidget3 : () => Widget3
>exporter : 类为 exporter
>createExportedWidget3 : () => Widget3

    myPublicProperty1 = exporter.createExportedWidget3(); // Error
>myPublicProperty1 : Widget3
>exporter.createExportedWidget3() : Widget3
>exporter.createExportedWidget3 : () => Widget3
>exporter : 类为 exporter
>createExportedWidget3 : () => Widget3

    private myPrivateProperty1 = exporter.createExportedWidget3();
>myPrivateProperty1 : Widget3
>exporter.createExportedWidget3() : Widget3
>exporter.createExportedWidget3 : () => Widget3
>exporter : 类为 exporter
>createExportedWidget3 : () => Widget3
}

class privateClassWithWithPrivatePropertyTypes {
>privateClassWithWithPrivatePropertyTypes : privateClassWithWithPrivatePropertyTypes

    static myPublicStaticProperty = exporter.createExportedWidget1(); 
>myPublicStaticProperty : Widget1
>exporter.createExportedWidget1() : Widget1
>exporter.createExportedWidget1 : () => Widget1
>exporter : 类为 exporter
>createExportedWidget1 : () => Widget1

    private static myPrivateStaticProperty = exporter.createExportedWidget1();
>myPrivateStaticProperty : Widget1
>exporter.createExportedWidget1() : Widget1
>exporter.createExportedWidget1 : () => Widget1
>exporter : 类为 exporter
>createExportedWidget1 : () => Widget1

    myPublicProperty = exporter.createExportedWidget1(); 
>myPublicProperty : Widget1
>exporter.createExportedWidget1() : Widget1
>exporter.createExportedWidget1 : () => Widget1
>exporter : 类为 exporter
>createExportedWidget1 : () => Widget1

    private myPrivateProperty = exporter.createExportedWidget1();
>myPrivateProperty : Widget1
>exporter.createExportedWidget1() : Widget1
>exporter.createExportedWidget1 : () => Widget1
>exporter : 类为 exporter
>createExportedWidget1 : () => Widget1

    static myPublicStaticProperty1 = exporter.createExportedWidget3(); 
>myPublicStaticProperty1 : Widget3
>exporter.createExportedWidget3() : Widget3
>exporter.createExportedWidget3 : () => Widget3
>exporter : 类为 exporter
>createExportedWidget3 : () => Widget3

    private static myPrivateStaticProperty1 = exporter.createExportedWidget3();
>myPrivateStaticProperty1 : Widget3
>exporter.createExportedWidget3() : Widget3
>exporter.createExportedWidget3 : () => Widget3
>exporter : 类为 exporter
>createExportedWidget3 : () => Widget3

    myPublicProperty1 = exporter.createExportedWidget3(); 
>myPublicProperty1 : Widget3
>exporter.createExportedWidget3() : Widget3
>exporter.createExportedWidget3 : () => Widget3
>exporter : 类为 exporter
>createExportedWidget3 : () => Widget3

    private myPrivateProperty1 = exporter.createExportedWidget3();
>myPrivateProperty1 : Widget3
>exporter.createExportedWidget3() : Widget3
>exporter.createExportedWidget3 : () => Widget3
>exporter : 类为 exporter
>createExportedWidget3 : () => Widget3
}

export var publicVarWithPrivatePropertyTypes= exporter.createExportedWidget1(); // Error
>publicVarWithPrivatePropertyTypes : Widget1
>exporter.createExportedWidget1() : Widget1
>exporter.createExportedWidget1 : () => Widget1
>exporter : 类为 exporter
>createExportedWidget1 : () => Widget1

var privateVarWithPrivatePropertyTypes= exporter.createExportedWidget1();
>privateVarWithPrivatePropertyTypes : Widget1
>exporter.createExportedWidget1() : Widget1
>exporter.createExportedWidget1 : () => Widget1
>exporter : 类为 exporter
>createExportedWidget1 : () => Widget1

export var publicVarWithPrivatePropertyTypes1 = exporter.createExportedWidget3(); // Error
>publicVarWithPrivatePropertyTypes1 : Widget3
>exporter.createExportedWidget3() : Widget3
>exporter.createExportedWidget3 : () => Widget3
>exporter : 类为 exporter
>createExportedWidget3 : () => Widget3

var privateVarWithPrivatePropertyTypes1 = exporter.createExportedWidget3();
>privateVarWithPrivatePropertyTypes1 : Widget3
>exporter.createExportedWidget3() : Widget3
>exporter.createExportedWidget3 : () => Widget3
>exporter : 类为 exporter
>createExportedWidget3 : () => Widget3

export class publicClassWithPrivateModulePropertyTypes {
>publicClassWithPrivateModulePropertyTypes : publicClassWithPrivateModulePropertyTypes

    static myPublicStaticProperty= exporter.createExportedWidget2(); // Error
>myPublicStaticProperty : SpecializedWidget.Widget2
>exporter.createExportedWidget2() : SpecializedWidget.Widget2
>exporter.createExportedWidget2 : () => SpecializedWidget.Widget2
>exporter : 类为 exporter
>createExportedWidget2 : () => SpecializedWidget.Widget2

    myPublicProperty = exporter.createExportedWidget2(); // Error
>myPublicProperty : SpecializedWidget.Widget2
>exporter.createExportedWidget2() : SpecializedWidget.Widget2
>exporter.createExportedWidget2 : () => SpecializedWidget.Widget2
>exporter : 类为 exporter
>createExportedWidget2 : () => SpecializedWidget.Widget2

    static myPublicStaticProperty1 = exporter.createExportedWidget4(); // Error
>myPublicStaticProperty1 : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4() : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4 : () => SpecializedGlobalWidget.Widget4
>exporter : 类为 exporter
>createExportedWidget4 : () => SpecializedGlobalWidget.Widget4

    myPublicProperty1 = exporter.createExportedWidget4(); // Error
>myPublicProperty1 : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4() : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4 : () => SpecializedGlobalWidget.Widget4
>exporter : 类为 exporter
>createExportedWidget4 : () => SpecializedGlobalWidget.Widget4
}
export var publicVarWithPrivateModulePropertyTypes= exporter.createExportedWidget2(); // Error
>publicVarWithPrivateModulePropertyTypes : SpecializedWidget.Widget2
>exporter.createExportedWidget2() : SpecializedWidget.Widget2
>exporter.createExportedWidget2 : () => SpecializedWidget.Widget2
>exporter : 类为 exporter
>createExportedWidget2 : () => SpecializedWidget.Widget2

export var publicVarWithPrivateModulePropertyTypes1 = exporter.createExportedWidget4(); // Error
>publicVarWithPrivateModulePropertyTypes1 : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4() : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4 : () => SpecializedGlobalWidget.Widget4
>exporter : 类为 exporter
>createExportedWidget4 : () => SpecializedGlobalWidget.Widget4

class privateClassWithPrivateModulePropertyTypes {
>privateClassWithPrivateModulePropertyTypes : privateClassWithPrivateModulePropertyTypes

    static myPublicStaticProperty= exporter.createExportedWidget2();
>myPublicStaticProperty : SpecializedWidget.Widget2
>exporter.createExportedWidget2() : SpecializedWidget.Widget2
>exporter.createExportedWidget2 : () => SpecializedWidget.Widget2
>exporter : 类为 exporter
>createExportedWidget2 : () => SpecializedWidget.Widget2

    myPublicProperty= exporter.createExportedWidget2();
>myPublicProperty : SpecializedWidget.Widget2
>exporter.createExportedWidget2() : SpecializedWidget.Widget2
>exporter.createExportedWidget2 : () => SpecializedWidget.Widget2
>exporter : 类为 exporter
>createExportedWidget2 : () => SpecializedWidget.Widget2

    static myPublicStaticProperty1 = exporter.createExportedWidget4();
>myPublicStaticProperty1 : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4() : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4 : () => SpecializedGlobalWidget.Widget4
>exporter : 类为 exporter
>createExportedWidget4 : () => SpecializedGlobalWidget.Widget4

    myPublicProperty1 = exporter.createExportedWidget4();
>myPublicProperty1 : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4() : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4 : () => SpecializedGlobalWidget.Widget4
>exporter : 类为 exporter
>createExportedWidget4 : () => SpecializedGlobalWidget.Widget4
}
var privateVarWithPrivateModulePropertyTypes= exporter.createExportedWidget2();
>privateVarWithPrivateModulePropertyTypes : SpecializedWidget.Widget2
>exporter.createExportedWidget2() : SpecializedWidget.Widget2
>exporter.createExportedWidget2 : () => SpecializedWidget.Widget2
>exporter : 类为 exporter
>createExportedWidget2 : () => SpecializedWidget.Widget2

var privateVarWithPrivateModulePropertyTypes1 = exporter.createExportedWidget4();
>privateVarWithPrivateModulePropertyTypes1 : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4() : SpecializedGlobalWidget.Widget4
>exporter.createExportedWidget4 : () => SpecializedGlobalWidget.Widget4
>exporter : 类为 exporter
>createExportedWidget4 : () => SpecializedGlobalWidget.Widget4

=== tests/cases/compiler/privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts ===
declare module "GlobalWidgets" {
    export class Widget3 {
>Widget3 : Widget3

        name: string;
>name : 文字
>类型别名 :=> 文字
    }
    export function createWidget3(): Widget3;
>createWidget3 : () => Widget3
>Widget3 : Widget3

    export module SpecializedGlobalWidget {
>SpecializedGlobalWidget : 类为 SpecializedGlobalWidget

        export class Widget4 {
>Widget4 : Widget4

            name: string;
>name : 文字
>类型别名 :=> 文字
        }
        function createWidget4(): Widget4;
>createWidget4 : () => Widget4
>Widget4 : Widget4
    }
}

=== tests/cases/compiler/privacyCannotNameVarTypeDeclFile_Widgets.ts ===
export class Widget1 {
>Widget1 : Widget1

    name = 'one';
>name : 文字
>类型别名 :=> 文字
>'one' : "one"
}
export function createWidget1() {
>createWidget1 : () => Widget1

    return new Widget1();
>new Widget1() : Widget1
>Widget1 : 类为 Widget1
}

export module SpecializedWidget {
>SpecializedWidget : 类为 SpecializedWidget

    export class Widget2 {
>Widget2 : Widget2

        name = 'one';
>name : 文字
>类型别名 :=> 文字
>'one' : "one"
    }
    export function createWidget2() {
>createWidget2 : () => Widget2

        return new Widget2();
>new Widget2() : Widget2
>Widget2 : 类为 Widget2
    }
}

=== tests/cases/compiler/privacyCannotNameVarTypeDeclFile_exporter.ts ===
///<reference path='privacyCannotNameVarTypeDeclFile_GlobalWidgets.ts'/>
import Widgets = require("./privacyCannotNameVarTypeDeclFile_Widgets");
>Widgets : 类为 Widgets

import Widgets1 = require("GlobalWidgets");
>Widgets1 : 类为 Widgets1

export function createExportedWidget1() {
>createExportedWidget1 : () => Widgets.Widget1

    return Widgets.createWidget1();
>Widgets.createWidget1() : Widgets.Widget1
>Widgets.createWidget1 : () => Widgets.Widget1
>Widgets : 类为 Widgets
>createWidget1 : () => Widgets.Widget1
}
export function createExportedWidget2() {
>createExportedWidget2 : () => Widgets.SpecializedWidget.Widget2

    return Widgets.SpecializedWidget.createWidget2();
>Widgets.SpecializedWidget.createWidget2() : Widgets.SpecializedWidget.Widget2
>Widgets.SpecializedWidget.createWidget2 : () => Widgets.SpecializedWidget.Widget2
>Widgets.SpecializedWidget : 类为 Widgets.SpecializedWidget
>Widgets : 类为 Widgets
>SpecializedWidget : 类为 Widgets.SpecializedWidget
>createWidget2 : () => Widgets.SpecializedWidget.Widget2
}
export function createExportedWidget3() {
>createExportedWidget3 : () => Widgets1.Widget3

    return Widgets1.createWidget3();
>Widgets1.createWidget3() : Widgets1.Widget3
>Widgets1.createWidget3 : () => Widgets1.Widget3
>Widgets1 : 类为 Widgets1
>createWidget3 : () => Widgets1.Widget3
}
export function createExportedWidget4() {
>createExportedWidget4 : () => Widgets1.SpecializedGlobalWidget.Widget4

    return Widgets1.SpecializedGlobalWidget.createWidget4();
>Widgets1.SpecializedGlobalWidget.createWidget4() : Widgets1.SpecializedGlobalWidget.Widget4
>Widgets1.SpecializedGlobalWidget.createWidget4 : () => Widgets1.SpecializedGlobalWidget.Widget4
>Widgets1.SpecializedGlobalWidget : 类为 Widgets1.SpecializedGlobalWidget
>Widgets1 : 类为 Widgets1
>SpecializedGlobalWidget : 类为 Widgets1.SpecializedGlobalWidget
>createWidget4 : () => Widgets1.SpecializedGlobalWidget.Widget4
}

