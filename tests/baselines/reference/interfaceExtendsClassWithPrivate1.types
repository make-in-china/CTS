=== tests/cases/compiler/interfaceExtendsClassWithPrivate1.ts ===
class C {
>C : C

    public foo(x: any) { return x; }
>foo : (x: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意

    private x = 1;
>x : 数字
>类型别名 :=> 数字
>1 : 1
}

interface I extends C {
>I : I
>C : C

    other(x: any): any;
>other : (x: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
}

class D extends C implements I {
>D : D
>C : C
>I : I

    public foo(x: any) { return x; }
>foo : (x: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意

    other(x: any) { return x; }
>other : (x: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意

    bar() { }
>bar : () => 无值
} 

var c: C;
>c : C
>C : C

var i: I;
>i : I
>I : I

var d: D;
>d : D
>D : D

c = i;
>c = i : I
>c : C
>i : I

i = c; // error
>i = c : C
>i : I
>c : C

i = d;
>i = d : D
>i : I
>d : D

d = i; // error
>d = i : I
>d : D
>i : I

c = d;
>c = d : D
>c : C
>d : D

d = c; // error
>d = c : C
>d : D
>c : C

