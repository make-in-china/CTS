=== tests/cases/conformance/classes/propertyMemberDeclarations/twoAccessorsWithSameName.ts ===
class C {
>C : C

    get x() { return 1; }
>x : number
>类型别名 :=> 数字
>1 : 1

    get x() { return 1; } // error
>x : number
>类型别名 :=> 数字
>1 : 1
}

class D {
>D : D

    set x(v) {  }
>x : any
>类型别名 :=> 任意
>v : any
>类型别名 :=> 任意

    set x(v) {  } // error
>x : any
>类型别名 :=> 任意
>v : any
>类型别名 :=> 任意
}

class E {
>E : E

    get x() {
>x : number
>类型别名 :=> 数字

        return 1;
>1 : 1
    }
    set x(v) { }
>x : number
>类型别名 :=> 数字
>v : number
>类型别名 :=> 数字
}

var x = {
>x : { readonly x: number; }
>{    get x() {        return 1;    },    // error    get x() {        return 1;    }} : { readonly x: number; }

    get x() {
>x : number
>类型别名 :=> 数字

        return 1;
>1 : 1

    },

    // error
    get x() {
>x : number
>类型别名 :=> 数字

        return 1;
>1 : 1
    }
}

var y = {
>y : { x: number; }
>{    get x() {        return 1;    },    set x(v) { }} : { x: number; }

    get x() {
>x : number
>类型别名 :=> 数字

        return 1;
>1 : 1

    },
    set x(v) { }
>x : number
>类型别名 :=> 数字
>v : number
>类型别名 :=> 数字
}
