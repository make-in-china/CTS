=== tests/cases/conformance/internalModules/DeclarationMerging/module.d.ts ===
declare module Point {
>Point : 类为 Point

    export var Origin: { x: number; y: number; }
>Origin : { x: 数字; y: 数字; }
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字
}

=== tests/cases/conformance/internalModules/DeclarationMerging/function.d.ts ===
declare function Point(): { x: number; y: number; }
>Point : 类为 Point
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

=== tests/cases/conformance/internalModules/DeclarationMerging/test.ts ===
var cl: { x: number; y: number; }
>cl : { x: 数字; y: 数字; }
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

var cl = Point();
>cl : { x: 数字; y: 数字; }
>Point() : { x: 数字; y: 数字; }
>Point : 类为 Point

var cl = Point.Origin;
>cl : { x: 数字; y: 数字; }
>Point.Origin : { x: 数字; y: 数字; }
>Point : 类为 Point
>Origin : { x: 数字; y: 数字; }

