=== tests/cases/compiler/widenToAny1.ts ===
function foo1<T>(f1: { x: T; y: T }): T {
>foo1 : <T>(f1: { x: T; y: T; }) => T
>T : T
>f1 : { x: T; y: T; }
>x : T
>T : T
>y : T
>T : T
>T : T

    return undefined;
>undefined : undefined
>类型别名 :=> 未定
}
var z1: number = foo1({ x: undefined, y: "def" });  // Best common type is any
>z1 : number
>类型别名 :=> 数字
>foo1({ x: undefined, y: "def" }) : string
>类型别名 :=> 文字
>foo1 : <T>(f1: { x: T; y: T; }) => T
>{ x: undefined, y: "def" } : { x: undefined; y: string; }
>x : undefined
>类型别名 :=> 未定
>undefined : undefined
>类型别名 :=> 未定
>y : string
>类型别名 :=> 文字
>"def" : "def"

