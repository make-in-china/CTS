=== tests/cases/conformance/expressions/typeGuards/typeGuardsObjectMethods.ts ===
// Note that type guards affect types of variables and parameters only and 
// have no effect on members of objects such as properties. 

// variables in global
var num: number;
>num : 数字
>类型别名 :=> 数字

var strOrNum: string | number;
>strOrNum : 文字 | 数字

var var1: string | number;
>var1 : 文字 | 数字

var obj1 = {
>obj1 : { method(param: 文字 | 数字): 文字 | 数字; prop: 文字 | 数字; }
>{    // Inside method    method(param: string | number) {        // global vars in function declaration        num = typeof var1 === "string" && var1.length; // string        // variables in function declaration        var var2: string | number;        num = typeof var2 === "string" && var2.length; // string        // parameters in function declaration        num = typeof param === "string" && param.length; // string        return strOrNum;    },    get prop() {        // global vars in function declaration        num = typeof var1 === "string" && var1.length; // string        // variables in function declaration        var var2: string | number;        num = typeof var2 === "string" && var2.length; // string        return strOrNum;    },    set prop(param: string | number) {        // global vars in function declaration        num = typeof var1 === "string" && var1.length; // string        // variables in function declaration        var var2: string | number;        num = typeof var2 === "string" && var2.length; // string        // parameters in function declaration        num = typeof param === "string" && param.length; // string    }} : { method(param: 文字 | 数字): 文字 | 数字; prop: 文字 | 数字; }

    // Inside method
    method(param: string | number) {
>method : (param: 文字 | 数字) => 文字 | 数字
>param : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables in function declaration
        var var2: string | number;
>var2 : 文字 | 数字

        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // parameters in function declaration
        num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        return strOrNum;
>strOrNum : 文字 | 数字

    },
    get prop() {
>prop : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables in function declaration
        var var2: string | number;
>var2 : 文字 | 数字

        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        return strOrNum;
>strOrNum : 文字 | 数字

    },
    set prop(param: string | number) {
>prop : 文字 | 数字
>param : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables in function declaration
        var var2: string | number;
>var2 : 文字 | 数字

        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // parameters in function declaration
        num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
    }
};
// return expression of the method
strOrNum = typeof obj1.method(strOrNum) === "string" && obj1.method(strOrNum); 
>strOrNum = typeof obj1.method(strOrNum) === "string" && obj1.method(strOrNum) : 文字 | 数字
>strOrNum : 文字 | 数字
>typeof obj1.method(strOrNum) === "string" && obj1.method(strOrNum) : 文字 | 数字
>typeof obj1.method(strOrNum) === "string" : 真假
>类型别名 :=> 真假
>typeof obj1.method(strOrNum) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>obj1.method(strOrNum) : 文字 | 数字
>obj1.method : (param: 文字 | 数字) => 文字 | 数字
>obj1 : { method(param: 文字 | 数字): 文字 | 数字; prop: 文字 | 数字; }
>method : (param: 文字 | 数字) => 文字 | 数字
>strOrNum : 文字 | 数字
>"string" : "string"
>obj1.method(strOrNum) : 文字 | 数字
>obj1.method : (param: 文字 | 数字) => 文字 | 数字
>obj1 : { method(param: 文字 | 数字): 文字 | 数字; prop: 文字 | 数字; }
>method : (param: 文字 | 数字) => 文字 | 数字
>strOrNum : 文字 | 数字

// accessing getter property
strOrNum = typeof obj1.prop === "string" && obj1.prop; 
>strOrNum = typeof obj1.prop === "string" && obj1.prop : 文字
>类型别名 :=> 文字
>strOrNum : 文字 | 数字
>typeof obj1.prop === "string" && obj1.prop : 文字
>类型别名 :=> 文字
>typeof obj1.prop === "string" : 真假
>类型别名 :=> 真假
>typeof obj1.prop : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>obj1.prop : 文字 | 数字
>obj1 : { method(param: 文字 | 数字): 文字 | 数字; prop: 文字 | 数字; }
>prop : 文字 | 数字
>"string" : "string"
>obj1.prop : 文字
>类型别名 :=> 文字
>obj1 : { method(param: 文字 | 数字): 文字 | 数字; prop: 文字 | 数字; }
>prop : 文字
>类型别名 :=> 文字

