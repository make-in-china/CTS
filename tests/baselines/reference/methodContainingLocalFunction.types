=== tests/cases/compiler/methodContainingLocalFunction.ts ===
// The first case here (BugExhibition<T>) caused a crash. Try with different permutations of features.
class BugExhibition<T> {
>BugExhibition : BugExhibition<T>
>T : T

    public exhibitBug() {
>exhibitBug : () => 无值

        function localFunction() { }
>localFunction : () => 无值

        var x: { (): void; };
>x : () => 无值

        x = localFunction;
>x = localFunction : () => 无值
>x : () => 无值
>localFunction : () => 无值
    }
}

class BugExhibition2<T> {
>BugExhibition2 : BugExhibition2<T>
>T : T

    private static get exhibitBug() {
>exhibitBug : 任意
>类型别名 :=> 任意

        function localFunction() { }
>localFunction : () => 无值

        var x: { (): void; };
>x : () => 无值

        x = localFunction;
>x = localFunction : () => 无值
>x : () => 无值
>localFunction : () => 无值

        return null;
>null : 空值
>类型别名 :=> 空值
    }
}

class BugExhibition3<T> {
>BugExhibition3 : BugExhibition3<T>
>T : T

    public exhibitBug() {
>exhibitBug : () => 无值

        function localGenericFunction<U>(u?: U) { }
>localGenericFunction : <U>(u?: U) => 无值
>U : U
>u : U
>U : U

        var x: { (): void; };
>x : () => 无值

        x = localGenericFunction;
>x = localGenericFunction : <U>(u?: U) => 无值
>x : () => 无值
>localGenericFunction : <U>(u?: U) => 无值
    }
}

class C {
>C : C

    exhibit() {
>exhibit : () => 无值

        var funcExpr = <U>(u?: U) => { };
>funcExpr : <U>(u?: U) => 无值
><U>(u?: U) => { } : <U>(u?: U) => 无值
>U : U
>u : U
>U : U

        var x: { (): void; };
>x : () => 无值

        x = funcExpr;
>x = funcExpr : <U>(u?: U) => 无值
>x : () => 无值
>funcExpr : <U>(u?: U) => 无值
    }
}

module M {
>M : 类为 M

    export function exhibitBug() {
>exhibitBug : () => 无值

        function localFunction() { }
>localFunction : () => 无值

        var x: { (): void; };
>x : () => 无值

        x = localFunction;
>x = localFunction : () => 无值
>x : () => 无值
>localFunction : () => 无值
    }
}

enum E {
>E : E

    A = (() => {
>A : E
>(() => {        function localFunction() { }        var x: { (): void; };        x = localFunction;        return 0;    })() : 数字
>类型别名 :=> 数字
>(() => {        function localFunction() { }        var x: { (): void; };        x = localFunction;        return 0;    }) : () => 数字
>() => {        function localFunction() { }        var x: { (): void; };        x = localFunction;        return 0;    } : () => 数字

        function localFunction() { }
>localFunction : () => 无值

        var x: { (): void; };
>x : () => 无值

        x = localFunction;
>x = localFunction : () => 无值
>x : () => 无值
>localFunction : () => 无值

        return 0;
>0 : 0

    })()
}
