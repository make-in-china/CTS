=== tests/cases/compiler/bindingPatternInParameter01.ts ===
const nestedArray = [[[1, 2]], [[3, 4]]];
>nestedArray : number[][][]
>[[[1, 2]], [[3, 4]]] : number[][][]
>[[1, 2]] : number[][]
>[1, 2] : number[]
>1 : 1
>2 : 2
>[[3, 4]] : number[][]
>[3, 4] : number[]
>3 : 3
>4 : 4

nestedArray.forEach(([[a, b]]) => {
>nestedArray.forEach(([[a, b]]) => {  console.log(a, b);}) : void
>类型别名 :=> 无值
>nestedArray.forEach : (callbackfn: (value: number[][], index: number, array: number[][][]) => void, thisArg?: any) => void
>nestedArray : number[][][]
>forEach : (callbackfn: (value: number[][], index: number, array: number[][][]) => void, thisArg?: any) => void
>([[a, b]]) => {  console.log(a, b);} : ([[a, b]]: number[][]) => void
>a : number
>类型别名 :=> 数字
>b : number
>类型别名 :=> 数字

  console.log(a, b);
>console.log(a, b) : any
>类型别名 :=> 任意
>console.log : any
>类型别名 :=> 任意
>console : any
>类型别名 :=> 任意
>log : any
>类型别名 :=> 任意
>a : number
>类型别名 :=> 数字
>b : number
>类型别名 :=> 数字

});

