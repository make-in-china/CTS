=== tests/cases/compiler/bindingPatternInParameter01.ts ===
const nestedArray = [[[1, 2]], [[3, 4]]];
>nestedArray : 数字[][][]
>[[[1, 2]], [[3, 4]]] : 数字[][][]
>[[1, 2]] : 数字[][]
>[1, 2] : 数字[]
>1 : 1
>2 : 2
>[[3, 4]] : 数字[][]
>[3, 4] : 数字[]
>3 : 3
>4 : 4

nestedArray.forEach(([[a, b]]) => {
>nestedArray.forEach(([[a, b]]) => {  console.log(a, b);}) : 无值
>类型别名 :=> 无值
>nestedArray.forEach : (callbackfn: (value: 数字[][], index: 数字, array: 数字[][][]) => 无值, thisArg?: 任意) => 无值
>nestedArray : 数字[][][]
>forEach : (callbackfn: (value: 数字[][], index: 数字, array: 数字[][][]) => 无值, thisArg?: 任意) => 无值
>([[a, b]]) => {  console.log(a, b);} : ([[a, b]]: 数字[][]) => 无值
>a : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

  console.log(a, b);
>console.log(a, b) : 任意
>类型别名 :=> 任意
>console.log : 任意
>类型别名 :=> 任意
>console : 任意
>类型别名 :=> 任意
>log : 任意
>类型别名 :=> 任意
>a : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

});

