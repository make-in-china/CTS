=== tests/cases/compiler/systemModule8.ts ===
export var x;
>x : any
>类型别名 :=> 任意

x = 1;
>x = 1 : 1
>x : any
>类型别名 :=> 任意
>1 : 1

x++;
>x++ : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意

x--;
>x-- : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意

++x;
>++x : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意

--x;
>--x : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意

x += 1;
>x += 1 : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>1 : 1

x -= 1;
>x -= 1 : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意
>1 : 1

x *= 1;
>x *= 1 : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意
>1 : 1

x /= 1;
>x /= 1 : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意
>1 : 1

x |= 1;
>x |= 1 : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意
>1 : 1

x &= 1;
>x &= 1 : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意
>1 : 1

x + 1;
>x + 1 : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>1 : 1

x - 1;
>x - 1 : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意
>1 : 1

x & 1;
>x & 1 : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意
>1 : 1

x | 1;
>x | 1 : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意
>1 : 1

for (x = 5;;x++) {}
>x = 5 : 5
>x : any
>类型别名 :=> 任意
>5 : 5
>x++ : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意

for (x = 8;;x--) {}
>x = 8 : 8
>x : any
>类型别名 :=> 任意
>8 : 8
>x-- : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意

for (x = 15;;++x) {}
>x = 15 : 15
>x : any
>类型别名 :=> 任意
>15 : 15
>++x : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意

for (x = 18;;--x) {}
>x = 18 : 18
>x : any
>类型别名 :=> 任意
>18 : 18
>--x : number
>类型别名 :=> 数字
>x : any
>类型别名 :=> 任意

for (let x = 50;;) {}
>x : number
>类型别名 :=> 数字
>50 : 50

function foo() {
>foo : () => void

    x = 100;
>x = 100 : 100
>x : any
>类型别名 :=> 任意
>100 : 100
}

export let [y] = [1];
>y : number
>类型别名 :=> 数字
>[1] : [number]
>1 : 1

export const {a: z0, b: {c: z1}} = {a: true, b: {c: "123"}};
>a : any
>类型别名 :=> 任意
>z0 : boolean
>类型别名 :=> 真假
>b : any
>类型别名 :=> 任意
>c : any
>类型别名 :=> 任意
>z1 : string
>类型别名 :=> 文字
>{a: true, b: {c: "123"}} : { a: boolean; b: { c: string; }; }
>a : boolean
>类型别名 :=> 真假
>true : true
>类型别名 :=> 为真
>b : { c: string; }
>{c: "123"} : { c: string; }
>c : string
>类型别名 :=> 文字
>"123" : "123"

for ([x] of [[1]]) {}
>[x] : [any]
>x : any
>类型别名 :=> 任意
>[[1]] : number[][]
>[1] : number[]
>1 : 1

