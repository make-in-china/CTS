=== tests/cases/compiler/aliasesInSystemModule1.ts ===
import alias = require('foo');
>alias : 任意
>类型别名 :=> 任意

import cls = alias.Class;
>cls : 任意
>类型别名 :=> 任意
>alias : 任意
>类型别名 :=> 任意
>Class : 任意
>类型别名 :=> 任意

export import cls2 = alias.Class;
>cls2 : 任意
>类型别名 :=> 任意
>alias : 任意
>类型别名 :=> 任意
>Class : 任意
>类型别名 :=> 任意

let x = new alias.Class();
>x : 任意
>类型别名 :=> 任意
>new alias.Class() : 任意
>类型别名 :=> 任意
>alias.Class : 任意
>类型别名 :=> 任意
>alias : 任意
>类型别名 :=> 任意
>Class : 任意
>类型别名 :=> 任意

let y = new cls();
>y : 任意
>类型别名 :=> 任意
>new cls() : 任意
>类型别名 :=> 任意
>cls : 任意
>类型别名 :=> 任意

let z = new cls2();
>z : 任意
>类型别名 :=> 任意
>new cls2() : 任意
>类型别名 :=> 任意
>cls2 : 任意
>类型别名 :=> 任意

module M {
>M : 类为 M

  export import cls = alias.Class;
>cls : 任意
>类型别名 :=> 任意
>alias : 任意
>类型别名 :=> 任意
>Class : 任意
>类型别名 :=> 任意

  let x = new alias.Class();
>x : 任意
>类型别名 :=> 任意
>new alias.Class() : 任意
>类型别名 :=> 任意
>alias.Class : 任意
>类型别名 :=> 任意
>alias : 任意
>类型别名 :=> 任意
>Class : 任意
>类型别名 :=> 任意

  let y = new cls(); 
>y : 任意
>类型别名 :=> 任意
>new cls() : 任意
>类型别名 :=> 任意
>cls : 任意
>类型别名 :=> 任意

  let z = new cls2();
>z : 任意
>类型别名 :=> 任意
>new cls2() : 任意
>类型别名 :=> 任意
>cls2 : 任意
>类型别名 :=> 任意
}
  
