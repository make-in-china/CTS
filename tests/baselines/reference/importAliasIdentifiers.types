=== tests/cases/conformance/internalModules/importDeclarations/importAliasIdentifiers.ts ===
module moduleA {
>moduleA : typeof moduleA

    export class Point {
>Point : Point

        constructor(public x: number, public y: number) { }
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
    }
}

import alias = moduleA;
>alias : typeof moduleA
>moduleA : typeof moduleA

var p: alias.Point;
>p : alias.Point
>alias : any
>类型别名 :=> 任意
>Point : alias.Point

var p: moduleA.Point;
>p : alias.Point
>moduleA : any
>类型别名 :=> 任意
>Point : alias.Point

var p: { x: number; y: number; };
>p : alias.Point
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

class clodule {
>clodule : clodule

    name: string;
>name : string
>类型别名 :=> 文字
}

module clodule {
>clodule : typeof clodule

    export interface Point {
>Point : Point

        x: number; y: number;
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
    }
    var Point: Point = { x: 0, y: 0 };
>Point : Point
>Point : Point
>{ x: 0, y: 0 } : { x: number; y: number; }
>x : number
>类型别名 :=> 数字
>0 : 0
>y : number
>类型别名 :=> 数字
>0 : 0
}

import clolias = clodule;
>clolias : typeof clodule
>clodule : clodule

var p: clolias.Point;
>p : alias.Point
>clolias : any
>类型别名 :=> 任意
>Point : clolias.Point

var p: clodule.Point;
>p : alias.Point
>clodule : any
>类型别名 :=> 任意
>Point : clolias.Point

var p: { x: number; y: number; };
>p : alias.Point
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字


function fundule() {
>fundule : typeof fundule

    return { x: 0, y: 0 };
>{ x: 0, y: 0 } : { x: number; y: number; }
>x : number
>类型别名 :=> 数字
>0 : 0
>y : number
>类型别名 :=> 数字
>0 : 0
}

module fundule {
>fundule : typeof fundule

    export interface Point {
>Point : Point

        x: number; y: number;
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
    }
    var Point: Point = { x: 0, y: 0 };
>Point : Point
>Point : Point
>{ x: 0, y: 0 } : { x: number; y: number; }
>x : number
>类型别名 :=> 数字
>0 : 0
>y : number
>类型别名 :=> 数字
>0 : 0
}

import funlias = fundule;
>funlias : typeof fundule
>fundule : typeof fundule

var p: funlias.Point;
>p : alias.Point
>funlias : any
>类型别名 :=> 任意
>Point : funlias.Point

var p: fundule.Point;
>p : alias.Point
>fundule : any
>类型别名 :=> 任意
>Point : funlias.Point

var p: { x: number; y: number; };
>p : alias.Point
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

