=== /a/node_modules/@types/testCh/index.d.ts ===
//@@{ 内容描述:C, 标题:t, 内容:n }
//@@{ "啊啊啊啊啊":"AAAAAAAAAAA", "宝宝贝贝吧":"BBBBBBBBB" }
导出 声明 接口 内容描述{
>内容描述 : 内容描述
>类型别名 :=> C

    标题: 文字
>标题 : string
>类型别名 :=> 文字

    内容: "啊啊啊啊啊" | "宝宝贝贝吧"
>内容 : "啊啊啊啊啊" | "宝宝贝贝吧"
}

//@@{ 测试类:Te, 测试目标:v, 测试内容:tn, 取测试目标:V, 取测试内容:Tn }
导出 声明 类别 测试类 {
>测试类 : 测试类
>类型别名 :=> Te

    私有 测试目标: 文字
>测试目标 : string
>类型别名 :=> 文字

    私有 测试内容: 内容描述
>测试内容 : 内容描述
>类型别名 :=> C
>内容描述 : 内容描述
>类型别名 :=> C

    构造(测试目标: 文字, 测试内容: 内容描述)
>测试目标 : string
>类型别名 :=> 文字
>测试内容 : 内容描述
>类型别名 :=> C
>内容描述 : 内容描述
>类型别名 :=> C

    取测试目标: 文字
>取测试目标 : string
>类型别名 :=> 文字

    取测试内容: 内容描述
>取测试内容 : 内容描述
>类型别名 :=> C
>内容描述 : 内容描述
>类型别名 :=> C
}

//@@{ 测试类2:Te2, 测试目标:v, 测试内容:tn, 取测试目标:V, 取测试内容:Tn }
导出 声明 类别 测试类2 {
>测试类2 : 测试类2
>类型别名 :=> Te2

    私有 测试目标: 文字
>测试目标 : string
>类型别名 :=> 文字

    私有 测试内容: 内容描述
>测试内容 : 内容描述
>类型别名 :=> C
>内容描述 : 内容描述
>类型别名 :=> C

    构造(测试目标: 文字, 测试内容: 内容描述)
>测试目标 : string
>类型别名 :=> 文字
>测试内容 : 内容描述
>类型别名 :=> C
>内容描述 : 内容描述
>类型别名 :=> C

    取测试目标: 文字
>取测试目标 : string
>类型别名 :=> 文字

    取测试内容: 内容描述
>取测试内容 : 内容描述
>类型别名 :=> C
>内容描述 : 内容描述
>类型别名 :=> C
}

=== /a/测试_1_ch.ts ===
导入 { 测试类, 测试类2, 内容描述 } 来自 "testch"
>测试类 : typeof 测试类
>类型别名 :=> Te
>测试类2 : typeof 测试类2
>类型别名 :=> Te2
>内容描述 : any
>类型别名 :=> 任意

变量 测试目标 = "vvvvv"
>测试目标 : string
>类型别名 :=> 文字
>"vvvvv" : "vvvvv"

变量 测试内容 = {
>测试内容 : { 标题: string; 内容: "啊啊啊啊啊" | "宝宝贝贝吧"; }
>{    标题: "ttttt",    内容: "啊啊啊啊啊" 转为 "啊啊啊啊啊"| "宝宝贝贝吧"} : { 标题: string; 内容: "啊啊啊啊啊" | "宝宝贝贝吧"; }

    标题: "ttttt",
>标题 : string
>类型别名 :=> 文字
>"ttttt" : "ttttt"

    内容: "啊啊啊啊啊" 转为 "啊啊啊啊啊"| "宝宝贝贝吧"
>内容 : "啊啊啊啊啊" | "宝宝贝贝吧"
>"啊啊啊啊啊" 转为 "啊啊啊啊啊"| "宝宝贝贝吧" : "啊啊啊啊啊" | "宝宝贝贝吧"
>"啊啊啊啊啊" : "啊啊啊啊啊"
>类型别名 :=> AAAAAAAAAAA
}

变量 标1 = 新建 测试类("vvvvv", 测试内容)
>标1 : 测试类
>类型别名 :=> Te
>新建 测试类("vvvvv", 测试内容) : 测试类
>类型别名 :=> Te
>测试类 : typeof 测试类
>类型别名 :=> Te
>"vvvvv" : "vvvvv"
>测试内容 : { 标题: string; 内容: "啊啊啊啊啊" | "宝宝贝贝吧"; }

变量 标2 = 新建 测试类2(测试目标, 测试内容)
>标2 : 测试类2
>类型别名 :=> Te2
>新建 测试类2(测试目标, 测试内容) : 测试类2
>类型别名 :=> Te2
>测试类2 : typeof 测试类2
>类型别名 :=> Te2
>测试目标 : string
>类型别名 :=> 文字
>测试内容 : { 标题: string; 内容: "啊啊啊啊啊" | "宝宝贝贝吧"; }

变量 测试目标2 = "vvvvv"
>测试目标2 : string
>类型别名 :=> 文字
>"vvvvv" : "vvvvv"

变量 标题 = "ttttt"
>标题 : string
>类型别名 :=> 文字
>"ttttt" : "ttttt"

变量 测试内容2: 内容描述 = { 标题: 标题, 内容: "宝宝贝贝吧" }
>测试内容2 : 内容描述
>类型别名 :=> C
>内容描述 : 内容描述
>类型别名 :=> C
>{ 标题: 标题, 内容: "宝宝贝贝吧" } : { 标题: string; 内容: "宝宝贝贝吧"; }
>标题 : string
>类型别名 :=> 文字
>标题 : string
>类型别名 :=> 文字
>内容 : string
>类型别名 :=> 文字
>"宝宝贝贝吧" : "宝宝贝贝吧"
>类型别名 :=> BBBBBBBBB

变量 标3 = 新建 测试类(测试目标2, 测试内容2)
>标3 : 测试类
>类型别名 :=> Te
>新建 测试类(测试目标2, 测试内容2) : 测试类
>类型别名 :=> Te
>测试类 : typeof 测试类
>类型别名 :=> Te
>测试目标2 : string
>类型别名 :=> 文字
>测试内容2 : 内容描述
>类型别名 :=> C

如果(标1 && 标2 && 标3){
>标1 && 标2 && 标3 : 测试类
>类型别名 :=> Te
>标1 && 标2 : 测试类2
>类型别名 :=> Te2
>标1 : 测试类
>类型别名 :=> Te
>标2 : 测试类2
>类型别名 :=> Te2
>标3 : 测试类
>类型别名 :=> Te
    
    标1.取测试目标
>标1.取测试目标 : string
>类型别名 :=> 文字
>标1 : 测试类
>类型别名 :=> Te
>取测试目标 : string
>类型别名 :=> 文字

    标1.取测试内容
>标1.取测试内容 : 内容描述
>类型别名 :=> C
>标1 : 测试类
>类型别名 :=> Te
>取测试内容 : 内容描述
>类型别名 :=> C

    标2.取测试目标
>标2.取测试目标 : string
>类型别名 :=> 文字
>标2 : 测试类2
>类型别名 :=> Te2
>取测试目标 : string
>类型别名 :=> 文字

    标2.取测试内容
>标2.取测试内容 : 内容描述
>类型别名 :=> C
>标2 : 测试类2
>类型别名 :=> Te2
>取测试内容 : 内容描述
>类型别名 :=> C

    标3["取测试目标"]
>标3["取测试目标"] : string
>类型别名 :=> 文字
>标3 : 测试类
>类型别名 :=> Te
>"取测试目标" : "取测试目标"
>类型别名 :=> V

    标3["取测试内容"]
>标3["取测试内容"] : 内容描述
>类型别名 :=> C
>标3 : 测试类
>类型别名 :=> Te
>"取测试内容" : "取测试内容"
>类型别名 :=> Tn
}

