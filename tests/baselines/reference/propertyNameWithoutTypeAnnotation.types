=== tests/cases/conformance/types/objectTypeLiteral/propertySignatures/propertyNameWithoutTypeAnnotation.ts ===
class C {
>C : C

    foo;
>foo : any
>类型别名 :=> 任意
}

interface I {
>I : I

    foo;
>foo : any
>类型别名 :=> 任意
}

var a: {
>a : { foo: any; }

    foo;
>foo : any
>类型别名 :=> 任意
}

var b = {
>b : { foo: any; }
>{    foo: null} : { foo: null; }

    foo: null
>foo : null
>类型别名 :=> 空值
>null : null
>类型别名 :=> 空值
}

// These should all be of type 'any'
var r1 = (new C()).foo;
>r1 : any
>类型别名 :=> 任意
>(new C()).foo : any
>类型别名 :=> 任意
>(new C()) : C
>new C() : C
>C : typeof C
>foo : any
>类型别名 :=> 任意

var r2 = (<I>null).foo;
>r2 : any
>类型别名 :=> 任意
>(<I>null).foo : any
>类型别名 :=> 任意
>(<I>null) : I
><I>null : I
>I : I
>null : null
>类型别名 :=> 空值
>foo : any
>类型别名 :=> 任意

var r3 = a.foo;
>r3 : any
>类型别名 :=> 任意
>a.foo : any
>类型别名 :=> 任意
>a : { foo: any; }
>foo : any
>类型别名 :=> 任意

var r4 = b.foo;
>r4 : any
>类型别名 :=> 任意
>b.foo : any
>类型别名 :=> 任意
>b : { foo: any; }
>foo : any
>类型别名 :=> 任意

