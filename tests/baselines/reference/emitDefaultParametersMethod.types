=== tests/cases/conformance/es6/defaultParameters/emitDefaultParametersMethod.ts ===
class C {
>C : C

    constructor(t: boolean, z: string, x: number, y = "hello") { }
>t : 真假
>类型别名 :=> 真假
>z : 文字
>类型别名 :=> 文字
>x : 数字
>类型别名 :=> 数字
>y : 文字
>类型别名 :=> 文字
>"hello" : "hello"

    public foo(x: string, t = false) { }
>foo : (x: 文字, t?: 真假) => 无值
>x : 文字
>类型别名 :=> 文字
>t : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假

    public foo1(x: string, t = false, ...rest) { }
>foo1 : (x: 文字, t?: 真假, ...rest: 任意[]) => 无值
>x : 文字
>类型别名 :=> 文字
>t : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假
>rest : 任意[]

    public bar(t = false) { }
>bar : (t?: 真假) => 无值
>t : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假

    public boo(t = false, ...rest) { }
>boo : (t?: 真假, ...rest: 任意[]) => 无值
>t : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假
>rest : 任意[]
}

class D {
>D : D

    constructor(y = "hello") { }
>y : 文字
>类型别名 :=> 文字
>"hello" : "hello"
}

class E {
>E : E

    constructor(y = "hello", ...rest) { }
>y : 文字
>类型别名 :=> 文字
>"hello" : "hello"
>rest : 任意[]
}

