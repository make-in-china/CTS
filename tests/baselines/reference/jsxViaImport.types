=== tests/cases/compiler/consumer.tsx ===
/// <reference path="component.d.ts" />
import BaseComponent = require('BaseComponent');
>BaseComponent : React.Component<任意, {}>

class TestComponent extends React.Component<any, {}> {
>TestComponent : TestComponent
>React.Component : React.Component<任意, {}>
>React : 类为 React
>Component : 类为 React.Component

    render() {
>render : () => 任意

        return <BaseComponent />;
><BaseComponent /> : 任意
>类型别名 :=> 任意
>BaseComponent : React.Component<任意, {}>
    }
}

=== tests/cases/compiler/component.d.ts ===
declare module JSX {
>JSX : 任意
>类型别名 :=> 任意

  interface ElementAttributesProperty { props; }
>ElementAttributesProperty : ElementAttributesProperty
>props : 任意
>类型别名 :=> 任意
}
declare module React {
>React : 类为 React

  class Component<T, U> { }
>Component : Component<T, U>
>T : T
>U : U
}
declare module "BaseComponent" {
    var base: React.Component<any, {}>;
>base : React.Component<任意, {}>
>React : 任意
>类型别名 :=> 任意
>Component : React.Component<T, U>

    export = base;
>base : React.Component<任意, {}>
}

