=== tests/cases/compiler/functionCall17.ts ===
function foo(a:string, b?:string, c?:number, ...d:number[]){}
>foo : (a: string, b?: string, c?: number, ...d: number[]) => void
>a : string
>类型别名 :=> 文字
>b : string
>类型别名 :=> 文字
>c : number
>类型别名 :=> 数字
>d : number[]

foo('foo', 1); 
>foo('foo', 1) : void
>类型别名 :=> 无值
>foo : (a: string, b?: string, c?: number, ...d: number[]) => void
>'foo' : "foo"
>1 : 1

foo('foo'); 
>foo('foo') : void
>类型别名 :=> 无值
>foo : (a: string, b?: string, c?: number, ...d: number[]) => void
>'foo' : "foo"

foo();
>foo() : void
>类型别名 :=> 无值
>foo : (a: string, b?: string, c?: number, ...d: number[]) => void

foo(1, 'bar');
>foo(1, 'bar') : void
>类型别名 :=> 无值
>foo : (a: string, b?: string, c?: number, ...d: number[]) => void
>1 : 1
>'bar' : "bar"

foo('foo', 1, 3);
>foo('foo', 1, 3) : void
>类型别名 :=> 无值
>foo : (a: string, b?: string, c?: number, ...d: number[]) => void
>'foo' : "foo"
>1 : 1
>3 : 3

foo('foo', 'bar', 3, 4);
>foo('foo', 'bar', 3, 4) : void
>类型别名 :=> 无值
>foo : (a: string, b?: string, c?: number, ...d: number[]) => void
>'foo' : "foo"
>'bar' : "bar"
>3 : 3
>4 : 4

