=== tests/cases/compiler/functionCall17.ts ===
function foo(a:string, b?:string, c?:number, ...d:number[]){}
>foo : (a: 文字, b?: 文字, c?: 数字, ...d: 数字[]) => 无值
>a : 文字
>类型别名 :=> 文字
>b : 文字
>类型别名 :=> 文字
>c : 数字
>类型别名 :=> 数字
>d : 数字[]

foo('foo', 1); 
>foo('foo', 1) : 无值
>类型别名 :=> 无值
>foo : (a: 文字, b?: 文字, c?: 数字, ...d: 数字[]) => 无值
>'foo' : "foo"
>1 : 1

foo('foo'); 
>foo('foo') : 无值
>类型别名 :=> 无值
>foo : (a: 文字, b?: 文字, c?: 数字, ...d: 数字[]) => 无值
>'foo' : "foo"

foo();
>foo() : 无值
>类型别名 :=> 无值
>foo : (a: 文字, b?: 文字, c?: 数字, ...d: 数字[]) => 无值

foo(1, 'bar');
>foo(1, 'bar') : 无值
>类型别名 :=> 无值
>foo : (a: 文字, b?: 文字, c?: 数字, ...d: 数字[]) => 无值
>1 : 1
>'bar' : "bar"

foo('foo', 1, 3);
>foo('foo', 1, 3) : 无值
>类型别名 :=> 无值
>foo : (a: 文字, b?: 文字, c?: 数字, ...d: 数字[]) => 无值
>'foo' : "foo"
>1 : 1
>3 : 3

foo('foo', 'bar', 3, 4);
>foo('foo', 'bar', 3, 4) : 无值
>类型别名 :=> 无值
>foo : (a: 文字, b?: 文字, c?: 数字, ...d: 数字[]) => 无值
>'foo' : "foo"
>'bar' : "bar"
>3 : 3
>4 : 4

