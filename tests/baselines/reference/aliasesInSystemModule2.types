=== tests/cases/compiler/aliasesInSystemModule2.ts ===
import {alias} from "foo";
>alias : any
>类型别名 :=> 任意

import cls = alias.Class;
>cls : any
>类型别名 :=> 任意
>alias : any
>类型别名 :=> 任意
>Class : any
>类型别名 :=> 任意

export import cls2 = alias.Class;
>cls2 : any
>类型别名 :=> 任意
>alias : any
>类型别名 :=> 任意
>Class : any
>类型别名 :=> 任意

let x = new alias.Class();
>x : any
>类型别名 :=> 任意
>new alias.Class() : any
>类型别名 :=> 任意
>alias.Class : any
>类型别名 :=> 任意
>alias : any
>类型别名 :=> 任意
>Class : any
>类型别名 :=> 任意

let y = new cls();
>y : any
>类型别名 :=> 任意
>new cls() : any
>类型别名 :=> 任意
>cls : any
>类型别名 :=> 任意

let z = new cls2();
>z : any
>类型别名 :=> 任意
>new cls2() : any
>类型别名 :=> 任意
>cls2 : any
>类型别名 :=> 任意

module M {
>M : typeof M

  export import cls = alias.Class;
>cls : any
>类型别名 :=> 任意
>alias : any
>类型别名 :=> 任意
>Class : any
>类型别名 :=> 任意

  let x = new alias.Class();
>x : any
>类型别名 :=> 任意
>new alias.Class() : any
>类型别名 :=> 任意
>alias.Class : any
>类型别名 :=> 任意
>alias : any
>类型别名 :=> 任意
>Class : any
>类型别名 :=> 任意

  let y = new cls(); 
>y : any
>类型别名 :=> 任意
>new cls() : any
>类型别名 :=> 任意
>cls : any
>类型别名 :=> 任意

  let z = new cls2();
>z : any
>类型别名 :=> 任意
>new cls2() : any
>类型别名 :=> 任意
>cls2 : any
>类型别名 :=> 任意
}
