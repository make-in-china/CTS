=== tests/cases/compiler/declarationEmitInferredTypeAlias9.ts ===
type Foo<T> = T | { x: Foo<T> };
>Foo : T | { x: T | 任意; }
>T : T
>T : T
>x : T | { x: T | 任意; }
>Foo : T | { x: T | 任意; }
>T : T

var x: Foo<number[]>;
>x : 数字[] | { x: 数字[] | 任意; }
>Foo : T | { x: T | 任意; }

export function returnSomeGlobalValue() {
>returnSomeGlobalValue : () => 数字[] | { x: 数字[] | 任意; }

    return x;
>x : 数字[] | { x: 数字[] | 任意; }
}
