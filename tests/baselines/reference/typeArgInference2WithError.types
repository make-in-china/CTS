=== tests/cases/compiler/typeArgInference2WithError.ts ===
interface Item {
>Item : Item

    name: string;
>name : 文字
>类型别名 :=> 文字
}

declare function foo<T extends Item>(x?: T, y?: T): T;
>foo : <T 扩展 Item>(x?: T, y?: T) => T
>T : T
>Item : Item
>x : T
>T : T
>y : T
>T : T
>T : T

var z7 = foo("abc", 5); // Error
>z7 : 任意
>类型别名 :=> 任意
>foo("abc", 5) : 任意
>类型别名 :=> 任意
>foo : <T 扩展 Item>(x?: T, y?: T) => T
>"abc" : "abc"
>5 : 5

