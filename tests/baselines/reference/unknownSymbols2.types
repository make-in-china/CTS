=== tests/cases/compiler/unknownSymbols2.ts ===
module M {
>M : 类为 M

    var x: asdf;
>x : 任意
>类型别名 :=> 任意
>asdf : No type information available!

    var y = x + asdf;
>y : 任意
>类型别名 :=> 任意
>x + asdf : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>asdf : 任意
>类型别名 :=> 任意

    var z = <asdf>x; // should be an error
>z : 任意
>类型别名 :=> 任意
><asdf>x : 任意
>类型别名 :=> 任意
>asdf : No type information available!
>x : 任意
>类型别名 :=> 任意

    if (asdf) {
>asdf : 任意
>类型别名 :=> 任意
    }
    else if (qwerty) {
>qwerty : 任意
>类型别名 :=> 任意
    }

    try {
    }
    catch (asdf) { // no error
>asdf : 任意
>类型别名 :=> 任意
    }

    switch (asdf) {
>asdf : 任意
>类型别名 :=> 任意

        case qwerty:
>qwerty : 任意
>类型别名 :=> 任意

            break;
        default:
            break;
    }

    var a = () => asdf;
>a : () => 任意
>() => asdf : () => 任意
>asdf : 任意
>类型别名 :=> 任意

    var b = (asdf) => { return qwerty };
>b : (asdf: 任意) => 任意
>(asdf) => { return qwerty } : (asdf: 任意) => 任意
>asdf : 任意
>类型别名 :=> 任意
>qwerty : 任意
>类型别名 :=> 任意

    module N {
>N : 类为 N

        var x = 1;
>x : 数字
>类型别名 :=> 数字
>1 : 1
    }
    import c = N;
>c : 类为 N
>N : 类为 N

    import d = asdf;
>d : 任意
>类型别名 :=> 任意
>asdf : No type information available!
}
