=== tests/cases/conformance/es6/templates/taggedTemplateStringsWithManyCallAndMemberExpressions.ts ===
interface I {
>I : I

    (strs: TemplateStringsArray, ...subs: number[]): I;
>strs : TemplateStringsArray
>TemplateStringsArray : TemplateStringsArray
>subs : 数字[]
>I : I

    member: {
>member : 新建 (s: 文字) => 新建 (n: 数字) => 新建 () => 真假

        new (s: string): {
>s : 文字
>类型别名 :=> 文字

            new (n: number): {
>n : 数字
>类型别名 :=> 数字

                new (): boolean;
            }
        }
    };
}
var f: I;
>f : I
>I : I

var x = new new new f `abc${ 0 }def`.member("hello")(42) === true;
>x : 真假
>类型别名 :=> 真假
>new new new f `abc${ 0 }def`.member("hello")(42) === true : 真假
>类型别名 :=> 真假
>new new new f `abc${ 0 }def`.member("hello")(42) : 真假
>类型别名 :=> 真假
>new new f `abc${ 0 }def`.member("hello")(42) : 新建 () => 真假
>new f `abc${ 0 }def`.member("hello") : 新建 (n: 数字) => 新建 () => 真假
>f `abc${ 0 }def`.member : 新建 (s: 文字) => 新建 (n: 数字) => 新建 () => 真假
>f `abc${ 0 }def` : I
>f : I
>`abc${ 0 }def` : 文字
>类型别名 :=> 文字
>0 : 0
>member : 新建 (s: 文字) => 新建 (n: 数字) => 新建 () => 真假
>"hello" : "hello"
>42 : 42
>true : 为真
>类型别名 :=> 为真


