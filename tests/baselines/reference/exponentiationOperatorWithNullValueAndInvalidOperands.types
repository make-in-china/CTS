=== tests/cases/conformance/es7/exponentiationOperator/exponentiationOperatorWithNullValueAndInvalidOperands.ts ===
// If one operand is the null or undefined value, it is treated as having the type of the
// other operand.

var a: boolean;
>a : boolean
>类型别名 :=> 真假

var b: string;
>b : string
>类型别名 :=> 文字

var c: Object;
>c : Object
>Object : Object

// operator **
var r1a1 = null ** a;
>r1a1 : number
>类型别名 :=> 数字
>null ** a : number
>类型别名 :=> 数字
>null : null
>类型别名 :=> 空值
>a : boolean
>类型别名 :=> 真假

var r1a2 = null ** b;
>r1a2 : number
>类型别名 :=> 数字
>null ** b : number
>类型别名 :=> 数字
>null : null
>类型别名 :=> 空值
>b : string
>类型别名 :=> 文字

var r1a3 = null ** c;
>r1a3 : number
>类型别名 :=> 数字
>null ** c : number
>类型别名 :=> 数字
>null : null
>类型别名 :=> 空值
>c : Object

var r1b1 = a ** null;
>r1b1 : number
>类型别名 :=> 数字
>a ** null : number
>类型别名 :=> 数字
>a : boolean
>类型别名 :=> 真假
>null : null
>类型别名 :=> 空值

var r1b2 = b ** null;
>r1b2 : number
>类型别名 :=> 数字
>b ** null : number
>类型别名 :=> 数字
>b : string
>类型别名 :=> 文字
>null : null
>类型别名 :=> 空值

var r1b3 = c ** null;
>r1b3 : number
>类型别名 :=> 数字
>c ** null : number
>类型别名 :=> 数字
>c : Object
>null : null
>类型别名 :=> 空值

var r1c1 = null ** true;
>r1c1 : number
>类型别名 :=> 数字
>null ** true : number
>类型别名 :=> 数字
>null : null
>类型别名 :=> 空值
>true : true
>类型别名 :=> 为真

var r1c2 = null ** '';
>r1c2 : number
>类型别名 :=> 数字
>null ** '' : number
>类型别名 :=> 数字
>null : null
>类型别名 :=> 空值
>'' : ""

var r1c3 = null ** {};
>r1c3 : number
>类型别名 :=> 数字
>null ** {} : number
>类型别名 :=> 数字
>null : null
>类型别名 :=> 空值
>{} : {}

var r1d1 = true ** null;
>r1d1 : number
>类型别名 :=> 数字
>true ** null : number
>类型别名 :=> 数字
>true : true
>类型别名 :=> 为真
>null : null
>类型别名 :=> 空值

var r1d2 = '' ** null;
>r1d2 : number
>类型别名 :=> 数字
>'' ** null : number
>类型别名 :=> 数字
>'' : ""
>null : null
>类型别名 :=> 空值

var r1d3 = {} ** null;
>r1d3 : number
>类型别名 :=> 数字
>{} ** null : number
>类型别名 :=> 数字
>{} : {}
>null : null
>类型别名 :=> 空值

