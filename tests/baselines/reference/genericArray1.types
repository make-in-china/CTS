=== tests/cases/compiler/genericArray1.ts ===
/*
var n: number[];

interface Array<T> {
map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];
}

interface String{
	length: number;
}
*/

var lengths = ["a", "b", "c"].map(x => x.length);
>lengths : 数字[]
>["a", "b", "c"].map(x => x.length) : 数字[]
>["a", "b", "c"].map : <U>(callbackfn: (value: 文字, index: 数字, array: 文字[]) => U, thisArg?: 任意) => U[]
>["a", "b", "c"] : 文字[]
>"a" : "a"
>"b" : "b"
>"c" : "c"
>map : <U>(callbackfn: (value: 文字, index: 数字, array: 文字[]) => U, thisArg?: 任意) => U[]
>x => x.length : (x: 文字) => 数字
>x : 文字
>类型别名 :=> 文字
>x.length : 数字
>类型别名 :=> 数字
>x : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

