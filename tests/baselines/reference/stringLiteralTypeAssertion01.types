=== tests/cases/conformance/types/stringLiteral/stringLiteralTypeAssertion01.ts ===
type S = "a" | "b";
>S : S

type T = S[] | S;
>T : T
>S : S
>S : S

var s: S;
>s : S
>S : S

var t: T;
>t : T
>T : T

var str: string;
>str : 文字
>类型别名 :=> 文字

////////////////

s = <S>t;
>s = <S>t : S
>s : S
><S>t : S
>S : S
>t : T

s = t as S;
>s = t as S : S
>s : S
>t as S : S
>t : T
>S : S

s = <S>str;
>s = <S>str : S
>s : S
><S>str : S
>S : S
>str : 文字
>类型别名 :=> 文字

s = str as S;
>s = str as S : S
>s : S
>str as S : S
>str : 文字
>类型别名 :=> 文字
>S : S

////////////////

t = <T>s;
>t = <T>s : T
>t : T
><T>s : T
>T : T
>s : S

t = s as T;
>t = s as T : T
>t : T
>s as T : T
>s : S
>T : T

t = <T>str;
>t = <T>str : T
>t : T
><T>str : T
>T : T
>str : 文字
>类型别名 :=> 文字

t = str as T;
>t = str as T : T
>t : T
>str as T : T
>str : 文字
>类型别名 :=> 文字
>T : T

////////////////

str = <string>s;
>str = <string>s : 文字
>类型别名 :=> 文字
>str : 文字
>类型别名 :=> 文字
><string>s : 文字
>类型别名 :=> 文字
>s : S

str = s as string;
>str = s as string : 文字
>类型别名 :=> 文字
>str : 文字
>类型别名 :=> 文字
>s as string : 文字
>类型别名 :=> 文字
>s : S

str = <string>t;
>str = <string>t : 文字
>类型别名 :=> 文字
>str : 文字
>类型别名 :=> 文字
><string>t : 文字
>类型别名 :=> 文字
>t : T

str = t as string;
>str = t as string : 文字
>类型别名 :=> 文字
>str : 文字
>类型别名 :=> 文字
>t as string : 文字
>类型别名 :=> 文字
>t : T

