=== tests/cases/compiler/callOverloads1.ts ===
class Foo { // error
>Foo : Foo

    bar1() { /*WScript.Echo("bar1");*/ }
>bar1 : () => 无值

    constructor(x: any) {
>x : 任意
>类型别名 :=> 任意

        // WScript.Echo("Constructor function has executed");
    }
}

function Foo(); // error
>Foo : () => 任意

function F1(s:string);
>F1 : (s: 文字) => 任意
>s : 文字
>类型别名 :=> 文字

function F1(a:any) { return a;}
>F1 : (s: 文字) => 任意
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var f1 = new Foo("hey");
>f1 : Foo
>new Foo("hey") : Foo
>Foo : 类为 Foo
>"hey" : "hey"


f1.bar1();
>f1.bar1() : 无值
>类型别名 :=> 无值
>f1.bar1 : () => 无值
>f1 : Foo
>bar1 : () => 无值

Foo();
>Foo() : 任意
>类型别名 :=> 任意
>Foo : 类为 Foo

