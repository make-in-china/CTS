=== tests/cases/conformance/es6/modules/t1.ts ===
export var x = 1;
>x : 数字
>类型别名 :=> 数字
>1 : 1

export var y = 2;
>y : 数字
>类型别名 :=> 数字
>2 : 2

=== tests/cases/conformance/es6/modules/t2.ts ===
export default "hello";
export function foo() { }
>foo : () => 无值

=== tests/cases/conformance/es6/modules/t3.ts ===
var x = "x";
>x : 文字
>类型别名 :=> 文字
>"x" : "x"

var y = "y";
>y : 文字
>类型别名 :=> 文字
>"y" : "y"

var z = "z";
>z : 文字
>类型别名 :=> 文字
>"z" : "z"

export { x, y, z };
>x : 文字
>类型别名 :=> 文字
>y : 文字
>类型别名 :=> 文字
>z : 文字
>类型别名 :=> 文字

=== tests/cases/conformance/es6/modules/t4.ts ===
export * from "./t1";
No type information for this code.export * from "./t2";
No type information for this code.export * from "./t3";
No type information for this code.
No type information for this code.=== tests/cases/conformance/es6/modules/main.ts ===
import hello, { x, y, z, foo } from "./t4";
>hello : 任意
>类型别名 :=> 任意
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字
>z : 文字
>类型别名 :=> 文字
>foo : () => 无值

hello;
>hello : 任意
>类型别名 :=> 任意

x;
>x : 数字
>类型别名 :=> 数字

y;
>y : 数字
>类型别名 :=> 数字

z;
>z : 文字
>类型别名 :=> 文字

foo;
>foo : () => 无值

