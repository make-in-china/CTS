=== tests/cases/conformance/es6/defaultParameters/emitDefaultParametersFunctionProperty.ts ===
var obj2 = {
>obj2 : { func1(y?: number, ...rest: any[]): void; func2(x?: string): void; func3(x: string, z: number, y?: string): void; func4(x: string, z: number, y?: string, ...rest: any[]): void; }
>{    func1(y = 10, ...rest) { },    func2(x = "hello") { },    func3(x: string, z: number, y = "hello") { },    func4(x: string, z: number, y = "hello", ...rest) { },} : { func1(y?: number, ...rest: any[]): void; func2(x?: string): void; func3(x: string, z: number, y?: string): void; func4(x: string, z: number, y?: string, ...rest: any[]): void; }

    func1(y = 10, ...rest) { },
>func1 : (y?: number, ...rest: any[]) => void
>y : number
>类型别名 :=> 数字
>10 : 10
>rest : any[]

    func2(x = "hello") { },
>func2 : (x?: string) => void
>x : string
>类型别名 :=> 文字
>"hello" : "hello"

    func3(x: string, z: number, y = "hello") { },
>func3 : (x: string, z: number, y?: string) => void
>x : string
>类型别名 :=> 文字
>z : number
>类型别名 :=> 数字
>y : string
>类型别名 :=> 文字
>"hello" : "hello"

    func4(x: string, z: number, y = "hello", ...rest) { },
>func4 : (x: string, z: number, y?: string, ...rest: any[]) => void
>x : string
>类型别名 :=> 文字
>z : number
>类型别名 :=> 数字
>y : string
>类型别名 :=> 文字
>"hello" : "hello"
>rest : any[]
}

