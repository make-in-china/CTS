=== tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithTupleType.ts ===
interface I<T, U> {
>I : I<T, U>
>T : T
>U : U

    tuple1: [T, U];
>tuple1 : [T, U]
>T : T
>U : U
} 

var i1: I<string, number>;
>i1 : I<文字, 数字>
>I : I<T, U>

var i2: I<{}, {}>;
>i2 : I<{}, {}>
>I : I<T, U>

// no error
i1.tuple1 = ["foo", 5];
>i1.tuple1 = ["foo", 5] : [文字, 数字]
>i1.tuple1 : [文字, 数字]
>i1 : I<文字, 数字>
>tuple1 : [文字, 数字]
>["foo", 5] : [文字, 数字]
>"foo" : "foo"
>5 : 5

var e1 = i1.tuple1[0];  // string
>e1 : 文字
>类型别名 :=> 文字
>i1.tuple1[0] : 文字
>类型别名 :=> 文字
>i1.tuple1 : [文字, 数字]
>i1 : I<文字, 数字>
>tuple1 : [文字, 数字]
>0 : 0

var e2 = i1.tuple1[1];  // number
>e2 : 数字
>类型别名 :=> 数字
>i1.tuple1[1] : 数字
>类型别名 :=> 数字
>i1.tuple1 : [文字, 数字]
>i1 : I<文字, 数字>
>tuple1 : [文字, 数字]
>1 : 1

i1.tuple1 = ["foo", 5, false, true];
>i1.tuple1 = ["foo", 5, false, true] : [文字, 数字, 真假, 真假]
>i1.tuple1 : [文字, 数字]
>i1 : I<文字, 数字>
>tuple1 : [文字, 数字]
>["foo", 5, false, true] : [文字, 数字, 真假, 真假]
>"foo" : "foo"
>5 : 5
>false : 为假
>类型别名 :=> 为假
>true : 为真
>类型别名 :=> 为真

var e3 = i1.tuple1[2];  // {}
>e3 : 文字 | 数字
>i1.tuple1[2] : 文字 | 数字
>i1.tuple1 : [文字, 数字]
>i1 : I<文字, 数字>
>tuple1 : [文字, 数字]
>2 : 2

i1.tuple1[3] = { a: "string" };
>i1.tuple1[3] = { a: "string" } : { a: 文字; }
>i1.tuple1[3] : 文字 | 数字
>i1.tuple1 : [文字, 数字]
>i1 : I<文字, 数字>
>tuple1 : [文字, 数字]
>3 : 3
>{ a: "string" } : { a: 文字; }
>a : 文字
>类型别名 :=> 文字
>"string" : "string"

var e4 = i1.tuple1[3];  // {}
>e4 : 文字 | 数字
>i1.tuple1[3] : 文字 | 数字
>i1.tuple1 : [文字, 数字]
>i1 : I<文字, 数字>
>tuple1 : [文字, 数字]
>3 : 3

i2.tuple1 = ["foo", 5];
>i2.tuple1 = ["foo", 5] : [文字, 数字]
>i2.tuple1 : [{}, {}]
>i2 : I<{}, {}>
>tuple1 : [{}, {}]
>["foo", 5] : [文字, 数字]
>"foo" : "foo"
>5 : 5

i2.tuple1 = ["foo", "bar"];
>i2.tuple1 = ["foo", "bar"] : [文字, 文字]
>i2.tuple1 : [{}, {}]
>i2 : I<{}, {}>
>tuple1 : [{}, {}]
>["foo", "bar"] : [文字, 文字]
>"foo" : "foo"
>"bar" : "bar"

i2.tuple1 = [5, "bar"];
>i2.tuple1 = [5, "bar"] : [数字, 文字]
>i2.tuple1 : [{}, {}]
>i2 : I<{}, {}>
>tuple1 : [{}, {}]
>[5, "bar"] : [数字, 文字]
>5 : 5
>"bar" : "bar"

i2.tuple1 = [{}, {}];
>i2.tuple1 = [{}, {}] : [{}, {}]
>i2.tuple1 : [{}, {}]
>i2 : I<{}, {}>
>tuple1 : [{}, {}]
>[{}, {}] : [{}, {}]
>{} : {}
>{} : {}

// error
i1.tuple1 = [5, "foo"];
>i1.tuple1 = [5, "foo"] : [数字, 文字]
>i1.tuple1 : [文字, 数字]
>i1 : I<文字, 数字>
>tuple1 : [文字, 数字]
>[5, "foo"] : [数字, 文字]
>5 : 5
>"foo" : "foo"

i1.tuple1 = [{}, {}];
>i1.tuple1 = [{}, {}] : [{}, {}]
>i1.tuple1 : [文字, 数字]
>i1 : I<文字, 数字>
>tuple1 : [文字, 数字]
>[{}, {}] : [{}, {}]
>{} : {}
>{} : {}

i2.tuple1 = [{}];
>i2.tuple1 = [{}] : [{}]
>i2.tuple1 : [{}, {}]
>i2 : I<{}, {}>
>tuple1 : [{}, {}]
>[{}] : [{}]
>{} : {}

