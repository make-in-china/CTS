=== tests/cases/compiler/thisBinding.ts ===
module M {
>M : 类为 M

    export interface I {
>I : I

	z;
>z : 任意
>类型别名 :=> 任意
    }

    export class C {
>C : C

	public x=0;
>x : 数字
>类型别名 :=> 数字
>0 : 0

	f(x:I) {
>f : (x: I) => 无值
>x : I
>I : I

	    x.e;  // e not found
>x.e : 任意
>类型别名 :=> 任意
>x : I
>e : 任意
>类型别名 :=> 任意

	    x.z;  // ok 
>x.z : 任意
>类型别名 :=> 任意
>x : I
>z : 任意
>类型别名 :=> 任意
	}
    constructor() {
	({z:10,f:this.f}).f(<I>({}));
>({z:10,f:this.f}).f(<I>({})) : 无值
>类型别名 :=> 无值
>({z:10,f:this.f}).f : (x: I) => 无值
>({z:10,f:this.f}) : { z: 数字; f: (x: I) => 无值; }
>{z:10,f:this.f} : { z: 数字; f: (x: I) => 无值; }
>z : 数字
>类型别名 :=> 数字
>10 : 10
>f : (x: I) => 无值
>this.f : (x: I) => 无值
>this : 本体
>f : (x: I) => 无值
>f : (x: I) => 无值
><I>({}) : I
>I : I
>({}) : {}
>{} : {}
    }
    }
}

class C {
>C : C

    f(x: number) {
>f : (x: 数字) => 无值
>x : 数字
>类型别名 :=> 数字
    }
}
