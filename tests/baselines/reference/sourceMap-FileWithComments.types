=== tests/cases/compiler/sourceMap-FileWithComments.ts ===
// Interface
interface IPoint {
>IPoint : IPoint

    getDist(): number;
>getDist : () => 数字
}

// Module
module Shapes {
>Shapes : 类为 Shapes

    // Class
    export class Point implements IPoint {
>Point : Point
>IPoint : IPoint

        // Constructor
        constructor(public x: number, public y: number) { }
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

        // Instance member
        getDist() { return Math.sqrt(this.x * this.x + this.y * this.y); }
>getDist : () => 数字
>Math.sqrt(this.x * this.x + this.y * this.y) : 数字
>类型别名 :=> 数字
>Math.sqrt : (x: 数字) => 数字
>Math : Math
>sqrt : (x: 数字) => 数字
>this.x * this.x + this.y * this.y : 数字
>类型别名 :=> 数字
>this.x * this.x : 数字
>类型别名 :=> 数字
>this.x : 数字
>类型别名 :=> 数字
>this : 本体
>x : 数字
>类型别名 :=> 数字
>this.x : 数字
>类型别名 :=> 数字
>this : 本体
>x : 数字
>类型别名 :=> 数字
>this.y * this.y : 数字
>类型别名 :=> 数字
>this.y : 数字
>类型别名 :=> 数字
>this : 本体
>y : 数字
>类型别名 :=> 数字
>this.y : 数字
>类型别名 :=> 数字
>this : 本体
>y : 数字
>类型别名 :=> 数字

        // Static member
        static origin = new Point(0, 0);
>origin : Point
>new Point(0, 0) : Point
>Point : 类为 Point
>0 : 0
>0 : 0
    }

    // Variable comment after class
    var a = 10;
>a : 数字
>类型别名 :=> 数字
>10 : 10

    export function foo() {
>foo : () => 无值
    }

    /**  comment after function
    * this is another comment 
    */
    var b = 10;
>b : 数字
>类型别名 :=> 数字
>10 : 10
}

/** Local Variable */
var p: IPoint = new Shapes.Point(3, 4);
>p : IPoint
>IPoint : IPoint
>new Shapes.Point(3, 4) : Shapes.Point
>Shapes.Point : 类为 Shapes.Point
>Shapes : 类为 Shapes
>Point : 类为 Shapes.Point
>3 : 3
>4 : 4

var dist = p.getDist();
>dist : 数字
>类型别名 :=> 数字
>p.getDist() : 数字
>类型别名 :=> 数字
>p.getDist : () => 数字
>p : IPoint
>getDist : () => 数字

