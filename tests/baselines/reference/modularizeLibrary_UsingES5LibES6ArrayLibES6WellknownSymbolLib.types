=== tests/cases/compiler/modularizeLibrary_UsingES5LibES6ArrayLibES6WellknownSymbolLib.ts ===
function f(x: number, y: number, z: number) {
>f : (x: number, y: number, z: number) => any[]
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
>z : number
>类型别名 :=> 数字

    return Array.from(arguments);
>Array.from(arguments) : any[]
>Array.from : <T, U = T>(arrayLike: ArrayLike<T>, mapfn?: (v: T, k: number) => U, thisArg?: any) => U[]
>Array : ArrayConstructor
>from : <T, U = T>(arrayLike: ArrayLike<T>, mapfn?: (v: T, k: number) => U, thisArg?: any) => U[]
>arguments : IArguments
}

f(1, 2, 3);   // no error
>f(1, 2, 3) : any[]
>f : (x: number, y: number, z: number) => any[]
>1 : 1
>2 : 2
>3 : 3

let a = ['c', 'd'];
>a : string[]
>['c', 'd'] : string[]
>'c' : "c"
>'d' : "d"

a[Symbol.isConcatSpreadable] = false;
>a[Symbol.isConcatSpreadable] = false : false
>类型别名 :=> 为假
>a[Symbol.isConcatSpreadable] : any
>类型别名 :=> 任意
>a : string[]
>Symbol.isConcatSpreadable : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>isConcatSpreadable : symbol
>类型别名 :=> 符号
>false : false
>类型别名 :=> 为假

