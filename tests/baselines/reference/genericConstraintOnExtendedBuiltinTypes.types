=== tests/cases/compiler/genericConstraintOnExtendedBuiltinTypes.ts ===
declare module EndGate {
>EndGate : typeof EndGate

    export interface ICloneable {
>ICloneable : ICloneable

        Clone(): any;
>Clone : () => any
    }
}

interface Number extends EndGate.ICloneable { }
>Number : Number
>EndGate.ICloneable : any
>类型别名 :=> 任意
>EndGate : typeof EndGate
>ICloneable : EndGate.ICloneable

module EndGate.Tweening {
>EndGate : typeof EndGate
>Tweening : typeof Tweening

    export class Tween<T extends ICloneable>{
>Tween : Tween<T>
>T : T
>ICloneable : ICloneable

        private _from: T;
>_from : T
>T : T


        constructor(from: T) {
>from : T
>T : T

            this._from = from.Clone();
>this._from = from.Clone() : any
>类型别名 :=> 任意
>this._from : T
>this : this
>_from : T
>from.Clone() : any
>类型别名 :=> 任意
>from.Clone : () => any
>from : T
>Clone : () => any
        }
    }
}

module EndGate.Tweening {
>EndGate : typeof EndGate
>Tweening : typeof Tweening

    export class NumberTween extends Tween<number>{
>NumberTween : NumberTween
>Tween : Tween<number>

        constructor(from: number) {
>from : number
>类型别名 :=> 数字

            super(from);
>super(from) : void
>类型别名 :=> 无值
>super : typeof Tween
>from : number
>类型别名 :=> 数字
        }
    }
}
