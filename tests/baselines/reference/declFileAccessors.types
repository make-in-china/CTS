=== tests/cases/compiler/declFileAccessors_0.ts ===
/** This is comment for c1*/
export class c1 {
>c1 : c1

    /** getter property*/
    public get p3() {
>p3 : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }
    /** setter property*/
    public set p3(/** this is value*/value: number) {
>p3 : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
    /** private getter property*/
    private get pp3() {
>pp3 : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }
    /** private setter property*/
    private set pp3(/** this is value*/value: number) {
>pp3 : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
    /** static getter property*/
    static get s3() {
>s3 : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }
    /** setter property*/
    static set s3( /** this is value*/value: number) {
>s3 : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
    public get nc_p3() {
>nc_p3 : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }
    public set nc_p3(value: number) {
>nc_p3 : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
    private get nc_pp3() {
>nc_pp3 : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }
    private set nc_pp3(value: number) {
>nc_pp3 : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
    static get nc_s3() {
>nc_s3 : string
>类型别名 :=> 文字

        return "";
>"" : ""
    }
    static set nc_s3(value: string) {
>nc_s3 : string
>类型别名 :=> 文字
>value : string
>类型别名 :=> 文字
    }

    // Only getter property
    public get onlyGetter() {
>onlyGetter : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }

    // Only setter property
    public set onlySetter(value: number) {
>onlySetter : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
}

=== tests/cases/compiler/declFileAccessors_1.ts ===
/** This is comment for c2 - the global class*/
class c2 {
>c2 : c2

    /** getter property*/
    public get p3() {
>p3 : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }
    /** setter property*/
    public set p3(/** this is value*/value: number) {
>p3 : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
    /** private getter property*/
    private get pp3() {
>pp3 : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }
    /** private setter property*/
    private set pp3(/** this is value*/value: number) {
>pp3 : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
    /** static getter property*/
    static get s3() {
>s3 : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }
    /** setter property*/
    static set s3( /** this is value*/value: number) {
>s3 : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
    public get nc_p3() {
>nc_p3 : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }
    public set nc_p3(value: number) {
>nc_p3 : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
    private get nc_pp3() {
>nc_pp3 : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }
    private set nc_pp3(value: number) {
>nc_pp3 : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
    static get nc_s3() {
>nc_s3 : string
>类型别名 :=> 文字

        return "";
>"" : ""
    }
    static set nc_s3(value: string) {
>nc_s3 : string
>类型别名 :=> 文字
>value : string
>类型别名 :=> 文字
    }

    // Only getter property
    public get onlyGetter() {
>onlyGetter : number
>类型别名 :=> 数字

        return 10;
>10 : 10
    }

    // Only setter property
    public set onlySetter(value: number) {
>onlySetter : number
>类型别名 :=> 数字
>value : number
>类型别名 :=> 数字
    }
}
