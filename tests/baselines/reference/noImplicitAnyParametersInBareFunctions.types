=== tests/cases/compiler/noImplicitAnyParametersInBareFunctions.ts ===
// No implicit-'any' errors.
function f1(): void { }
>f1 : () => 无值

// Implicit-'any' error for x.
function f2(x): void { }
>f2 : (x: 任意) => 无值
>x : 任意
>类型别名 :=> 任意

// No implicit-'any' errors.
function f3(x: any): void { }
>f3 : (x: 任意) => 无值
>x : 任意
>类型别名 :=> 任意

// Implicit-'any' errors for x, y, and z.
function f4(x, y, z): void { }
>f4 : (x: 任意, y: 任意, z: 任意) => 无值
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

// Implicit-'any' errors for x, and z.
function f5(x, y: any, z): void { }
>f5 : (x: 任意, y: 任意, z: 任意) => 无值
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

// Implicit-'any[]' error for r.
function f6(...r): void { }
>f6 : (...r: 任意[]) => 无值
>r : 任意[]

// Implicit-'any'/'any[]' errors for x, r.
function f7(x, ...r): void { }
>f7 : (x: 任意, ...r: 任意[]) => 无值
>x : 任意
>类型别名 :=> 任意
>r : 任意[]

// Implicit-'any' errors for x1, y2, x3, and y3.
function f8(x1, y1: number): any;
>f8 : { (x1: 任意, y1: 数字): 任意; (x2: 文字, y2: 任意): 任意; }
>x1 : 任意
>类型别名 :=> 任意
>y1 : 数字
>类型别名 :=> 数字

function f8(x2: string, y2): any;
>f8 : { (x1: 任意, y1: 数字): 任意; (x2: 文字, y2: 任意): 任意; }
>x2 : 文字
>类型别名 :=> 文字
>y2 : 任意
>类型别名 :=> 任意

function f8(x3, y3): any { } 
>f8 : { (x1: 任意, y1: 数字): 任意; (x2: 文字, y2: 任意): 任意; }
>x3 : 任意
>类型别名 :=> 任意
>y3 : 任意
>类型别名 :=> 任意

// No implicit-'any' errors.
var f9 = () => "";
>f9 : () => 文字
>() => "" : () => 文字
>"" : ""

// Implicit-'any' errors for x.
var f10 = (x) => "";
>f10 : (x: 任意) => 文字
>(x) => "" : (x: 任意) => 文字
>x : 任意
>类型别名 :=> 任意
>"" : ""

// Implicit-'any' errors for x, y, and z.
var f11 = (x, y, z) => "";
>f11 : (x: 任意, y: 任意, z: 任意) => 文字
>(x, y, z) => "" : (x: 任意, y: 任意, z: 任意) => 文字
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
>"" : ""

// Implicit-'any' errors for x and z.
var f12 = (x, y: any, z) => "";
>f12 : (x: 任意, y: 任意, z: 任意) => 文字
>(x, y: any, z) => "" : (x: 任意, y: 任意, z: 任意) => 文字
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
>"" : ""

// Implicit-'any[]' error for r.
var f13 = (...r) => "";
>f13 : (...r: 任意[]) => 文字
>(...r) => "" : (...r: 任意[]) => 文字
>r : 任意[]
>"" : ""

// Implicit-'any'/'any[]' errors for x, r.
var f14 = (x, ...r) => "";
>f14 : (x: 任意, ...r: 任意[]) => 文字
>(x, ...r) => "" : (x: 任意, ...r: 任意[]) => 文字
>x : 任意
>类型别名 :=> 任意
>r : 任意[]
>"" : ""

