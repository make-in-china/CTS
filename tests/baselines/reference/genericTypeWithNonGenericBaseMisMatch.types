=== tests/cases/compiler/genericTypeWithNonGenericBaseMisMatch.ts ===
interface I {
>I : I

	f: (a: { a: number }) => void
>f : (a: { a: number; }) => void
>a : { a: number; }
>a : number
>类型别名 :=> 数字
}
class X<T extends { a: string }> implements I {
>X : X<T>
>T : T
>a : string
>类型别名 :=> 文字
>I : I

	f(a: T): void { }
>f : (a: T) => void
>a : T
>T : T
}
var x = new X<{ a: string }>();
>x : X<{ a: string; }>
>new X<{ a: string }>() : X<{ a: string; }>
>X : typeof X
>a : string
>类型别名 :=> 文字

var i: I = x; // Should not be allowed -- type of 'f' is incompatible with 'I'
>i : I
>I : I
>x : X<{ a: string; }>

