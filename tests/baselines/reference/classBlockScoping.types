=== tests/cases/compiler/classBlockScoping.ts ===
function f(b: boolean) {
>f : (b: boolean) => void
>b : boolean
>类型别名 :=> 真假

  let Foo: any;
>Foo : any
>类型别名 :=> 任意

  if (b) {
>b : boolean
>类型别名 :=> 真假

    Foo = class Foo {
>Foo = class Foo {      static y = new Foo();      static x() {        new Foo();      }      m() {        new Foo();      }    } : typeof Foo
>Foo : any
>类型别名 :=> 任意
>class Foo {      static y = new Foo();      static x() {        new Foo();      }      m() {        new Foo();      }    } : typeof Foo
>Foo : typeof Foo

      static y = new Foo();
>y : Foo
>new Foo() : Foo
>Foo : typeof Foo

      static x() {
>x : () => void

        new Foo();
>new Foo() : Foo
>Foo : typeof Foo
      }

      m() {
>m : () => void

        new Foo();
>new Foo() : Foo
>Foo : typeof Foo
      }
    };

    new Foo();
>new Foo() : any
>类型别名 :=> 任意
>Foo : any
>类型别名 :=> 任意
  }
  else {
    class Foo {
>Foo : Foo

      static y = new Foo();
>y : Foo
>new Foo() : Foo
>Foo : typeof Foo

      static x() {
>x : () => void

        new Foo();
>new Foo() : Foo
>Foo : typeof Foo
      }

      m() {
>m : () => void

        new Foo();
>new Foo() : Foo
>Foo : typeof Foo
      }
    }

    new Foo();
>new Foo() : Foo
>Foo : typeof Foo
  }
}
