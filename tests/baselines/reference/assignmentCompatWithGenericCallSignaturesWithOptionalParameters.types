=== tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithGenericCallSignaturesWithOptionalParameters.ts ===
// call signatures in derived types must have the same or fewer optional parameters as the target for assignment

module ClassTypeParam {
>ClassTypeParam : 类为 ClassTypeParam

    class Base<T> {
>Base : Base<T>
>T : T

        a: () => T;
>a : () => T
>T : T

        a2: (x?: T) => T;
>a2 : (x?: T) => T
>x : T
>T : T
>T : T

        a3: (x: T) => T;
>a3 : (x: T) => T
>x : T
>T : T
>T : T

        a4: (x: T, y?: T) => T;
>a4 : (x: T, y?: T) => T
>x : T
>T : T
>y : T
>T : T
>T : T

        a5: (x?: T, y?: T) => T;
>a5 : (x?: T, y?: T) => T
>x : T
>T : T
>y : T
>T : T
>T : T

        init = () => {
>init : () => 无值
>() => {            this.a = () => null; // ok, same T of required params            this.a = (x?: T) => null; // ok, same T of required params            this.a = (x: T) => null; // error, too many required params            this.a2 = () => null; // ok, same T of required params            this.a2 = (x?: T) => null; // ok, same T of required params            this.a2 = (x: T) => null; // ok, same number of params            this.a3 = () => null; // ok, fewer required params            this.a3 = (x?: T) => null; // ok, fewer required params            this.a3 = (x: T) => null; // ok, same T of required params            this.a3 = (x: T, y: T) => null;  // error, too many required params            this.a4 = () => null; // ok, fewer required params            this.a4 = (x?: T, y?: T) => null; // ok, fewer required params            this.a4 = (x: T) => null; // ok, same T of required params            this.a4 = (x: T, y: T) => null;  // ok, same number of params            this.a5 = () => null; // ok, fewer required params            this.a5 = (x?: T, y?: T) => null; // ok, fewer required params            this.a5 = (x: T) => null; // ok, all present params match            this.a5 = (x: T, y: T) => null;  // ok, same number of params        } : () => 无值

            this.a = () => null; // ok, same T of required params
>this.a = () => null : () => 任意
>this.a : () => T
>this : 本体
>a : () => T
>() => null : () => 任意
>null : 空值
>类型别名 :=> 空值

            this.a = (x?: T) => null; // ok, same T of required params
>this.a = (x?: T) => null : (x?: T) => 任意
>this.a : () => T
>this : 本体
>a : () => T
>(x?: T) => null : (x?: T) => 任意
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a = (x: T) => null; // error, too many required params
>this.a = (x: T) => null : (x: T) => 任意
>this.a : () => T
>this : 本体
>a : () => T
>(x: T) => null : (x: T) => 任意
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a2 = () => null; // ok, same T of required params
>this.a2 = () => null : () => 任意
>this.a2 : (x?: T) => T
>this : 本体
>a2 : (x?: T) => T
>() => null : () => 任意
>null : 空值
>类型别名 :=> 空值

            this.a2 = (x?: T) => null; // ok, same T of required params
>this.a2 = (x?: T) => null : (x?: T) => 任意
>this.a2 : (x?: T) => T
>this : 本体
>a2 : (x?: T) => T
>(x?: T) => null : (x?: T) => 任意
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a2 = (x: T) => null; // ok, same number of params
>this.a2 = (x: T) => null : (x: T) => 任意
>this.a2 : (x?: T) => T
>this : 本体
>a2 : (x?: T) => T
>(x: T) => null : (x: T) => 任意
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a3 = () => null; // ok, fewer required params
>this.a3 = () => null : () => 任意
>this.a3 : (x: T) => T
>this : 本体
>a3 : (x: T) => T
>() => null : () => 任意
>null : 空值
>类型别名 :=> 空值

            this.a3 = (x?: T) => null; // ok, fewer required params
>this.a3 = (x?: T) => null : (x?: T) => 任意
>this.a3 : (x: T) => T
>this : 本体
>a3 : (x: T) => T
>(x?: T) => null : (x?: T) => 任意
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a3 = (x: T) => null; // ok, same T of required params
>this.a3 = (x: T) => null : (x: T) => 任意
>this.a3 : (x: T) => T
>this : 本体
>a3 : (x: T) => T
>(x: T) => null : (x: T) => 任意
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a3 = (x: T, y: T) => null;  // error, too many required params
>this.a3 = (x: T, y: T) => null : (x: T, y: T) => 任意
>this.a3 : (x: T) => T
>this : 本体
>a3 : (x: T) => T
>(x: T, y: T) => null : (x: T, y: T) => 任意
>x : T
>T : T
>y : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a4 = () => null; // ok, fewer required params
>this.a4 = () => null : () => 任意
>this.a4 : (x: T, y?: T) => T
>this : 本体
>a4 : (x: T, y?: T) => T
>() => null : () => 任意
>null : 空值
>类型别名 :=> 空值

            this.a4 = (x?: T, y?: T) => null; // ok, fewer required params
>this.a4 = (x?: T, y?: T) => null : (x?: T, y?: T) => 任意
>this.a4 : (x: T, y?: T) => T
>this : 本体
>a4 : (x: T, y?: T) => T
>(x?: T, y?: T) => null : (x?: T, y?: T) => 任意
>x : T
>T : T
>y : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a4 = (x: T) => null; // ok, same T of required params
>this.a4 = (x: T) => null : (x: T) => 任意
>this.a4 : (x: T, y?: T) => T
>this : 本体
>a4 : (x: T, y?: T) => T
>(x: T) => null : (x: T) => 任意
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a4 = (x: T, y: T) => null;  // ok, same number of params
>this.a4 = (x: T, y: T) => null : (x: T, y: T) => 任意
>this.a4 : (x: T, y?: T) => T
>this : 本体
>a4 : (x: T, y?: T) => T
>(x: T, y: T) => null : (x: T, y: T) => 任意
>x : T
>T : T
>y : T
>T : T
>null : 空值
>类型别名 :=> 空值


            this.a5 = () => null; // ok, fewer required params
>this.a5 = () => null : () => 任意
>this.a5 : (x?: T, y?: T) => T
>this : 本体
>a5 : (x?: T, y?: T) => T
>() => null : () => 任意
>null : 空值
>类型别名 :=> 空值

            this.a5 = (x?: T, y?: T) => null; // ok, fewer required params
>this.a5 = (x?: T, y?: T) => null : (x?: T, y?: T) => 任意
>this.a5 : (x?: T, y?: T) => T
>this : 本体
>a5 : (x?: T, y?: T) => T
>(x?: T, y?: T) => null : (x?: T, y?: T) => 任意
>x : T
>T : T
>y : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a5 = (x: T) => null; // ok, all present params match
>this.a5 = (x: T) => null : (x: T) => 任意
>this.a5 : (x?: T, y?: T) => T
>this : 本体
>a5 : (x?: T, y?: T) => T
>(x: T) => null : (x: T) => 任意
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a5 = (x: T, y: T) => null;  // ok, same number of params
>this.a5 = (x: T, y: T) => null : (x: T, y: T) => 任意
>this.a5 : (x?: T, y?: T) => T
>this : 本体
>a5 : (x?: T, y?: T) => T
>(x: T, y: T) => null : (x: T, y: T) => 任意
>x : T
>T : T
>y : T
>T : T
>null : 空值
>类型别名 :=> 空值
        }
    }
}

module GenericSignaturesInvalid {
>GenericSignaturesInvalid : 类为 GenericSignaturesInvalid

    class Base2 {
>Base2 : Base2

        a: <T>() => T;
>a : <T>() => T
>T : T
>T : T

        a2: <T>(x?: T) => T;
>a2 : <T>(x?: T) => T
>T : T
>x : T
>T : T
>T : T

        a3: <T>(x: T) => T;
>a3 : <T>(x: T) => T
>T : T
>x : T
>T : T
>T : T

        a4: <T>(x: T, y?: T) => T;
>a4 : <T>(x: T, y?: T) => T
>T : T
>x : T
>T : T
>y : T
>T : T
>T : T

        a5: <T>(x?: T, y?: T) => T;
>a5 : <T>(x?: T, y?: T) => T
>T : T
>x : T
>T : T
>y : T
>T : T
>T : T
    }

    class Target<T> {
>Target : Target<T>
>T : T

        a: () => T;
>a : () => T
>T : T

        a2: (x?: T) => T;
>a2 : (x?: T) => T
>x : T
>T : T
>T : T

        a3: (x: T) => T;
>a3 : (x: T) => T
>x : T
>T : T
>T : T

        a4: (x: T, y?: T) => T;
>a4 : (x: T, y?: T) => T
>x : T
>T : T
>y : T
>T : T
>T : T

        a5: (x?: T, y?: T) => T;
>a5 : (x?: T, y?: T) => T
>x : T
>T : T
>y : T
>T : T
>T : T
    }


    function foo<T>() {
>foo : <T>() => 无值
>T : T

        var b: Base2;
>b : Base2
>Base2 : Base2

        var t: Target<T>;
>t : Target<T>
>Target : Target<T>
>T : T

        // all errors
        b.a = t.a;
>b.a = t.a : () => T
>b.a : <T>() => T
>b : Base2
>a : <T>() => T
>t.a : () => T
>t : Target<T>
>a : () => T

        b.a = t.a2;
>b.a = t.a2 : (x?: T) => T
>b.a : <T>() => T
>b : Base2
>a : <T>() => T
>t.a2 : (x?: T) => T
>t : Target<T>
>a2 : (x?: T) => T

        b.a = t.a3;
>b.a = t.a3 : (x: T) => T
>b.a : <T>() => T
>b : Base2
>a : <T>() => T
>t.a3 : (x: T) => T
>t : Target<T>
>a3 : (x: T) => T

        b.a = t.a4;
>b.a = t.a4 : (x: T, y?: T) => T
>b.a : <T>() => T
>b : Base2
>a : <T>() => T
>t.a4 : (x: T, y?: T) => T
>t : Target<T>
>a4 : (x: T, y?: T) => T

        b.a = t.a5;
>b.a = t.a5 : (x?: T, y?: T) => T
>b.a : <T>() => T
>b : Base2
>a : <T>() => T
>t.a5 : (x?: T, y?: T) => T
>t : Target<T>
>a5 : (x?: T, y?: T) => T

        b.a2 = t.a;
>b.a2 = t.a : () => T
>b.a2 : <T>(x?: T) => T
>b : Base2
>a2 : <T>(x?: T) => T
>t.a : () => T
>t : Target<T>
>a : () => T

        b.a2 = t.a2;
>b.a2 = t.a2 : (x?: T) => T
>b.a2 : <T>(x?: T) => T
>b : Base2
>a2 : <T>(x?: T) => T
>t.a2 : (x?: T) => T
>t : Target<T>
>a2 : (x?: T) => T

        b.a2 = t.a3;
>b.a2 = t.a3 : (x: T) => T
>b.a2 : <T>(x?: T) => T
>b : Base2
>a2 : <T>(x?: T) => T
>t.a3 : (x: T) => T
>t : Target<T>
>a3 : (x: T) => T

        b.a2 = t.a4;
>b.a2 = t.a4 : (x: T, y?: T) => T
>b.a2 : <T>(x?: T) => T
>b : Base2
>a2 : <T>(x?: T) => T
>t.a4 : (x: T, y?: T) => T
>t : Target<T>
>a4 : (x: T, y?: T) => T

        b.a2 = t.a5;
>b.a2 = t.a5 : (x?: T, y?: T) => T
>b.a2 : <T>(x?: T) => T
>b : Base2
>a2 : <T>(x?: T) => T
>t.a5 : (x?: T, y?: T) => T
>t : Target<T>
>a5 : (x?: T, y?: T) => T

        b.a3 = t.a;
>b.a3 = t.a : () => T
>b.a3 : <T>(x: T) => T
>b : Base2
>a3 : <T>(x: T) => T
>t.a : () => T
>t : Target<T>
>a : () => T

        b.a3 = t.a2;
>b.a3 = t.a2 : (x?: T) => T
>b.a3 : <T>(x: T) => T
>b : Base2
>a3 : <T>(x: T) => T
>t.a2 : (x?: T) => T
>t : Target<T>
>a2 : (x?: T) => T

        b.a3 = t.a3;
>b.a3 = t.a3 : (x: T) => T
>b.a3 : <T>(x: T) => T
>b : Base2
>a3 : <T>(x: T) => T
>t.a3 : (x: T) => T
>t : Target<T>
>a3 : (x: T) => T

        b.a3 = t.a4;
>b.a3 = t.a4 : (x: T, y?: T) => T
>b.a3 : <T>(x: T) => T
>b : Base2
>a3 : <T>(x: T) => T
>t.a4 : (x: T, y?: T) => T
>t : Target<T>
>a4 : (x: T, y?: T) => T

        b.a3 = t.a5;
>b.a3 = t.a5 : (x?: T, y?: T) => T
>b.a3 : <T>(x: T) => T
>b : Base2
>a3 : <T>(x: T) => T
>t.a5 : (x?: T, y?: T) => T
>t : Target<T>
>a5 : (x?: T, y?: T) => T

        b.a4 = t.a;
>b.a4 = t.a : () => T
>b.a4 : <T>(x: T, y?: T) => T
>b : Base2
>a4 : <T>(x: T, y?: T) => T
>t.a : () => T
>t : Target<T>
>a : () => T

        b.a4 = t.a2;
>b.a4 = t.a2 : (x?: T) => T
>b.a4 : <T>(x: T, y?: T) => T
>b : Base2
>a4 : <T>(x: T, y?: T) => T
>t.a2 : (x?: T) => T
>t : Target<T>
>a2 : (x?: T) => T

        b.a4 = t.a3;
>b.a4 = t.a3 : (x: T) => T
>b.a4 : <T>(x: T, y?: T) => T
>b : Base2
>a4 : <T>(x: T, y?: T) => T
>t.a3 : (x: T) => T
>t : Target<T>
>a3 : (x: T) => T

        b.a4 = t.a4;
>b.a4 = t.a4 : (x: T, y?: T) => T
>b.a4 : <T>(x: T, y?: T) => T
>b : Base2
>a4 : <T>(x: T, y?: T) => T
>t.a4 : (x: T, y?: T) => T
>t : Target<T>
>a4 : (x: T, y?: T) => T

        b.a4 = t.a5;
>b.a4 = t.a5 : (x?: T, y?: T) => T
>b.a4 : <T>(x: T, y?: T) => T
>b : Base2
>a4 : <T>(x: T, y?: T) => T
>t.a5 : (x?: T, y?: T) => T
>t : Target<T>
>a5 : (x?: T, y?: T) => T

        b.a5 = t.a;
>b.a5 = t.a : () => T
>b.a5 : <T>(x?: T, y?: T) => T
>b : Base2
>a5 : <T>(x?: T, y?: T) => T
>t.a : () => T
>t : Target<T>
>a : () => T

        b.a5 = t.a2;
>b.a5 = t.a2 : (x?: T) => T
>b.a5 : <T>(x?: T, y?: T) => T
>b : Base2
>a5 : <T>(x?: T, y?: T) => T
>t.a2 : (x?: T) => T
>t : Target<T>
>a2 : (x?: T) => T

        b.a5 = t.a3;
>b.a5 = t.a3 : (x: T) => T
>b.a5 : <T>(x?: T, y?: T) => T
>b : Base2
>a5 : <T>(x?: T, y?: T) => T
>t.a3 : (x: T) => T
>t : Target<T>
>a3 : (x: T) => T

        b.a5 = t.a4;
>b.a5 = t.a4 : (x: T, y?: T) => T
>b.a5 : <T>(x?: T, y?: T) => T
>b : Base2
>a5 : <T>(x?: T, y?: T) => T
>t.a4 : (x: T, y?: T) => T
>t : Target<T>
>a4 : (x: T, y?: T) => T

        b.a5 = t.a5;
>b.a5 = t.a5 : (x?: T, y?: T) => T
>b.a5 : <T>(x?: T, y?: T) => T
>b : Base2
>a5 : <T>(x?: T, y?: T) => T
>t.a5 : (x?: T, y?: T) => T
>t : Target<T>
>a5 : (x?: T, y?: T) => T
    }
}

module GenericSignaturesValid {
>GenericSignaturesValid : 类为 GenericSignaturesValid

    class Base2 {
>Base2 : Base2

        a: <T>() => T;
>a : <T>() => T
>T : T
>T : T

        a2: <T>(x?: T) => T;
>a2 : <T>(x?: T) => T
>T : T
>x : T
>T : T
>T : T

        a3: <T>(x: T) => T;
>a3 : <T>(x: T) => T
>T : T
>x : T
>T : T
>T : T

        a4: <T>(x: T, y?: T) => T;
>a4 : <T>(x: T, y?: T) => T
>T : T
>x : T
>T : T
>y : T
>T : T
>T : T

        a5: <T>(x?: T, y?: T) => T;
>a5 : <T>(x?: T, y?: T) => T
>T : T
>x : T
>T : T
>y : T
>T : T
>T : T

        init = () => {
>init : () => 无值
>() => {            this.a = <T>() => null; // ok, same T of required params            this.a = <T>(x?: T) => null; // ok, same T of required params            this.a = <T>(x: T) => null; // error, too many required params            this.a2 = <T>() => null; // ok, same T of required params            this.a2 = <T>(x?: T) => null; // ok, same T of required params            this.a2 = <T>(x: T) => null; // ok, same number of params            this.a3 = <T>() => null; // ok, fewer required params            this.a3 = <T>(x?: T) => null; // ok, fewer required params            this.a3 = <T>(x: T) => null; // ok, same T of required params            this.a3 = <T>(x: T, y: T) => null;  // error, too many required params            this.a4 = <T>() => null; // ok, fewer required params            this.a4 = <T>(x?: T, y?: T) => null; // ok, fewer required params            this.a4 = <T>(x: T) => null; // ok, same T of required params            this.a4 = <T>(x: T, y: T) => null;  // ok, same number of params            this.a5 = <T>() => null; // ok, fewer required params            this.a5 = <T>(x?: T, y?: T) => null; // ok, fewer required params            this.a5 = <T>(x: T) => null; // ok, all present params match            this.a5 = <T>(x: T, y: T) => null;  // ok, same number of params        } : () => 无值

            this.a = <T>() => null; // ok, same T of required params
>this.a = <T>() => null : <T>() => 任意
>this.a : <T>() => T
>this : 本体
>a : <T>() => T
><T>() => null : <T>() => 任意
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a = <T>(x?: T) => null; // ok, same T of required params
>this.a = <T>(x?: T) => null : <T>(x?: T) => 任意
>this.a : <T>() => T
>this : 本体
>a : <T>() => T
><T>(x?: T) => null : <T>(x?: T) => 任意
>T : T
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a = <T>(x: T) => null; // error, too many required params
>this.a = <T>(x: T) => null : <T>(x: T) => 任意
>this.a : <T>() => T
>this : 本体
>a : <T>() => T
><T>(x: T) => null : <T>(x: T) => 任意
>T : T
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a2 = <T>() => null; // ok, same T of required params
>this.a2 = <T>() => null : <T>() => 任意
>this.a2 : <T>(x?: T) => T
>this : 本体
>a2 : <T>(x?: T) => T
><T>() => null : <T>() => 任意
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a2 = <T>(x?: T) => null; // ok, same T of required params
>this.a2 = <T>(x?: T) => null : <T>(x?: T) => 任意
>this.a2 : <T>(x?: T) => T
>this : 本体
>a2 : <T>(x?: T) => T
><T>(x?: T) => null : <T>(x?: T) => 任意
>T : T
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a2 = <T>(x: T) => null; // ok, same number of params
>this.a2 = <T>(x: T) => null : <T>(x: T) => 任意
>this.a2 : <T>(x?: T) => T
>this : 本体
>a2 : <T>(x?: T) => T
><T>(x: T) => null : <T>(x: T) => 任意
>T : T
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a3 = <T>() => null; // ok, fewer required params
>this.a3 = <T>() => null : <T>() => 任意
>this.a3 : <T>(x: T) => T
>this : 本体
>a3 : <T>(x: T) => T
><T>() => null : <T>() => 任意
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a3 = <T>(x?: T) => null; // ok, fewer required params
>this.a3 = <T>(x?: T) => null : <T>(x?: T) => 任意
>this.a3 : <T>(x: T) => T
>this : 本体
>a3 : <T>(x: T) => T
><T>(x?: T) => null : <T>(x?: T) => 任意
>T : T
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a3 = <T>(x: T) => null; // ok, same T of required params
>this.a3 = <T>(x: T) => null : <T>(x: T) => 任意
>this.a3 : <T>(x: T) => T
>this : 本体
>a3 : <T>(x: T) => T
><T>(x: T) => null : <T>(x: T) => 任意
>T : T
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a3 = <T>(x: T, y: T) => null;  // error, too many required params
>this.a3 = <T>(x: T, y: T) => null : <T>(x: T, y: T) => 任意
>this.a3 : <T>(x: T) => T
>this : 本体
>a3 : <T>(x: T) => T
><T>(x: T, y: T) => null : <T>(x: T, y: T) => 任意
>T : T
>x : T
>T : T
>y : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a4 = <T>() => null; // ok, fewer required params
>this.a4 = <T>() => null : <T>() => 任意
>this.a4 : <T>(x: T, y?: T) => T
>this : 本体
>a4 : <T>(x: T, y?: T) => T
><T>() => null : <T>() => 任意
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a4 = <T>(x?: T, y?: T) => null; // ok, fewer required params
>this.a4 = <T>(x?: T, y?: T) => null : <T>(x?: T, y?: T) => 任意
>this.a4 : <T>(x: T, y?: T) => T
>this : 本体
>a4 : <T>(x: T, y?: T) => T
><T>(x?: T, y?: T) => null : <T>(x?: T, y?: T) => 任意
>T : T
>x : T
>T : T
>y : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a4 = <T>(x: T) => null; // ok, same T of required params
>this.a4 = <T>(x: T) => null : <T>(x: T) => 任意
>this.a4 : <T>(x: T, y?: T) => T
>this : 本体
>a4 : <T>(x: T, y?: T) => T
><T>(x: T) => null : <T>(x: T) => 任意
>T : T
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a4 = <T>(x: T, y: T) => null;  // ok, same number of params
>this.a4 = <T>(x: T, y: T) => null : <T>(x: T, y: T) => 任意
>this.a4 : <T>(x: T, y?: T) => T
>this : 本体
>a4 : <T>(x: T, y?: T) => T
><T>(x: T, y: T) => null : <T>(x: T, y: T) => 任意
>T : T
>x : T
>T : T
>y : T
>T : T
>null : 空值
>类型别名 :=> 空值


            this.a5 = <T>() => null; // ok, fewer required params
>this.a5 = <T>() => null : <T>() => 任意
>this.a5 : <T>(x?: T, y?: T) => T
>this : 本体
>a5 : <T>(x?: T, y?: T) => T
><T>() => null : <T>() => 任意
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a5 = <T>(x?: T, y?: T) => null; // ok, fewer required params
>this.a5 = <T>(x?: T, y?: T) => null : <T>(x?: T, y?: T) => 任意
>this.a5 : <T>(x?: T, y?: T) => T
>this : 本体
>a5 : <T>(x?: T, y?: T) => T
><T>(x?: T, y?: T) => null : <T>(x?: T, y?: T) => 任意
>T : T
>x : T
>T : T
>y : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a5 = <T>(x: T) => null; // ok, all present params match
>this.a5 = <T>(x: T) => null : <T>(x: T) => 任意
>this.a5 : <T>(x?: T, y?: T) => T
>this : 本体
>a5 : <T>(x?: T, y?: T) => T
><T>(x: T) => null : <T>(x: T) => 任意
>T : T
>x : T
>T : T
>null : 空值
>类型别名 :=> 空值

            this.a5 = <T>(x: T, y: T) => null;  // ok, same number of params
>this.a5 = <T>(x: T, y: T) => null : <T>(x: T, y: T) => 任意
>this.a5 : <T>(x?: T, y?: T) => T
>this : 本体
>a5 : <T>(x?: T, y?: T) => T
><T>(x: T, y: T) => null : <T>(x: T, y: T) => 任意
>T : T
>x : T
>T : T
>y : T
>T : T
>null : 空值
>类型别名 :=> 空值
        }
    }
}
