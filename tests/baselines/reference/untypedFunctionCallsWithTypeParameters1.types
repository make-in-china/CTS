=== tests/cases/compiler/untypedFunctionCallsWithTypeParameters1.ts ===
// none of these function calls should be allowed
var x = function () { return; };
>x : () => 无值
>function () { return; } : () => 无值

var r1 = x<number>();
>r1 : 无值
>类型别名 :=> 无值
>x<number>() : 无值
>类型别名 :=> 无值
>x : () => 无值

var y: any = x;
>y : 任意
>类型别名 :=> 任意
>x : () => 无值

var r2 = y<string>();
>r2 : 任意
>类型别名 :=> 任意
>y<string>() : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

var c: Function;
>c : Function
>Function : Function

var r3 = c<number>(); // should be an error
>r3 : 任意
>类型别名 :=> 任意
>c<number>() : 任意
>类型别名 :=> 任意
>c : Function

class C implements Function {
>C : C
>Function : Function

    prototype = null;
>prototype : 任意
>类型别名 :=> 任意
>null : 空值
>类型别名 :=> 空值

    length = 1;
>length : 数字
>类型别名 :=> 数字
>1 : 1

    arguments = null;
>arguments : 任意
>类型别名 :=> 任意
>null : 空值
>类型别名 :=> 空值

    caller = () => { };
>caller : () => 无值
>() => { } : () => 无值
}

var c2: C;
>c2 : C
>C : C

var r4 = c2<number>(); // should be an error
>r4 : 任意
>类型别名 :=> 任意
>c2<number>() : 任意
>类型别名 :=> 任意
>c2 : C

class C2 extends Function { } // error
>C2 : C2
>Function : Function

var c3: C2;
>c3 : C2
>C2 : C2

var r5 = c3<number>(); // error
>r5 : 任意
>类型别名 :=> 任意
>c3<number>() : 任意
>类型别名 :=> 任意
>c3 : C2

interface I {
>I : I

    (number): number;
>number : 任意
>类型别名 :=> 任意
}
var z: I;
>z : I
>I : I

var r6 = z<string>(1); // error
>r6 : 数字
>类型别名 :=> 数字
>z<string>(1) : 数字
>类型别名 :=> 数字
>z : I
>1 : 1

interface callable2<T> {
>callable2 : callable2<T>
>T : T

    (a: T): T;
>a : T
>T : T
>T : T
}

var c4: callable2<number>;
>c4 : callable2<数字>
>callable2 : callable2<T>

c4<number>(1);
>c4<number>(1) : 数字
>类型别名 :=> 数字
>c4 : callable2<数字>
>1 : 1

interface callable3<T> {
>callable3 : callable3<T>
>T : T

    (a: T): T;
>a : T
>T : T
>T : T
}

var c5: callable3<number>;
>c5 : callable3<数字>
>callable3 : callable3<T>

c5<string>(1); // error
>c5<string>(1) : 数字
>类型别名 :=> 数字
>c5 : callable3<数字>
>1 : 1


