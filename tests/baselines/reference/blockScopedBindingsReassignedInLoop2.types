=== tests/cases/compiler/blockScopedBindingsReassignedInLoop2.ts ===
for (let x = 1, y = 2; x < y; ++x, --y) {
>x : number
>类型别名 :=> 数字
>1 : 1
>y : number
>类型别名 :=> 数字
>2 : 2
>x < y : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
>++x, --y : number
>类型别名 :=> 数字
>++x : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>--y : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

    let a = () => x++ + y++;
>a : () => number
>() => x++ + y++ : () => number
>x++ + y++ : number
>类型别名 :=> 数字
>x++ : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>y++ : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

    if (x == 1) {
>x == 1 : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>1 : 1

        break;
    }
    else {
        y = 5;
>y = 5 : 5
>y : number
>类型别名 :=> 数字
>5 : 5
    }
}

for (let x = 1, y = 2; x < y; ++x, --y) {
>x : number
>类型别名 :=> 数字
>1 : 1
>y : number
>类型别名 :=> 数字
>2 : 2
>x < y : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
>++x, --y : number
>类型别名 :=> 数字
>++x : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>--y : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

    let a = () => x++ + y++;
>a : () => number
>() => x++ + y++ : () => number
>x++ + y++ : number
>类型别名 :=> 数字
>x++ : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>y++ : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

    if (x == 1) {
>x == 1 : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>1 : 1

        continue;
    }
    else {
        y = 5;
>y = 5 : 5
>y : number
>类型别名 :=> 数字
>5 : 5
    }
}

loop:
>loop : any
>类型别名 :=> 任意

for (let x = 1, y = 2; x < y; ++x, --y) {
>x : number
>类型别名 :=> 数字
>1 : 1
>y : number
>类型别名 :=> 数字
>2 : 2
>x < y : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
>++x, --y : number
>类型别名 :=> 数字
>++x : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>--y : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

    let a = () => x++ + y++;
>a : () => number
>() => x++ + y++ : () => number
>x++ + y++ : number
>类型别名 :=> 数字
>x++ : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>y++ : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

    if (x == 1) {
>x == 1 : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>1 : 1

        break loop;
>loop : any
>类型别名 :=> 任意
    }
    else {
        y = 5;
>y = 5 : 5
>y : number
>类型别名 :=> 数字
>5 : 5
    }
}

loop:
>loop : any
>类型别名 :=> 任意

for (let x = 1, y = 2; x < y; ++x, --y) {
>x : number
>类型别名 :=> 数字
>1 : 1
>y : number
>类型别名 :=> 数字
>2 : 2
>x < y : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
>++x, --y : number
>类型别名 :=> 数字
>++x : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>--y : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

    let a = () => x++ + y++;
>a : () => number
>() => x++ + y++ : () => number
>x++ + y++ : number
>类型别名 :=> 数字
>x++ : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>y++ : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

    if (x == 1) {
>x == 1 : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>1 : 1

        continue loop;
>loop : any
>类型别名 :=> 任意
    }
    else {
        y = 5;
>y = 5 : 5
>y : number
>类型别名 :=> 数字
>5 : 5
    }
}
