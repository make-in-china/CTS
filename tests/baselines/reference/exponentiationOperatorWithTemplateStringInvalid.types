=== tests/cases/conformance/es7/exponentiationOperator/exponentiationOperatorWithTemplateStringInvalid.ts ===
var a = 1 ** `${ 3 }`;
>a : 数字
>类型别名 :=> 数字
>1 ** `${ 3 }` : 数字
>类型别名 :=> 数字
>1 : 1
>`${ 3 }` : 文字
>类型别名 :=> 文字
>3 : 3

var b = 1 ** `2${ 3 }`;
>b : 数字
>类型别名 :=> 数字
>1 ** `2${ 3 }` : 数字
>类型别名 :=> 数字
>1 : 1
>`2${ 3 }` : 文字
>类型别名 :=> 文字
>3 : 3

var c = 1 ** `${ 3 }4`;
>c : 数字
>类型别名 :=> 数字
>1 ** `${ 3 }4` : 数字
>类型别名 :=> 数字
>1 : 1
>`${ 3 }4` : 文字
>类型别名 :=> 文字
>3 : 3

var d = 1 ** `2${ 3 }4`;
>d : 数字
>类型别名 :=> 数字
>1 ** `2${ 3 }4` : 数字
>类型别名 :=> 数字
>1 : 1
>`2${ 3 }4` : 文字
>类型别名 :=> 文字
>3 : 3

var e = `${ 3 }` ** 5;
>e : 数字
>类型别名 :=> 数字
>`${ 3 }` ** 5 : 数字
>类型别名 :=> 数字
>`${ 3 }` : 文字
>类型别名 :=> 文字
>3 : 3
>5 : 5

var f = `2${ 3 }` ** 5;
>f : 数字
>类型别名 :=> 数字
>`2${ 3 }` ** 5 : 数字
>类型别名 :=> 数字
>`2${ 3 }` : 文字
>类型别名 :=> 文字
>3 : 3
>5 : 5

var g = `${ 3 }4` ** 5;
>g : 数字
>类型别名 :=> 数字
>`${ 3 }4` ** 5 : 数字
>类型别名 :=> 数字
>`${ 3 }4` : 文字
>类型别名 :=> 文字
>3 : 3
>5 : 5

var h = `2${ 3 }4` ** 5;
>h : 数字
>类型别名 :=> 数字
>`2${ 3 }4` ** 5 : 数字
>类型别名 :=> 数字
>`2${ 3 }4` : 文字
>类型别名 :=> 文字
>3 : 3
>5 : 5

var k = 10;
>k : 数字
>类型别名 :=> 数字
>10 : 10

k **= `${ 3 }`;
>k **= `${ 3 }` : 数字
>类型别名 :=> 数字
>k : 数字
>类型别名 :=> 数字
>`${ 3 }` : 文字
>类型别名 :=> 文字
>3 : 3

k **= `2${ 3 }`;
>k **= `2${ 3 }` : 数字
>类型别名 :=> 数字
>k : 数字
>类型别名 :=> 数字
>`2${ 3 }` : 文字
>类型别名 :=> 文字
>3 : 3

k **= `2${ 3 }4`;
>k **= `2${ 3 }4` : 数字
>类型别名 :=> 数字
>k : 数字
>类型别名 :=> 数字
>`2${ 3 }4` : 文字
>类型别名 :=> 文字
>3 : 3

k **= `2${ 3 }4`;
>k **= `2${ 3 }4` : 数字
>类型别名 :=> 数字
>k : 数字
>类型别名 :=> 数字
>`2${ 3 }4` : 文字
>类型别名 :=> 文字
>3 : 3


 
