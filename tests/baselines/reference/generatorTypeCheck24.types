=== tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck24.ts ===
class Foo { x: number }
>Foo : Foo
>x : 数字
>类型别名 :=> 数字

class Bar extends Foo { y: string }
>Bar : Bar
>Foo : Foo
>y : 文字
>类型别名 :=> 文字

class Baz { z: number }
>Baz : Baz
>z : 数字
>类型别名 :=> 数字

function* g3() {
>g3 : () => IterableIterator<任意>

    yield;
>yield : 任意
>类型别名 :=> 任意

    yield * [new Foo];
>yield * [new Foo] : 任意
>类型别名 :=> 任意
>[new Foo] : Foo[]
>new Foo : Foo
>Foo : 类为 Foo

    yield new Bar;
>yield new Bar : 任意
>类型别名 :=> 任意
>new Bar : Bar
>Bar : 类为 Bar

    yield new Baz;
>yield new Baz : 任意
>类型别名 :=> 任意
>new Baz : Baz
>Baz : 类为 Baz

    yield *[new Bar];
>yield *[new Bar] : 任意
>类型别名 :=> 任意
>[new Bar] : Bar[]
>new Bar : Bar
>Bar : 类为 Bar

    yield *[new Baz];
>yield *[new Baz] : 任意
>类型别名 :=> 任意
>[new Baz] : Baz[]
>new Baz : Baz
>Baz : 类为 Baz
}
