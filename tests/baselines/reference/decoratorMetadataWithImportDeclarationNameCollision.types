=== tests/cases/compiler/db.ts ===
export class db {
>db : db

    public doSomething() {
>doSomething : () => void
    }
}

=== tests/cases/compiler/service.ts ===
import {db} from './db';
>db : typeof db

function someDecorator(target) {
>someDecorator : (target: any) => any
>target : any
>类型别名 :=> 任意

    return target;
>target : any
>类型别名 :=> 任意
}
@someDecorator
>someDecorator : (target: any) => any

class MyClass {
>MyClass : MyClass

    db: db;
>db : db
>db : db

    constructor(db: db) {
>db : db
>db : db

        this.db = db;
>this.db = db : db
>this.db : db
>this : this
>db : db
>db : db

        this.db.doSomething();
>this.db.doSomething() : void
>类型别名 :=> 无值
>this.db.doSomething : () => void
>this.db : db
>this : this
>db : db
>doSomething : () => void
    }
}
export {MyClass};
>MyClass : typeof MyClass

