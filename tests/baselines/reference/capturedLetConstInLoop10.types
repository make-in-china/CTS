=== tests/cases/compiler/capturedLetConstInLoop10.ts ===
class A {
>A : A

    foo() {
>foo : () => void

        for (let x of [0]) {
>x : number
>类型别名 :=> 数字
>[0] : number[]
>0 : 0

            let f = function() { return x; };
>f : () => number
>function() { return x; } : () => number
>x : number
>类型别名 :=> 数字

            this.bar(f());
>this.bar(f()) : void
>类型别名 :=> 无值
>this.bar : (a: number) => void
>this : this
>bar : (a: number) => void
>f() : number
>类型别名 :=> 数字
>f : () => number
        }
    }
    bar(a: number) {
>bar : (a: number) => void
>a : number
>类型别名 :=> 数字
    }

    baz() {
>baz : () => void

        for (let x of [1]) {
>x : number
>类型别名 :=> 数字
>[1] : number[]
>1 : 1

            let a = function() {  return x; };
>a : () => number
>function() {  return x; } : () => number
>x : number
>类型别名 :=> 数字

            for (let y of [1]) {
>y : number
>类型别名 :=> 数字
>[1] : number[]
>1 : 1

                let b = function() { return y; };
>b : () => number
>function() { return y; } : () => number
>y : number
>类型别名 :=> 数字

                this.bar(b());
>this.bar(b()) : void
>类型别名 :=> 无值
>this.bar : (a: number) => void
>this : this
>bar : (a: number) => void
>b() : number
>类型别名 :=> 数字
>b : () => number
            }
            this.bar(a());
>this.bar(a()) : void
>类型别名 :=> 无值
>this.bar : (a: number) => void
>this : this
>bar : (a: number) => void
>a() : number
>类型别名 :=> 数字
>a : () => number
        }
    }
    baz2() {
>baz2 : () => void

        for (let x of [1]) {
>x : number
>类型别名 :=> 数字
>[1] : number[]
>1 : 1

            let a = function() {  return x; };
>a : () => number
>function() {  return x; } : () => number
>x : number
>类型别名 :=> 数字

            this.bar(a());
>this.bar(a()) : void
>类型别名 :=> 无值
>this.bar : (a: number) => void
>this : this
>bar : (a: number) => void
>a() : number
>类型别名 :=> 数字
>a : () => number

            for (let y of [1]) {
>y : number
>类型别名 :=> 数字
>[1] : number[]
>1 : 1

                let b = function() { return y; };
>b : () => number
>function() { return y; } : () => number
>y : number
>类型别名 :=> 数字

                this.bar(b());
>this.bar(b()) : void
>类型别名 :=> 无值
>this.bar : (a: number) => void
>this : this
>bar : (a: number) => void
>b() : number
>类型别名 :=> 数字
>b : () => number
            }
        }
    }
}

class B {
>B : B

    foo() {
>foo : () => void

        let a =
>a : () => void

            () => {
>() => {                for (let x of [0]) {                    let f = () => x;                    this.bar(f());                }            } : () => void

                for (let x of [0]) {
>x : number
>类型别名 :=> 数字
>[0] : number[]
>0 : 0

                    let f = () => x;
>f : () => number
>() => x : () => number
>x : number
>类型别名 :=> 数字

                    this.bar(f());
>this.bar(f()) : void
>类型别名 :=> 无值
>this.bar : (a: number) => void
>this : this
>bar : (a: number) => void
>f() : number
>类型别名 :=> 数字
>f : () => number
                }
            }
    }
    bar(a: number) {
>bar : (a: number) => void
>a : number
>类型别名 :=> 数字
    }
}
