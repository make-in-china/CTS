=== tests/cases/compiler/capturedLetConstInLoop10.ts ===
class A {
>A : A

    foo() {
>foo : () => 无值

        for (let x of [0]) {
>x : 数字
>类型别名 :=> 数字
>[0] : 数字[]
>0 : 0

            let f = function() { return x; };
>f : () => 数字
>function() { return x; } : () => 数字
>x : 数字
>类型别名 :=> 数字

            this.bar(f());
>this.bar(f()) : 无值
>类型别名 :=> 无值
>this.bar : (a: 数字) => 无值
>this : 本体
>bar : (a: 数字) => 无值
>f() : 数字
>类型别名 :=> 数字
>f : () => 数字
        }
    }
    bar(a: number) {
>bar : (a: 数字) => 无值
>a : 数字
>类型别名 :=> 数字
    }

    baz() {
>baz : () => 无值

        for (let x of [1]) {
>x : 数字
>类型别名 :=> 数字
>[1] : 数字[]
>1 : 1

            let a = function() {  return x; };
>a : () => 数字
>function() {  return x; } : () => 数字
>x : 数字
>类型别名 :=> 数字

            for (let y of [1]) {
>y : 数字
>类型别名 :=> 数字
>[1] : 数字[]
>1 : 1

                let b = function() { return y; };
>b : () => 数字
>function() { return y; } : () => 数字
>y : 数字
>类型别名 :=> 数字

                this.bar(b());
>this.bar(b()) : 无值
>类型别名 :=> 无值
>this.bar : (a: 数字) => 无值
>this : 本体
>bar : (a: 数字) => 无值
>b() : 数字
>类型别名 :=> 数字
>b : () => 数字
            }
            this.bar(a());
>this.bar(a()) : 无值
>类型别名 :=> 无值
>this.bar : (a: 数字) => 无值
>this : 本体
>bar : (a: 数字) => 无值
>a() : 数字
>类型别名 :=> 数字
>a : () => 数字
        }
    }
    baz2() {
>baz2 : () => 无值

        for (let x of [1]) {
>x : 数字
>类型别名 :=> 数字
>[1] : 数字[]
>1 : 1

            let a = function() {  return x; };
>a : () => 数字
>function() {  return x; } : () => 数字
>x : 数字
>类型别名 :=> 数字

            this.bar(a());
>this.bar(a()) : 无值
>类型别名 :=> 无值
>this.bar : (a: 数字) => 无值
>this : 本体
>bar : (a: 数字) => 无值
>a() : 数字
>类型别名 :=> 数字
>a : () => 数字

            for (let y of [1]) {
>y : 数字
>类型别名 :=> 数字
>[1] : 数字[]
>1 : 1

                let b = function() { return y; };
>b : () => 数字
>function() { return y; } : () => 数字
>y : 数字
>类型别名 :=> 数字

                this.bar(b());
>this.bar(b()) : 无值
>类型别名 :=> 无值
>this.bar : (a: 数字) => 无值
>this : 本体
>bar : (a: 数字) => 无值
>b() : 数字
>类型别名 :=> 数字
>b : () => 数字
            }
        }
    }
}

class B {
>B : B

    foo() {
>foo : () => 无值

        let a =
>a : () => 无值

            () => {
>() => {                for (let x of [0]) {                    let f = () => x;                    this.bar(f());                }            } : () => 无值

                for (let x of [0]) {
>x : 数字
>类型别名 :=> 数字
>[0] : 数字[]
>0 : 0

                    let f = () => x;
>f : () => 数字
>() => x : () => 数字
>x : 数字
>类型别名 :=> 数字

                    this.bar(f());
>this.bar(f()) : 无值
>类型别名 :=> 无值
>this.bar : (a: 数字) => 无值
>this : 本体
>bar : (a: 数字) => 无值
>f() : 数字
>类型别名 :=> 数字
>f : () => 数字
                }
            }
    }
    bar(a: number) {
>bar : (a: 数字) => 无值
>a : 数字
>类型别名 :=> 数字
    }
}
