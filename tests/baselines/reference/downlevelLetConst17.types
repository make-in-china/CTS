=== tests/cases/compiler/downlevelLetConst17.ts ===
'use strict'
>'use strict' : "use strict"

declare function use(a: any);
>use : (a: 任意) => 任意
>a : 任意
>类型别名 :=> 任意

var x;
>x : 任意
>类型别名 :=> 任意

for (let x = 10; ;) {
>x : 数字
>类型别名 :=> 数字
>10 : 10

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 数字
>类型别名 :=> 数字
}
use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意

for (const x = 10; ;) {
>x : 10
>10 : 10

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 10
}

for (; ;) {
    let x = 10;
>x : 数字
>类型别名 :=> 数字
>10 : 10

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 数字
>类型别名 :=> 数字

    x = 1;
>x = 1 : 1
>x : 数字
>类型别名 :=> 数字
>1 : 1
}

for (; ;) {
    const x = 10;
>x : 10
>10 : 10

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 10
}

for (let x; ;) {
>x : 任意
>类型别名 :=> 任意

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意

    x = 1;
>x = 1 : 1
>x : 任意
>类型别名 :=> 任意
>1 : 1
}

for (; ;) {
    let x;
>x : 任意
>类型别名 :=> 任意

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意

    x = 1;
>x = 1 : 1
>x : 任意
>类型别名 :=> 任意
>1 : 1
}

while (true) {
>true : 为真
>类型别名 :=> 为真

    let x;
>x : 任意
>类型别名 :=> 任意

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
}

while (true) {
>true : 为真
>类型别名 :=> 为真

    const x = true;
>x : 为真
>类型别名 :=> 为真
>true : 为真
>类型别名 :=> 为真

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 为真
>类型别名 :=> 为真
}

do {
    let x;
>x : 任意
>类型别名 :=> 任意

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意

} while (true);
>true : 为真
>类型别名 :=> 为真

do {
    let x;
>x : 任意
>类型别名 :=> 任意

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意

} while (true);
>true : 为真
>类型别名 :=> 为真

for (let x in []) {
>x : 文字
>类型别名 :=> 文字
>[] : 未定[]

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 文字
>类型别名 :=> 文字
}

for (const x in []) {
>x : 文字
>类型别名 :=> 文字
>[] : 未定[]

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 文字
>类型别名 :=> 文字
}

for (const x of []) {
>x : 任意
>类型别名 :=> 任意
>[] : 未定[]

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
}
