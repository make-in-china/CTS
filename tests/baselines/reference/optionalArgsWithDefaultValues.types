=== tests/cases/compiler/optionalArgsWithDefaultValues.ts ===
function foo(x: number, y?:boolean=false, z?=0) {}
>foo : (x: 数字, y?: 真假, z?: 数字) => 无值
>x : 数字
>类型别名 :=> 数字
>y : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假
>z : 数字
>类型别名 :=> 数字
>0 : 0

class CCC {
>CCC : CCC

    public foo(x: number, y?:boolean=false, z?=0) {}
>foo : (x: 数字, y?: 真假, z?: 数字) => 无值
>x : 数字
>类型别名 :=> 数字
>y : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假
>z : 数字
>类型别名 :=> 数字
>0 : 0

    static foo2(x: number, y?:boolean=false, z?=0) {}
>foo2 : (x: 数字, y?: 真假, z?: 数字) => 无值
>x : 数字
>类型别名 :=> 数字
>y : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假
>z : 数字
>类型别名 :=> 数字
>0 : 0
}

var a = (x?=0) => { return 1; };
>a : (x?: 数字) => 数字
>(x?=0) => { return 1; } : (x?: 数字) => 数字
>x : 数字
>类型别名 :=> 数字
>0 : 0
>1 : 1

var b = (x, y?:number = 2) => { x; };
>b : (x: 任意, y?: 数字) => 无值
>(x, y?:number = 2) => { x; } : (x: 任意, y?: 数字) => 无值
>x : 任意
>类型别名 :=> 任意
>y : 数字
>类型别名 :=> 数字
>2 : 2
>x : 任意
>类型别名 :=> 任意

