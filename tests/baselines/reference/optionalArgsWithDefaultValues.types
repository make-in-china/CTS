=== tests/cases/compiler/optionalArgsWithDefaultValues.ts ===
function foo(x: number, y?:boolean=false, z?=0) {}
>foo : (x: number, y?: boolean, z?: number) => void
>x : number
>类型别名 :=> 数字
>y : boolean
>类型别名 :=> 真假
>false : false
>类型别名 :=> 为假
>z : number
>类型别名 :=> 数字
>0 : 0

class CCC {
>CCC : CCC

    public foo(x: number, y?:boolean=false, z?=0) {}
>foo : (x: number, y?: boolean, z?: number) => void
>x : number
>类型别名 :=> 数字
>y : boolean
>类型别名 :=> 真假
>false : false
>类型别名 :=> 为假
>z : number
>类型别名 :=> 数字
>0 : 0

    static foo2(x: number, y?:boolean=false, z?=0) {}
>foo2 : (x: number, y?: boolean, z?: number) => void
>x : number
>类型别名 :=> 数字
>y : boolean
>类型别名 :=> 真假
>false : false
>类型别名 :=> 为假
>z : number
>类型别名 :=> 数字
>0 : 0
}

var a = (x?=0) => { return 1; };
>a : (x?: number) => number
>(x?=0) => { return 1; } : (x?: number) => number
>x : number
>类型别名 :=> 数字
>0 : 0
>1 : 1

var b = (x, y?:number = 2) => { x; };
>b : (x: any, y?: number) => void
>(x, y?:number = 2) => { x; } : (x: any, y?: number) => void
>x : any
>类型别名 :=> 任意
>y : number
>类型别名 :=> 数字
>2 : 2
>x : any
>类型别名 :=> 任意

