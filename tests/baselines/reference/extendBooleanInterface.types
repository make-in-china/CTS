=== tests/cases/conformance/types/primitives/boolean/extendBooleanInterface.ts ===
interface Boolean {
>Boolean : Boolean

    doStuff(): string;
>doStuff : () => string

    doOtherStuff<T>(x: T): T;
>doOtherStuff : <T>(x: T) => T
>T : T
>x : T
>T : T
>T : T
}

var x = true;
>x : boolean
>类型别名 :=> 真假
>true : true
>类型别名 :=> 为真

var a: string = x.doStuff();
>a : string
>类型别名 :=> 文字
>x.doStuff() : string
>类型别名 :=> 文字
>x.doStuff : () => string
>x : true
>类型别名 :=> 为真
>doStuff : () => string

var b: string = x.doOtherStuff('hm');
>b : string
>类型别名 :=> 文字
>x.doOtherStuff('hm') : "hm"
>x.doOtherStuff : <T>(x: T) => T
>x : true
>类型别名 :=> 为真
>doOtherStuff : <T>(x: T) => T
>'hm' : "hm"

var c: string = x['doStuff']();
>c : string
>类型别名 :=> 文字
>x['doStuff']() : string
>类型别名 :=> 文字
>x['doStuff'] : () => string
>x : true
>类型别名 :=> 为真
>'doStuff' : "doStuff"

var d: string = x['doOtherStuff']('hm');
>d : string
>类型别名 :=> 文字
>x['doOtherStuff']('hm') : "hm"
>x['doOtherStuff'] : <T>(x: T) => T
>x : true
>类型别名 :=> 为真
>'doOtherStuff' : "doOtherStuff"
>'hm' : "hm"

