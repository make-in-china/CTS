=== tests/cases/conformance/declarationEmit/typePredicates/declarationEmitIdentifierPredicatesWithPrivateName01.ts ===
interface I {
>I : I

    a: number;
>a : number
}

export function f(x: any): x is I {
>f : (x: any) => x is I
>x : any
>x : any
>I : I

    return typeof x.a === "number";
>typeof x.a === "number" : boolean
>typeof x.a : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x.a : any
>x : any
>a : any
>"number" : "number"
}
