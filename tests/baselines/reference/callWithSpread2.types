=== tests/cases/conformance/expressions/functionCalls/callWithSpread2.ts ===
declare function all(a?: number, b?: number): void;
>all : (a?: 数字, b?: 数字) => 无值
>a : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

declare function weird(a?: number | string, b?: number | string): void;
>weird : (a?: 文字 | 数字, b?: 文字 | 数字) => 无值
>a : 文字 | 数字
>b : 文字 | 数字

declare function prefix(s: string, a?: number, b?: number): void;
>prefix : (s: 文字, a?: 数字, b?: 数字) => 无值
>s : 文字
>类型别名 :=> 文字
>a : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

declare function rest(s: string, a?: number, b?: number,  ...rest: number[]): void;
>rest : (s: 文字, a?: 数字, b?: 数字, ...rest: 数字[]) => 无值
>s : 文字
>类型别名 :=> 文字
>a : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>rest : 数字[]

declare function normal(s: string): void;
>normal : (s: 文字) => 无值
>s : 文字
>类型别名 :=> 文字

declare function thunk(): string;
>thunk : () => 文字

declare var ns: number[];
>ns : 数字[]

declare var mixed: (number | string)[];
>mixed : (文字 | 数字)[]

declare var tuple: [number, string];
>tuple : [数字, 文字]

// good
all(...ns)
>all(...ns) : 无值
>类型别名 :=> 无值
>all : (a?: 数字, b?: 数字) => 无值
>...ns : 数字
>类型别名 :=> 数字
>ns : 数字[]

weird(...ns)
>weird(...ns) : 无值
>类型别名 :=> 无值
>weird : (a?: 文字 | 数字, b?: 文字 | 数字) => 无值
>...ns : 数字
>类型别名 :=> 数字
>ns : 数字[]

weird(...mixed)
>weird(...mixed) : 无值
>类型别名 :=> 无值
>weird : (a?: 文字 | 数字, b?: 文字 | 数字) => 无值
>...mixed : 文字 | 数字
>mixed : (文字 | 数字)[]

weird(...tuple)
>weird(...tuple) : 无值
>类型别名 :=> 无值
>weird : (a?: 文字 | 数字, b?: 文字 | 数字) => 无值
>...tuple : 文字 | 数字
>tuple : [数字, 文字]

prefix("a", ...ns)
>prefix("a", ...ns) : 无值
>类型别名 :=> 无值
>prefix : (s: 文字, a?: 数字, b?: 数字) => 无值
>"a" : "a"
>...ns : 数字
>类型别名 :=> 数字
>ns : 数字[]

rest("d", ...ns)
>rest("d", ...ns) : 无值
>类型别名 :=> 无值
>rest : (s: 文字, a?: 数字, b?: 数字, ...rest: 数字[]) => 无值
>"d" : "d"
>...ns : 数字
>类型别名 :=> 数字
>ns : 数字[]


// this covers the arguments case
normal("g", ...ns)
>normal("g", ...ns) : 无值
>类型别名 :=> 无值
>normal : (s: 文字) => 无值
>"g" : "g"
>...ns : 数字
>类型别名 :=> 数字
>ns : 数字[]

normal("h", ...mixed)
>normal("h", ...mixed) : 无值
>类型别名 :=> 无值
>normal : (s: 文字) => 无值
>"h" : "h"
>...mixed : 文字 | 数字
>mixed : (文字 | 数字)[]

normal("i", ...tuple)
>normal("i", ...tuple) : 无值
>类型别名 :=> 无值
>normal : (s: 文字) => 无值
>"i" : "i"
>...tuple : 文字 | 数字
>tuple : [数字, 文字]

thunk(...ns)
>thunk(...ns) : 文字
>类型别名 :=> 文字
>thunk : () => 文字
>...ns : 数字
>类型别名 :=> 数字
>ns : 数字[]

thunk(...mixed)
>thunk(...mixed) : 文字
>类型别名 :=> 文字
>thunk : () => 文字
>...mixed : 文字 | 数字
>mixed : (文字 | 数字)[]

thunk(...tuple)
>thunk(...tuple) : 文字
>类型别名 :=> 文字
>thunk : () => 文字
>...tuple : 文字 | 数字
>tuple : [数字, 文字]

// bad
all(...mixed)
>all(...mixed) : 无值
>类型别名 :=> 无值
>all : (a?: 数字, b?: 数字) => 无值
>...mixed : 文字 | 数字
>mixed : (文字 | 数字)[]

all(...tuple)
>all(...tuple) : 无值
>类型别名 :=> 无值
>all : (a?: 数字, b?: 数字) => 无值
>...tuple : 文字 | 数字
>tuple : [数字, 文字]

prefix("b", ...mixed)
>prefix("b", ...mixed) : 无值
>类型别名 :=> 无值
>prefix : (s: 文字, a?: 数字, b?: 数字) => 无值
>"b" : "b"
>...mixed : 文字 | 数字
>mixed : (文字 | 数字)[]

prefix("c", ...tuple)
>prefix("c", ...tuple) : 无值
>类型别名 :=> 无值
>prefix : (s: 文字, a?: 数字, b?: 数字) => 无值
>"c" : "c"
>...tuple : 文字 | 数字
>tuple : [数字, 文字]

rest("e", ...mixed)
>rest("e", ...mixed) : 无值
>类型别名 :=> 无值
>rest : (s: 文字, a?: 数字, b?: 数字, ...rest: 数字[]) => 无值
>"e" : "e"
>...mixed : 文字 | 数字
>mixed : (文字 | 数字)[]

rest("f", ...tuple)
>rest("f", ...tuple) : 无值
>类型别名 :=> 无值
>rest : (s: 文字, a?: 数字, b?: 数字, ...rest: 数字[]) => 无值
>"f" : "f"
>...tuple : 文字 | 数字
>tuple : [数字, 文字]

prefix(...ns) // required parameters are required
>prefix(...ns) : 无值
>类型别名 :=> 无值
>prefix : (s: 文字, a?: 数字, b?: 数字) => 无值
>...ns : 数字
>类型别名 :=> 数字
>ns : 数字[]

prefix(...mixed)
>prefix(...mixed) : 无值
>类型别名 :=> 无值
>prefix : (s: 文字, a?: 数字, b?: 数字) => 无值
>...mixed : 文字 | 数字
>mixed : (文字 | 数字)[]

prefix(...tuple)
>prefix(...tuple) : 无值
>类型别名 :=> 无值
>prefix : (s: 文字, a?: 数字, b?: 数字) => 无值
>...tuple : 文字 | 数字
>tuple : [数字, 文字]

