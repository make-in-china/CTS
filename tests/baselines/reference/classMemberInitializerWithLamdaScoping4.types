=== tests/cases/compiler/classMemberInitializerWithLamdaScoping3_0.ts ===
export var field1: string;
>field1 : string
>类型别名 :=> 文字

=== tests/cases/compiler/classMemberInitializerWithLamdaScoping3_1.ts ===
declare var console: {
>console : { log(msg?: any): void; }

    log(msg?: any): void;
>log : (msg?: any) => void
>msg : any
>类型别名 :=> 任意

};
export class Test1 {
>Test1 : Test1

    constructor(private field1: string) {
>field1 : string
>类型别名 :=> 文字
    }
    messageHandler = () => {
>messageHandler : () => void
>() => {        console.log(field1); // Should be error that couldnt find symbol field1    } : () => void

        console.log(field1); // Should be error that couldnt find symbol field1
>console.log(field1) : void
>类型别名 :=> 无值
>console.log : (msg?: any) => void
>console : { log(msg?: any): void; }
>log : (msg?: any) => void
>field1 : any
>类型别名 :=> 任意

    };
}
