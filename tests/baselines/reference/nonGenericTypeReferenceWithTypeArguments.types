=== tests/cases/conformance/types/specifyingTypes/typeReferences/nonGenericTypeReferenceWithTypeArguments.ts ===
// Check that errors are reported for non-generic types with type arguments

class C { }
>C : C

interface I { }
>I : I

enum E { }
>E : E

type T = { };
>T : T

var v1: C<string>;
>v1 : 任意
>类型别名 :=> 任意
>C : C

var v2: I<string>;
>v2 : 任意
>类型别名 :=> 任意
>I : I

var v3: E<string>;
>v3 : 任意
>类型别名 :=> 任意
>E : E

var v4: T<string>;
>v4 : 任意
>类型别名 :=> 任意
>T : T

function f<U>() {
>f : <U>() => 无值
>U : U

    class C { }
>C : C

    interface I { }
>I : I

    enum E { }
>E : E

    type T = {};
>T : {}

    var v1: C<string>;
>v1 : 任意
>类型别名 :=> 任意
>C : C

    var v2: I<string>;
>v2 : 任意
>类型别名 :=> 任意
>I : I

    var v3: E<string>;
>v3 : 任意
>类型别名 :=> 任意
>E : E

    var v4: T<string>;
>v4 : 任意
>类型别名 :=> 任意
>T : {}

    var v5: U<string>;
>v5 : 任意
>类型别名 :=> 任意
>U : U
}

