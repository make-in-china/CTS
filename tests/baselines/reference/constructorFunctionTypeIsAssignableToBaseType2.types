=== tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/constructorFunctionTypeIsAssignableToBaseType2.ts ===
// the constructor function itself does not need to be a subtype of the base type constructor function

class Base {
>Base : Base

    static foo: {
>foo : { bar: Object; }

        bar: Object;
>bar : Object
>Object : Object
    }
    constructor(x: Object) {
>x : Object
>Object : Object
    }
}

class Derived extends Base {
>Derived : Derived
>Base : Base

    // ok
    static foo: {
>foo : { bar: 数字; }

        bar: number;
>bar : 数字
>类型别名 :=> 数字
    }

    constructor(x: number) {
>x : 数字
>类型别名 :=> 数字

        super(x);
>super(x) : 无值
>类型别名 :=> 无值
>super : 类为 Base
>x : 数字
>类型别名 :=> 数字
    }
}

class Derived2 extends Base {   
>Derived2 : Derived2
>Base : Base

    static foo: {
>foo : { bar: 数字; }

        bar: number;
>bar : 数字
>类型别名 :=> 数字
    }

    // ok, not enforcing assignability relation on this
    constructor(x: any) {
>x : 任意
>类型别名 :=> 任意

        super(x);
>super(x) : 无值
>类型别名 :=> 无值
>super : 类为 Base
>x : 任意
>类型别名 :=> 任意

        return 1;
>1 : 1
    }
}
