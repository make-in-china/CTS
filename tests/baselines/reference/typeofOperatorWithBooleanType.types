=== tests/cases/conformance/expressions/unaryOperators/typeofOperator/typeofOperatorWithBooleanType.ts ===
// typeof  operator on boolean type
var BOOLEAN: boolean;
>BOOLEAN : 真假
>类型别名 :=> 真假

function foo(): boolean { return true; }
>foo : () => 真假
>true : 为真
>类型别名 :=> 为真

class A {
>A : A

    public a: boolean;
>a : 真假
>类型别名 :=> 真假

    static foo() { return false; }
>foo : () => 真假
>false : 为假
>类型别名 :=> 为假
}
module M {
>M : 类为 M

    export var n: boolean;
>n : 真假
>类型别名 :=> 真假
}

var objA = new A();
>objA : A
>new A() : A
>A : 类为 A

// boolean type var
var ResultIsString1 = typeof BOOLEAN;
>ResultIsString1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof BOOLEAN : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>BOOLEAN : 真假
>类型别名 :=> 真假

// boolean type literal
var ResultIsString2 = typeof true;
>ResultIsString2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof true : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>true : 为真
>类型别名 :=> 为真

var ResultIsString3 = typeof { x: true, y: false };
>ResultIsString3 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof { x: true, y: false } : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>{ x: true, y: false } : { x: 真假; y: 真假; }
>x : 真假
>类型别名 :=> 真假
>true : 为真
>类型别名 :=> 为真
>y : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假

// boolean type expressions
var ResultIsString4 = typeof objA.a;
>ResultIsString4 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof objA.a : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>objA.a : 真假
>类型别名 :=> 真假
>objA : A
>a : 真假
>类型别名 :=> 真假

var ResultIsString5 = typeof M.n;
>ResultIsString5 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof M.n : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>M.n : 真假
>类型别名 :=> 真假
>M : 类为 M
>n : 真假
>类型别名 :=> 真假

var ResultIsString6 = typeof foo();
>ResultIsString6 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof foo() : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>foo() : 真假
>类型别名 :=> 真假
>foo : () => 真假

var ResultIsString7 = typeof A.foo();
>ResultIsString7 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof A.foo() : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>A.foo() : 真假
>类型别名 :=> 真假
>A.foo : () => 真假
>A : 类为 A
>foo : () => 真假

// multiple typeof  operator
var ResultIsString8 = typeof typeof BOOLEAN;
>ResultIsString8 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof typeof BOOLEAN : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof BOOLEAN : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>BOOLEAN : 真假
>类型别名 :=> 真假

// miss assignment operators
typeof true;
>typeof true : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>true : 为真
>类型别名 :=> 为真

typeof BOOLEAN;
>typeof BOOLEAN : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>BOOLEAN : 真假
>类型别名 :=> 真假

typeof foo();
>typeof foo() : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>foo() : 真假
>类型别名 :=> 真假
>foo : () => 真假

typeof true, false;
>typeof true, false : 为假
>类型别名 :=> 为假
>typeof true : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>true : 为真
>类型别名 :=> 为真
>false : 为假
>类型别名 :=> 为假

typeof objA.a;
>typeof objA.a : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>objA.a : 真假
>类型别名 :=> 真假
>objA : A
>a : 真假
>类型别名 :=> 真假

typeof M.n;
>typeof M.n : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>M.n : 真假
>类型别名 :=> 真假
>M : 类为 M
>n : 真假
>类型别名 :=> 真假

// use typeof in type query
var z: boolean;
>z : 真假
>类型别名 :=> 真假

var x: boolean[];
>x : 真假[]

var r: () => boolean;
>r : () => 真假

z: typeof BOOLEAN;
>z : 任意
>类型别名 :=> 任意
>typeof BOOLEAN : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>BOOLEAN : 真假
>类型别名 :=> 真假

r: typeof foo;
>r : 任意
>类型别名 :=> 任意
>typeof foo : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>foo : () => 真假

var y = { a: true, b: false};
>y : { a: 真假; b: 真假; }
>{ a: true, b: false} : { a: 真假; b: 真假; }
>a : 真假
>类型别名 :=> 真假
>true : 为真
>类型别名 :=> 为真
>b : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假

z: typeof y.a;
>z : 任意
>类型别名 :=> 任意
>typeof y.a : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>y.a : 真假
>类型别名 :=> 真假
>y : { a: 真假; b: 真假; }
>a : 真假
>类型别名 :=> 真假

z: typeof objA.a;
>z : 任意
>类型别名 :=> 任意
>typeof objA.a : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>objA.a : 真假
>类型别名 :=> 真假
>objA : A
>a : 真假
>类型别名 :=> 真假

z: typeof A.foo;
>z : 任意
>类型别名 :=> 任意
>typeof A.foo : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>A.foo : () => 真假
>A : 类为 A
>foo : () => 真假

z: typeof M.n;
>z : 任意
>类型别名 :=> 任意
>typeof M.n : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>M.n : 真假
>类型别名 :=> 真假
>M : 类为 M
>n : 真假
>类型别名 :=> 真假

