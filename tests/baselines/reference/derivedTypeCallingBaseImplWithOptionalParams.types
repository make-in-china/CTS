=== tests/cases/compiler/derivedTypeCallingBaseImplWithOptionalParams.ts ===
interface MyInterface {
>MyInterface : MyInterface

    myMethod(...myList: any[]);
>myMethod : (...myList: 任意[]) => 任意
>myList : 任意[]
}
class MyClass implements MyInterface {
>MyClass : MyClass
>MyInterface : MyInterface

    myMethod(myList: any[]) { // valid
>myMethod : (myList: 任意[]) => 无值
>myList : 任意[]
    }
}

var x: MyInterface = new MyClass();
>x : MyInterface
>MyInterface : MyInterface
>new MyClass() : MyClass
>MyClass : 类为 MyClass

x.myMethod(); // should be valid, but MyClass has no implementation to handle it.
>x.myMethod() : 任意
>类型别名 :=> 任意
>x.myMethod : (...myList: 任意[]) => 任意
>x : MyInterface
>myMethod : (...myList: 任意[]) => 任意

var y: MyClass = new MyClass();
>y : MyClass
>MyClass : MyClass
>new MyClass() : MyClass
>MyClass : 类为 MyClass

y.myMethod(); // error
>y.myMethod() : 无值
>类型别名 :=> 无值
>y.myMethod : (myList: 任意[]) => 无值
>y : MyClass
>myMethod : (myList: 任意[]) => 无值

