=== tests/cases/conformance/es6/templates/taggedTemplateStringsWithOverloadResolution1_ES6.ts ===
function foo(strs: TemplateStringsArray): number;
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>strs : TemplateStringsArray
>TemplateStringsArray : TemplateStringsArray

function foo(strs: TemplateStringsArray, x: number): string;
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>strs : TemplateStringsArray
>TemplateStringsArray : TemplateStringsArray
>x : 数字
>类型别名 :=> 数字

function foo(strs: TemplateStringsArray, x: number, y: number): boolean;
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>strs : TemplateStringsArray
>TemplateStringsArray : TemplateStringsArray
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

function foo(strs: TemplateStringsArray, x: number, y: string): {};
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>strs : TemplateStringsArray
>TemplateStringsArray : TemplateStringsArray
>x : 数字
>类型别名 :=> 数字
>y : 文字
>类型别名 :=> 文字

function foo(...stuff: any[]): any {
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>stuff : 任意[]

    return undefined;
>undefined : 未定
>类型别名 :=> 未定
}

var a = foo([]);             // number
>a : 任意
>类型别名 :=> 任意
>foo([]) : 任意
>类型别名 :=> 任意
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>[] : 未定[]

var b = foo([], 1);          // string
>b : 任意
>类型别名 :=> 任意
>foo([], 1) : 任意
>类型别名 :=> 任意
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>[] : 未定[]
>1 : 1

var c = foo([], 1, 2);       // boolean
>c : 任意
>类型别名 :=> 任意
>foo([], 1, 2) : 任意
>类型别名 :=> 任意
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>[] : 未定[]
>1 : 1
>2 : 2

var d = foo([], 1, true);    // boolean (with error)
>d : 任意
>类型别名 :=> 任意
>foo([], 1, true) : 任意
>类型别名 :=> 任意
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>[] : 未定[]
>1 : 1
>true : 为真
>类型别名 :=> 为真

var e = foo([], 1, "2");     // {}
>e : 任意
>类型别名 :=> 任意
>foo([], 1, "2") : 任意
>类型别名 :=> 任意
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>[] : 未定[]
>1 : 1
>"2" : "2"

var f = foo([], 1, 2, 3);    // any (with error)
>f : 任意
>类型别名 :=> 任意
>foo([], 1, 2, 3) : 任意
>类型别名 :=> 任意
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>[] : 未定[]
>1 : 1
>2 : 2
>3 : 3

var u = foo ``;              // number
>u : 数字
>类型别名 :=> 数字
>foo `` : 数字
>类型别名 :=> 数字
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>`` : ""

var v = foo `${1}`;          // string
>v : 文字
>类型别名 :=> 文字
>foo `${1}` : 文字
>类型别名 :=> 文字
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>`${1}` : 文字
>类型别名 :=> 文字
>1 : 1

var w = foo `${1}${2}`;      // boolean
>w : 真假
>类型别名 :=> 真假
>foo `${1}${2}` : 真假
>类型别名 :=> 真假
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>`${1}${2}` : 文字
>类型别名 :=> 文字
>1 : 1
>2 : 2

var x = foo `${1}${true}`;   // boolean (with error)
>x : 任意
>类型别名 :=> 任意
>foo `${1}${true}` : 任意
>类型别名 :=> 任意
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>`${1}${true}` : 文字
>类型别名 :=> 文字
>1 : 1
>true : 为真
>类型别名 :=> 为真

var y = foo `${1}${"2"}`;    // {}
>y : {}
>foo `${1}${"2"}` : {}
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>`${1}${"2"}` : 文字
>类型别名 :=> 文字
>1 : 1
>"2" : "2"

var z = foo `${1}${2}${3}`;  // any (with error)
>z : 任意
>类型别名 :=> 任意
>foo `${1}${2}${3}` : 任意
>类型别名 :=> 任意
>foo : { (strs: TemplateStringsArray): 数字; (strs: TemplateStringsArray, x: 数字): 文字; (strs: TemplateStringsArray, x: 数字, y: 数字): 真假; (strs: TemplateStringsArray, x: 数字, y: 文字): {}; }
>`${1}${2}${3}` : 文字
>类型别名 :=> 文字
>1 : 1
>2 : 2
>3 : 3

