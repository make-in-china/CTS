=== tests/cases/compiler/collisionRestParameterFunction.ts ===
// Functions
function f1(_i: number, ...restParameters) { //_i is error
>f1 : (_i: 数字, ...restParameters: 任意[]) => 无值
>_i : 数字
>类型别名 :=> 数字
>restParameters : 任意[]

    var _i = 10; // no error
>_i : 数字
>类型别名 :=> 数字
>10 : 10
}
function f1NoError(_i: number) { // no error
>f1NoError : (_i: 数字) => 无值
>_i : 数字
>类型别名 :=> 数字

    var _i = 10; // no error
>_i : 数字
>类型别名 :=> 数字
>10 : 10
}

declare function f2(_i: number, ...restParameters); // no error - no code gen
>f2 : (_i: 数字, ...restParameters: 任意[]) => 任意
>_i : 数字
>类型别名 :=> 数字
>restParameters : 任意[]

declare function f2NoError(_i: number); // no error
>f2NoError : (_i: 数字) => 任意
>_i : 数字
>类型别名 :=> 数字

function f3(...restParameters) {
>f3 : (...restParameters: 任意[]) => 无值
>restParameters : 任意[]

    var _i = 10; // no error
>_i : 数字
>类型别名 :=> 数字
>10 : 10
}
function f3NoError() {
>f3NoError : () => 无值

    var _i = 10; // no error
>_i : 数字
>类型别名 :=> 数字
>10 : 10
}

function f4(_i: number, ...rest); // no codegen no error
>f4 : { (_i: 数字, ...rest: 任意[]): 任意; (_i: 文字, ...rest: 任意[]): 任意; }
>_i : 数字
>类型别名 :=> 数字
>rest : 任意[]

function f4(_i: string, ...rest); // no codegen no error
>f4 : { (_i: 数字, ...rest: 任意[]): 任意; (_i: 文字, ...rest: 任意[]): 任意; }
>_i : 文字
>类型别名 :=> 文字
>rest : 任意[]

function f4(_i: any, ...rest) { // error
>f4 : { (_i: 数字, ...rest: 任意[]): 任意; (_i: 文字, ...rest: 任意[]): 任意; }
>_i : 任意
>类型别名 :=> 任意
>rest : 任意[]
}

function f4NoError(_i: number); // no error
>f4NoError : { (_i: 数字): 任意; (_i: 文字): 任意; }
>_i : 数字
>类型别名 :=> 数字

function f4NoError(_i: string); // no error
>f4NoError : { (_i: 数字): 任意; (_i: 文字): 任意; }
>_i : 文字
>类型别名 :=> 文字

function f4NoError(_i: any) { // no error
>f4NoError : { (_i: 数字): 任意; (_i: 文字): 任意; }
>_i : 任意
>类型别名 :=> 任意
}

declare function f5(_i: number, ...rest); // no codegen no error
>f5 : { (_i: 数字, ...rest: 任意[]): 任意; (_i: 文字, ...rest: 任意[]): 任意; }
>_i : 数字
>类型别名 :=> 数字
>rest : 任意[]

declare function f5(_i: string, ...rest); // no codegen no error
>f5 : { (_i: 数字, ...rest: 任意[]): 任意; (_i: 文字, ...rest: 任意[]): 任意; }
>_i : 文字
>类型别名 :=> 文字
>rest : 任意[]

declare function f6(_i: number); // no codegen no error
>f6 : { (_i: 数字): 任意; (_i: 文字): 任意; }
>_i : 数字
>类型别名 :=> 数字

declare function f6(_i: string); // no codegen no error
>f6 : { (_i: 数字): 任意; (_i: 文字): 任意; }
>_i : 文字
>类型别名 :=> 文字

