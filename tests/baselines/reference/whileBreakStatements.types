=== tests/cases/conformance/statements/breakStatements/whileBreakStatements.ts ===
while(true) {
>true : 为真
>类型别名 :=> 为真

    break;
} 

ONE:
>ONE : 任意
>类型别名 :=> 任意

while (true) {
>true : 为真
>类型别名 :=> 为真

    break ONE;
>ONE : 任意
>类型别名 :=> 任意
}

TWO:
>TWO : 任意
>类型别名 :=> 任意

THREE:
>THREE : 任意
>类型别名 :=> 任意

while (true) {
>true : 为真
>类型别名 :=> 为真

    break THREE;
>THREE : 任意
>类型别名 :=> 任意
}

FOUR:
>FOUR : 任意
>类型别名 :=> 任意

while (true) {
>true : 为真
>类型别名 :=> 为真

    FIVE:
>FIVE : 任意
>类型别名 :=> 任意

    while (true) {
>true : 为真
>类型别名 :=> 为真

        break FOUR;
>FOUR : 任意
>类型别名 :=> 任意
    }
}

while (true) {
>true : 为真
>类型别名 :=> 为真

    SIX:
>SIX : 任意
>类型别名 :=> 任意

    while (true)
>true : 为真
>类型别名 :=> 为真

        break SIX;
>SIX : 任意
>类型别名 :=> 任意
}

SEVEN:
>SEVEN : 任意
>类型别名 :=> 任意

while (true)
>true : 为真
>类型别名 :=> 为真

    while (true)
>true : 为真
>类型别名 :=> 为真

        while (true)
>true : 为真
>类型别名 :=> 为真

            break SEVEN;
>SEVEN : 任意
>类型别名 :=> 任意

EIGHT:
>EIGHT : 任意
>类型别名 :=> 任意

while (true) {
>true : 为真
>类型别名 :=> 为真

    var fn = function () { }
>fn : () => 无值
>function () { } : () => 无值

    break EIGHT;
>EIGHT : 任意
>类型别名 :=> 任意
}

