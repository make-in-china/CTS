=== tests/cases/conformance/emitter/es2017/forAwait/file1.ts ===
async function f1() {
>f1 : () => Promise<无值>

    let y: any;
>y : 任意
>类型别名 :=> 任意

    for await (const x of y) {
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
    }
}
=== tests/cases/conformance/emitter/es2017/forAwait/file2.ts ===
async function f2() {
>f2 : () => Promise<无值>

    let x: any, y: any;
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

    for await (x of y) {
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
    }
}
=== tests/cases/conformance/emitter/es2017/forAwait/file3.ts ===
async function* f3() {
>f3 : () => AsyncIterableIterator<任意>

    let y: any;
>y : 任意
>类型别名 :=> 任意

    for await (const x of y) {
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
    }
}
=== tests/cases/conformance/emitter/es2017/forAwait/file4.ts ===
async function* f4() {
>f4 : () => AsyncIterableIterator<任意>

    let x: any, y: any;
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

    for await (x of y) {
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
    }
}
