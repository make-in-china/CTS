=== tests/cases/compiler/noImplicitAnyDestructuringVarDeclaration.ts ===
var [a], {b}, c, d; // error
>a : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意
>c : any
>类型别名 :=> 任意
>d : any
>类型别名 :=> 任意

var [a1 = undefined], {b1 = null}, c1 = undefined, d1 = null; // error
>a1 : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>b1 : any
>类型别名 :=> 任意
>null : null
>类型别名 :=> 空值
>c1 : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>d1 : any
>类型别名 :=> 任意
>null : null
>类型别名 :=> 空值

var [a2]: [any], {b2}: { b2: any }, c2: any, d2: any;
>a2 : any
>类型别名 :=> 任意
>b2 : any
>类型别名 :=> 任意
>b2 : any
>类型别名 :=> 任意
>c2 : any
>类型别名 :=> 任意
>d2 : any
>类型别名 :=> 任意

var {b3}: { b3 }, c3: { b3 }; // error in type instead
>b3 : any
>类型别名 :=> 任意
>b3 : any
>类型别名 :=> 任意
>c3 : { b3: any; }
>b3 : any
>类型别名 :=> 任意

var [a4] = [undefined], {b4} = { b4: null }, c4 = undefined, d4 = null; // error
>a4 : any
>类型别名 :=> 任意
>[undefined] : [undefined]
>undefined : undefined
>类型别名 :=> 未定
>b4 : any
>类型别名 :=> 任意
>{ b4: null } : { b4: null; }
>b4 : null
>类型别名 :=> 空值
>null : null
>类型别名 :=> 空值
>c4 : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>d4 : any
>类型别名 :=> 任意
>null : null
>类型别名 :=> 空值

var [a5 = undefined] = []; // error
>a5 : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>[] : [undefined]

