=== tests/cases/conformance/types/members/objectTypeWithStringNamedNumericProperty.ts ===
// string named numeric properties are legal and distinct when indexed by string values
// indexed numerically the value is converted to a number
// no errors expected below

class C {
>C : C

    "0.1": void;
    ".1": Object;
>Object : Object

    "1": number;
    "1.": string;
    "1..": boolean;
    "1.0": Date;
>Date : Date

    "-1.0": RegExp;
>RegExp : RegExp

    "-1": Date;
>Date : Date
}

var c: C;
>c : C
>C : C

var r1 = c['0.1'];
>r1 : 无值
>类型别名 :=> 无值
>c['0.1'] : 无值
>类型别名 :=> 无值
>c : C
>'0.1' : "0.1"

var r2 = c['.1'];
>r2 : Object
>c['.1'] : Object
>c : C
>'.1' : ".1"

var r3 = c['1'];
>r3 : 数字
>类型别名 :=> 数字
>c['1'] : 数字
>类型别名 :=> 数字
>c : C
>'1' : "1"

var r3 = c[1];
>r3 : 数字
>类型别名 :=> 数字
>c[1] : 数字
>类型别名 :=> 数字
>c : C
>1 : 1

var r4 = c['1.'];
>r4 : 文字
>类型别名 :=> 文字
>c['1.'] : 文字
>类型别名 :=> 文字
>c : C
>'1.' : "1."

var r3 = c[1.]; // same as indexing by 1 when done numerically
>r3 : 数字
>类型别名 :=> 数字
>c[1.] : 数字
>类型别名 :=> 数字
>c : C
>1. : 1

var r5 = c['1..'];
>r5 : 真假
>类型别名 :=> 真假
>c['1..'] : 真假
>类型别名 :=> 真假
>c : C
>'1..' : "1.."

var r6 = c['1.0'];
>r6 : Date
>c['1.0'] : Date
>c : C
>'1.0' : "1.0"

var r3 = c[1.0]; // same as indexing by 1 when done numerically
>r3 : 数字
>类型别名 :=> 数字
>c[1.0] : 数字
>类型别名 :=> 数字
>c : C
>1.0 : 1

// BUG 823822
var r7 = i[-1];
>r7 : Date
>i[-1] : Date
>i : I
>-1 : -1
>1 : 1

var r7 = i[-1.0];
>r7 : Date
>i[-1.0] : Date
>i : I
>-1.0 : -1
>1.0 : 1

var r8 = i["-1.0"];
>r8 : RegExp
>i["-1.0"] : RegExp
>i : I
>"-1.0" : "-1.0"

var r9 = i["-1"];
>r9 : Date
>i["-1"] : Date
>i : I
>"-1" : "-1"

var r10 = i[0x1]
>r10 : 数字
>类型别名 :=> 数字
>i[0x1] : 数字
>类型别名 :=> 数字
>i : I
>0x1 : 1

var r11 = i[-0x1]
>r11 : Date
>i[-0x1] : Date
>i : I
>-0x1 : -1
>0x1 : 1

var r12 = i[01]
>r12 : 数字
>类型别名 :=> 数字
>i[01] : 数字
>类型别名 :=> 数字
>i : I
>01 : 1

var r13 = i[-01]
>r13 : Date
>i[-01] : Date
>i : I
>-01 : -1
>01 : 1

interface I {
>I : I

    "0.1": void;
    ".1": Object;
>Object : Object

    "1": number;
    "1.": string;
    "1..": boolean;
    "1.0": Date;
>Date : Date

    "-1.0": RegExp;
>RegExp : RegExp

    "-1": Date;
>Date : Date
}

var i: I;
>i : I
>I : I

var r1 = i['0.1'];
>r1 : 无值
>类型别名 :=> 无值
>i['0.1'] : 无值
>类型别名 :=> 无值
>i : I
>'0.1' : "0.1"

var r2 = i['.1'];
>r2 : Object
>i['.1'] : Object
>i : I
>'.1' : ".1"

var r3 = i['1'];
>r3 : 数字
>类型别名 :=> 数字
>i['1'] : 数字
>类型别名 :=> 数字
>i : I
>'1' : "1"

var r3 = c[1];
>r3 : 数字
>类型别名 :=> 数字
>c[1] : 数字
>类型别名 :=> 数字
>c : C
>1 : 1

var r4 = i['1.'];
>r4 : 文字
>类型别名 :=> 文字
>i['1.'] : 文字
>类型别名 :=> 文字
>i : I
>'1.' : "1."

var r3 = c[1.]; // same as indexing by 1 when done numerically
>r3 : 数字
>类型别名 :=> 数字
>c[1.] : 数字
>类型别名 :=> 数字
>c : C
>1. : 1

var r5 = i['1..'];
>r5 : 真假
>类型别名 :=> 真假
>i['1..'] : 真假
>类型别名 :=> 真假
>i : I
>'1..' : "1.."

var r6 = i['1.0'];
>r6 : Date
>i['1.0'] : Date
>i : I
>'1.0' : "1.0"

var r3 = c[1.0]; // same as indexing by 1 when done numerically
>r3 : 数字
>类型别名 :=> 数字
>c[1.0] : 数字
>类型别名 :=> 数字
>c : C
>1.0 : 1

// BUG 823822
var r7 = i[-1]; 
>r7 : Date
>i[-1] : Date
>i : I
>-1 : -1
>1 : 1

var r7 = i[-1.0]; 
>r7 : Date
>i[-1.0] : Date
>i : I
>-1.0 : -1
>1.0 : 1

var r8 = i["-1.0"];
>r8 : RegExp
>i["-1.0"] : RegExp
>i : I
>"-1.0" : "-1.0"

var r9 = i["-1"];
>r9 : Date
>i["-1"] : Date
>i : I
>"-1" : "-1"

var r10 = i[0x1]
>r10 : 数字
>类型别名 :=> 数字
>i[0x1] : 数字
>类型别名 :=> 数字
>i : I
>0x1 : 1

var r11 = i[-0x1]
>r11 : Date
>i[-0x1] : Date
>i : I
>-0x1 : -1
>0x1 : 1

var r12 = i[01]
>r12 : 数字
>类型别名 :=> 数字
>i[01] : 数字
>类型别名 :=> 数字
>i : I
>01 : 1

var r13 = i[-01]
>r13 : Date
>i[-01] : Date
>i : I
>-01 : -1
>01 : 1

var a: {
>a : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": Date; }

    "0.1": void;
    ".1": Object;
>Object : Object

    "1": number;
    "1.": string;
    "1..": boolean;
    "1.0": Date;
>Date : Date

    "-1.0": RegExp;
>RegExp : RegExp

    "-1": Date;
>Date : Date
}

var r1 = a['0.1'];
>r1 : 无值
>类型别名 :=> 无值
>a['0.1'] : 无值
>类型别名 :=> 无值
>a : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": Date; }
>'0.1' : "0.1"

var r2 = a['.1'];
>r2 : Object
>a['.1'] : Object
>a : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": Date; }
>'.1' : ".1"

var r3 = a['1'];
>r3 : 数字
>类型别名 :=> 数字
>a['1'] : 数字
>类型别名 :=> 数字
>a : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": Date; }
>'1' : "1"

var r3 = c[1];
>r3 : 数字
>类型别名 :=> 数字
>c[1] : 数字
>类型别名 :=> 数字
>c : C
>1 : 1

var r4 = a['1.'];
>r4 : 文字
>类型别名 :=> 文字
>a['1.'] : 文字
>类型别名 :=> 文字
>a : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": Date; }
>'1.' : "1."

var r3 = c[1.]; // same as indexing by 1 when done numerically
>r3 : 数字
>类型别名 :=> 数字
>c[1.] : 数字
>类型别名 :=> 数字
>c : C
>1. : 1

var r5 = a['1..'];
>r5 : 真假
>类型别名 :=> 真假
>a['1..'] : 真假
>类型别名 :=> 真假
>a : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": Date; }
>'1..' : "1.."

var r6 = a['1.0'];
>r6 : Date
>a['1.0'] : Date
>a : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": Date; }
>'1.0' : "1.0"

var r3 = c[1.0]; // same as indexing by 1 when done numerically
>r3 : 数字
>类型别名 :=> 数字
>c[1.0] : 数字
>类型别名 :=> 数字
>c : C
>1.0 : 1

// BUG 823822
var r7 = i[-1];
>r7 : Date
>i[-1] : Date
>i : I
>-1 : -1
>1 : 1

var r7 = i[-1.0];
>r7 : Date
>i[-1.0] : Date
>i : I
>-1.0 : -1
>1.0 : 1

var r8 = i["-1.0"];
>r8 : RegExp
>i["-1.0"] : RegExp
>i : I
>"-1.0" : "-1.0"

var r9 = i["-1"];
>r9 : Date
>i["-1"] : Date
>i : I
>"-1" : "-1"

var r10 = i[0x1]
>r10 : 数字
>类型别名 :=> 数字
>i[0x1] : 数字
>类型别名 :=> 数字
>i : I
>0x1 : 1

var r11 = i[-0x1]
>r11 : Date
>i[-0x1] : Date
>i : I
>-0x1 : -1
>0x1 : 1

var r12 = i[01]
>r12 : 数字
>类型别名 :=> 数字
>i[01] : 数字
>类型别名 :=> 数字
>i : I
>01 : 1

var r13 = i[-01]
>r13 : Date
>i[-01] : Date
>i : I
>-01 : -1
>01 : 1

var b = {
>b : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": DateConstructor; }
>{    "0.1": <void>null,    ".1": new Object(),    "1": 1,    "1.": "",    "1..": true,    "1.0": new Date(),    "-1.0": /123/,    "-1": Date} : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": DateConstructor; }

    "0.1": <void>null,
><void>null : 无值
>类型别名 :=> 无值
>null : 空值
>类型别名 :=> 空值

    ".1": new Object(),
>new Object() : Object
>Object : ObjectConstructor

    "1": 1,
>1 : 1

    "1.": "",
>"" : ""

    "1..": true,
>true : 为真
>类型别名 :=> 为真

    "1.0": new Date(),
>new Date() : Date
>Date : DateConstructor

    "-1.0": /123/,
>/123/ : RegExp

    "-1": Date
>Date : DateConstructor

};

var r1 = b['0.1'];
>r1 : 无值
>类型别名 :=> 无值
>b['0.1'] : 无值
>类型别名 :=> 无值
>b : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": DateConstructor; }
>'0.1' : "0.1"

var r2 = b['.1'];
>r2 : Object
>b['.1'] : Object
>b : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": DateConstructor; }
>'.1' : ".1"

var r3 = b['1'];
>r3 : 数字
>类型别名 :=> 数字
>b['1'] : 数字
>类型别名 :=> 数字
>b : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": DateConstructor; }
>'1' : "1"

var r3 = c[1];
>r3 : 数字
>类型别名 :=> 数字
>c[1] : 数字
>类型别名 :=> 数字
>c : C
>1 : 1

var r4 = b['1.'];
>r4 : 文字
>类型别名 :=> 文字
>b['1.'] : 文字
>类型别名 :=> 文字
>b : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": DateConstructor; }
>'1.' : "1."

var r3 = c[1.]; // same as indexing by 1 when done numerically
>r3 : 数字
>类型别名 :=> 数字
>c[1.] : 数字
>类型别名 :=> 数字
>c : C
>1. : 1

var r5 = b['1..'];
>r5 : 真假
>类型别名 :=> 真假
>b['1..'] : 真假
>类型别名 :=> 真假
>b : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": DateConstructor; }
>'1..' : "1.."

var r6 = b['1.0'];
>r6 : Date
>b['1.0'] : Date
>b : { "0.1": 无值; ".1": Object; "1": 数字; "1.": 文字; "1..": 真假; "1.0": Date; "-1.0": RegExp; "-1": DateConstructor; }
>'1.0' : "1.0"

var r3 = c[1.0]; // same as indexing by 1 when done numerically
>r3 : 数字
>类型别名 :=> 数字
>c[1.0] : 数字
>类型别名 :=> 数字
>c : C
>1.0 : 1

// BUG 823822
var r7 = i[-1];
>r7 : Date
>i[-1] : Date
>i : I
>-1 : -1
>1 : 1

var r7 = i[-1.0];
>r7 : Date
>i[-1.0] : Date
>i : I
>-1.0 : -1
>1.0 : 1

var r8 = i["-1.0"];
>r8 : RegExp
>i["-1.0"] : RegExp
>i : I
>"-1.0" : "-1.0"

var r9 = i["-1"];
>r9 : Date
>i["-1"] : Date
>i : I
>"-1" : "-1"

var r10 = i[0x1]
>r10 : 数字
>类型别名 :=> 数字
>i[0x1] : 数字
>类型别名 :=> 数字
>i : I
>0x1 : 1

var r11 = i[-0x1]
>r11 : Date
>i[-0x1] : Date
>i : I
>-0x1 : -1
>0x1 : 1

var r12 = i[01]
>r12 : 数字
>类型别名 :=> 数字
>i[01] : 数字
>类型别名 :=> 数字
>i : I
>01 : 1

var r13 = i[-01]
>r13 : Date
>i[-01] : Date
>i : I
>-01 : -1
>01 : 1

