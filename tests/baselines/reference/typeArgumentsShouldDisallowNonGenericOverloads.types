=== tests/cases/compiler/typeArgumentsShouldDisallowNonGenericOverloads.ts ===
function foo(a: string): string;
>foo : { (a: string): string; <T>(a: T): number; }
>a : string
>类型别名 :=> 文字

function foo<T>(a: T): number;
>foo : { (a: string): string; <T>(a: T): number; }
>T : T
>a : T
>T : T

function foo(a: any): any {
>foo : { (a: string): string; <T>(a: T): number; }
>a : any
>类型别名 :=> 任意

    return "hi";
>"hi" : "hi"
}

var x: number = foo<string>("hi"); // return type should be 'number'
>x : number
>类型别名 :=> 数字
>foo<string>("hi") : number
>类型别名 :=> 数字
>foo : { (a: string): string; <T>(a: T): number; }
>"hi" : "hi"

var y: string = foo("hi"); // return type should be 'string'
>y : string
>类型别名 :=> 文字
>foo("hi") : string
>类型别名 :=> 文字
>foo : { (a: string): string; <T>(a: T): number; }
>"hi" : "hi"

var w: string = foo<string>("hi"); // should error
>w : string
>类型别名 :=> 文字
>foo<string>("hi") : number
>类型别名 :=> 数字
>foo : { (a: string): string; <T>(a: T): number; }
>"hi" : "hi"

var z: number = foo("hi"); // should error
>z : number
>类型别名 :=> 数字
>foo("hi") : string
>类型别名 :=> 文字
>foo : { (a: string): string; <T>(a: T): number; }
>"hi" : "hi"

