tests/cases/compiler/capturedLetConstInLoop9_ES6.ts(38,19): error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
tests/cases/compiler/capturedLetConstInLoop9_ES6.ts(48,23): error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
tests/cases/compiler/capturedLetConstInLoop9_ES6.ts(49,17): error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
tests/cases/compiler/capturedLetConstInLoop9_ES6.ts(67,23): error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
tests/cases/compiler/capturedLetConstInLoop9_ES6.ts(68,17): error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
tests/cases/compiler/capturedLetConstInLoop9_ES6.ts(91,19): error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
tests/cases/compiler/capturedLetConstInLoop9_ES6.ts(113,23): error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
tests/cases/compiler/capturedLetConstInLoop9_ES6.ts(133,19): error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.


==== tests/cases/compiler/capturedLetConstInLoop9_ES6.ts (8 errors) ====
    for (let x = 0; x < 1; ++x) {
        let x;
        (function() { return x });
        {
            let x;
            (function() { return x });
        }
    
        try { }
        catch (e) {
            let x;
            (function() { return x });
        }
    
        switch (x) {
            case 1:
                let x;
                (function() { return x });
               break;
        }
        
        while (1 == 1) {
            let x;
            (function() { return x });
        }
        
        class A {
            m() {
                return x + 1;
            }
        }
    }
    
    declare function use(a: any);
    
    function foo() {
        l0:
        for (let a of []) {
                      ~~
!!! error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
            
            if (a === 1) {
                break;
            }
            
            if (a === 2) {
                break l0;
            }
            
            for (let b of []) {
                          ~~
!!! error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
                var [{x, y:z}] = [{x:1, y:2}];
                    ~~~~~~~~~~
!!! error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
                if (b === 1) {
                    break;
                }
                
                
                if (b === 2) {
                    break l0;
                }
                
                l1:
                if (b === 3) {
                    break l1;
                }
                
                return 50;
            }
    
            for (let b of []) {
                          ~~
!!! error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
                var [{x1, y:z1}] = [{x1:1, y:arguments.length}];
                    ~~~~~~~~~~~~
!!! error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
                if (b === 1) {
                    break;
                }
                
                if (b === 2) {
                    break l0;
                }
                () => b
                return 100;
            }
    
            
            () => a;
        }
        
        use(x);
        use(z);
        use(x1);
        use(z1);
    }
    
    function foo2() {
        for (let x of []) {
                      ~~
!!! error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
            if (x === 1) {
                break;
            }
            else if (x === 2) {
                continue;
            }
            
            while (1 === 1) {
                if (x) {
                    break;
                }
                else {
                    continue;
                }
            }
            
            switch(x) {
                case 1: break;
                case 2: continue;
            }
            
            for (let y of []) {
                          ~~
!!! error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
                switch(y) {
                    case 1: break;
                    case 2: continue;
                }
            }
        }
    }
    
    class C {
        constructor(private N: number) { }
        foo() {
            for (let i = 0; i < 100; i++) {
                let f = () => this.N * i;
            }
        }
    }
    
    function foo3 () {
        let x = arguments.length;
        for (let y of []) {
                      ~~
!!! error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
            let z = arguments.length;
            (function() { return y + z + arguments.length; });
        }
    }