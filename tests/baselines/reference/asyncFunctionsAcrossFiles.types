=== tests/cases/compiler/a.ts ===
import { b } from './b';
>b : { f: () => Promise<无值>; }

export const a = {
>a : { f: () => Promise<无值>; }
>{    f: async () => {        await b.f();    }} : { f: () => Promise<无值>; }

    f: async () => {
>f : () => Promise<无值>
>async () => {        await b.f();    } : () => Promise<无值>

        await b.f();
>await b.f() : 无值
>类型别名 :=> 无值
>b.f() : Promise<无值>
>b.f : () => Promise<无值>
>b : { f: () => Promise<无值>; }
>f : () => Promise<无值>
    }
};
=== tests/cases/compiler/b.ts ===
import { a } from './a';
>a : { f: () => Promise<无值>; }

export const b = {
>b : { f: () => Promise<无值>; }
>{    f: async () => {        await a.f();    }} : { f: () => Promise<无值>; }

    f: async () => {
>f : () => Promise<无值>
>async () => {        await a.f();    } : () => Promise<无值>

        await a.f();
>await a.f() : 无值
>类型别名 :=> 无值
>a.f() : Promise<无值>
>a.f : () => Promise<无值>
>a : { f: () => Promise<无值>; }
>f : () => Promise<无值>
    }
};
