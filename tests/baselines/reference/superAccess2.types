=== tests/cases/compiler/superAccess2.ts ===
class P {
>P : P

    x() { }
>x : () => void

    static y() { }
>y : () => void
}

class Q extends P {
>Q : Q
>P : P

    xx = super;
>xx : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
>super : P
> : any
>类型别名 :=> 任意

    static yy = super; // error for static initializer accessing super
>yy : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
> : any
>类型别名 :=> 任意

    // Super is not allowed in constructor args
    constructor(public z = super, zz = super, zzz = () => super) {
>z : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
> : any
>类型别名 :=> 任意
>zz : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
> : any
>类型别名 :=> 任意
>zzz : () => any
>() => super : () => any
>super : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
> : any
>类型别名 :=> 任意

        super();
>super() : void
>类型别名 :=> 无值
>super : typeof P
    }

    foo(zz = super) {
>foo : (zz?: any) => void
>zz : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
>super : P
> : any
>类型别名 :=> 任意

        super.x();
>super.x() : void
>类型别名 :=> 无值
>super.x : () => void
>super : P
>x : () => void

        super.y(); // error
>super.y() : any
>类型别名 :=> 任意
>super.y : any
>类型别名 :=> 任意
>super : P
>y : any
>类型别名 :=> 任意
    }

    static bar(zz = super) {
>bar : (zz?: any) => void
>zz : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
>super : typeof P
> : any
>类型别名 :=> 任意

        super.x(); // error
>super.x() : any
>类型别名 :=> 任意
>super.x : any
>类型别名 :=> 任意
>super : typeof P
>x : any
>类型别名 :=> 任意

        super.y();
>super.y() : void
>类型别名 :=> 无值
>super.y : () => void
>super : typeof P
>y : () => void
    }
}
