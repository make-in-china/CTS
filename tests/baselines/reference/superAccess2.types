=== tests/cases/compiler/superAccess2.ts ===
class P {
>P : P

    x() { }
>x : () => 无值

    static y() { }
>y : () => 无值
}

class Q extends P {
>Q : Q
>P : P

    xx = super;
>xx : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意
>super : P
> : 任意
>类型别名 :=> 任意

    static yy = super; // error for static initializer accessing super
>yy : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意

    // Super is not allowed in constructor args
    constructor(public z = super, zz = super, zzz = () => super) {
>z : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意
>zz : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意
>zzz : () => 任意
>() => super : () => 任意
>super : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意

        super();
>super() : 无值
>类型别名 :=> 无值
>super : 类为 P
    }

    foo(zz = super) {
>foo : (zz?: 任意) => 无值
>zz : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意
>super : P
> : 任意
>类型别名 :=> 任意

        super.x();
>super.x() : 无值
>类型别名 :=> 无值
>super.x : () => 无值
>super : P
>x : () => 无值

        super.y(); // error
>super.y() : 任意
>类型别名 :=> 任意
>super.y : 任意
>类型别名 :=> 任意
>super : P
>y : 任意
>类型别名 :=> 任意
    }

    static bar(zz = super) {
>bar : (zz?: 任意) => 无值
>zz : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意
>super : 类为 P
> : 任意
>类型别名 :=> 任意

        super.x(); // error
>super.x() : 任意
>类型别名 :=> 任意
>super.x : 任意
>类型别名 :=> 任意
>super : 类为 P
>x : 任意
>类型别名 :=> 任意

        super.y();
>super.y() : 无值
>类型别名 :=> 无值
>super.y : () => 无值
>super : 类为 P
>y : () => 无值
    }
}
