=== tests/cases/compiler/multipleInheritance.ts ===
class B1 {
>B1 : B1

    public x;
>x : 任意
>类型别名 :=> 任意
}

class B2 {
>B2 : B2

    public x;
>x : 任意
>类型别名 :=> 任意
}

class C extends B1, B2 { // duplicate member
>C : C
>B1 : B1
>B2 : B1
}

class D1 extends B1 {
>D1 : D1
>B1 : B1
}

class D2 extends B2 {
>D2 : D2
>B2 : B2
}

class E extends D1, D2 { // nope, duplicate member
>E : E
>D1 : D1
>D2 : D1
}

class N {
>N : N

    public y:number;
>y : 数字
>类型别名 :=> 数字
}

class ND extends N { // any is assignable to number
>ND : ND
>N : N

    public y;
>y : 任意
>类型别名 :=> 任意
}

class Good {
>Good : Good

    public f:() => number = function() { return 0; }
>f : () => 数字
>function() { return 0; } : () => 数字
>0 : 0

    public g() { return 0; }
>g : () => 数字
>0 : 0
}

class Baad extends Good {
>Baad : Baad
>Good : Good

    public f(): number { return 0; }
>f : () => 数字
>0 : 0

    public g(n:number) { return 0; }
>g : (n: 数字) => 数字
>n : 数字
>类型别名 :=> 数字
>0 : 0
}

