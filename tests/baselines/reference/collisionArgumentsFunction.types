=== tests/cases/compiler/collisionArgumentsFunction.ts ===
// Functions
function f1(arguments: number, ...restParameters) { //arguments is error
>f1 : (arguments: 数字, ...restParameters: 任意[]) => 无值
>arguments : 数字
>类型别名 :=> 数字
>restParameters : 任意[]

    var arguments = 10; // no error
>arguments : 数字
>类型别名 :=> 数字
>10 : 10
}
function f12(i: number, ...arguments) { //arguments is error
>f12 : (i: 数字, ...arguments: 任意[]) => 无值
>i : 数字
>类型别名 :=> 数字
>arguments : 任意[]

    var arguments: any[]; // no error
>arguments : 任意[]
}
function f1NoError(arguments: number) { // no error
>f1NoError : (arguments: 数字) => 无值
>arguments : 数字
>类型别名 :=> 数字

    var arguments = 10; // no error
>arguments : 数字
>类型别名 :=> 数字
>10 : 10
}

declare function f2(i: number, ...arguments); // no error - no code gen
>f2 : (i: 数字, ...arguments: 任意[]) => 任意
>i : 数字
>类型别名 :=> 数字
>arguments : 任意[]

declare function f21(arguments: number, ...rest); // no error - no code gen
>f21 : (arguments: 数字, ...rest: 任意[]) => 任意
>arguments : 数字
>类型别名 :=> 数字
>rest : 任意[]

declare function f2NoError(arguments: number); // no error
>f2NoError : (arguments: 数字) => 任意
>arguments : 数字
>类型别名 :=> 数字

function f3(...restParameters) {
>f3 : (...restParameters: 任意[]) => 无值
>restParameters : 任意[]

    var arguments = 10; // no error
>arguments : 数字
>类型别名 :=> 数字
>10 : 10
}
function f3NoError() {
>f3NoError : () => 无值

    var arguments = 10; // no error
>arguments : 数字
>类型别名 :=> 数字
>10 : 10
}

function f4(arguments: number, ...rest); // no codegen no error
>f4 : { (arguments: 数字, ...rest: 任意[]): 任意; (arguments: 文字, ...rest: 任意[]): 任意; }
>arguments : 数字
>类型别名 :=> 数字
>rest : 任意[]

function f4(arguments: string, ...rest); // no codegen no error
>f4 : { (arguments: 数字, ...rest: 任意[]): 任意; (arguments: 文字, ...rest: 任意[]): 任意; }
>arguments : 文字
>类型别名 :=> 文字
>rest : 任意[]

function f4(arguments: any, ...rest) { // error
>f4 : { (arguments: 数字, ...rest: 任意[]): 任意; (arguments: 文字, ...rest: 任意[]): 任意; }
>arguments : 任意
>类型别名 :=> 任意
>rest : 任意[]

    var arguments: any; // No error
>arguments : 任意
>类型别名 :=> 任意
}
function f42(i: number, ...arguments); // no codegen no error
>f42 : { (i: 数字, ...arguments: 任意[]): 任意; (i: 文字, ...arguments: 任意[]): 任意; }
>i : 数字
>类型别名 :=> 数字
>arguments : 任意[]

function f42(i: string, ...arguments); // no codegen no error
>f42 : { (i: 数字, ...arguments: 任意[]): 任意; (i: 文字, ...arguments: 任意[]): 任意; }
>i : 文字
>类型别名 :=> 文字
>arguments : 任意[]

function f42(i: any, ...arguments) { // error
>f42 : { (i: 数字, ...arguments: 任意[]): 任意; (i: 文字, ...arguments: 任意[]): 任意; }
>i : 任意
>类型别名 :=> 任意
>arguments : 任意[]

    var arguments: any[]; // No error
>arguments : 任意[]
}
function f4NoError(arguments: number); // no error
>f4NoError : { (arguments: 数字): 任意; (arguments: 文字): 任意; }
>arguments : 数字
>类型别名 :=> 数字

function f4NoError(arguments: string); // no error
>f4NoError : { (arguments: 数字): 任意; (arguments: 文字): 任意; }
>arguments : 文字
>类型别名 :=> 文字

function f4NoError(arguments: any) { // no error
>f4NoError : { (arguments: 数字): 任意; (arguments: 文字): 任意; }
>arguments : 任意
>类型别名 :=> 任意

    var arguments: any; // No error
>arguments : 任意
>类型别名 :=> 任意
}

declare function f5(arguments: number, ...rest); // no codegen no error
>f5 : { (arguments: 数字, ...rest: 任意[]): 任意; (arguments: 文字, ...rest: 任意[]): 任意; }
>arguments : 数字
>类型别名 :=> 数字
>rest : 任意[]

declare function f5(arguments: string, ...rest); // no codegen no error
>f5 : { (arguments: 数字, ...rest: 任意[]): 任意; (arguments: 文字, ...rest: 任意[]): 任意; }
>arguments : 文字
>类型别名 :=> 文字
>rest : 任意[]

declare function f52(i: number, ...arguments); // no codegen no error
>f52 : { (i: 数字, ...arguments: 任意[]): 任意; (i: 文字, ...arguments: 任意[]): 任意; }
>i : 数字
>类型别名 :=> 数字
>arguments : 任意[]

declare function f52(i: string, ...arguments); // no codegen no error
>f52 : { (i: 数字, ...arguments: 任意[]): 任意; (i: 文字, ...arguments: 任意[]): 任意; }
>i : 文字
>类型别名 :=> 文字
>arguments : 任意[]

declare function f6(arguments: number); // no codegen no error
>f6 : { (arguments: 数字): 任意; (arguments: 文字): 任意; }
>arguments : 数字
>类型别名 :=> 数字

declare function f6(arguments: string); // no codegen no error
>f6 : { (arguments: 数字): 任意; (arguments: 文字): 任意; }
>arguments : 文字
>类型别名 :=> 文字

