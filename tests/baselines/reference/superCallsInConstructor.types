=== tests/cases/compiler/superCallsInConstructor.ts ===
class C {
>C : C

    foo() {}
>foo : () => 无值

    bar() {}
>bar : () => 无值
}

class Base {
>Base : Base

    x: string;
>x : 文字
>类型别名 :=> 文字
}
 
class Derived extends Base {
>Derived : Derived
>Base : Base

    constructor() {
        with(new C()) {
>new C() : C
>C : 类为 C

            foo();
>foo() : 任意
>类型别名 :=> 任意
>foo : 任意
>类型别名 :=> 任意

            super();
>super() : 任意
>类型别名 :=> 任意
>super : 任意
>类型别名 :=> 任意

            bar();
>bar() : 任意
>类型别名 :=> 任意
>bar : 任意
>类型别名 :=> 任意
        }

        try {} catch(e) { super(); }
>e : 任意
>类型别名 :=> 任意
>super() : 无值
>类型别名 :=> 无值
>super : 类为 Base
    }
}
