=== tests/cases/conformance/classes/propertyMemberDeclarations/memberFunctionDeclarations/staticFactory1.ts ===
class Base {
>Base : Base

    foo() { return 1; }
>foo : () => 数字
>1 : 1

    static create() {
>create : () => Base

        return new this();
>new this() : Base
>this : 类为 Base
    }
}

class Derived extends Base {
>Derived : Derived
>Base : Base

    foo() { return 2; }
>foo : () => 数字
>2 : 2
}
var d = Derived.create(); 
>d : Base
>Derived.create() : Base
>Derived.create : () => Base
>Derived : 类为 Derived
>create : () => Base

d.foo();  
>d.foo() : 数字
>类型别名 :=> 数字
>d.foo : () => 数字
>d : Base
>foo : () => 数字

