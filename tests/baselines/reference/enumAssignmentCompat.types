=== tests/cases/compiler/enumAssignmentCompat.ts ===
module W {
>W : 类为 W

    export class D { }
>D : D
}

enum W {
>W : W

    a, b, c,
>a : W.a
>b : W.b
>c : W.c

}


interface WStatic {
>WStatic : WStatic

    a: W;
>a : W
>W : W

    b: W;
>b : W
>W : W

    c: W;
>c : W
>W : W

}



var x: WStatic = W;
>x : WStatic
>WStatic : WStatic
>W : 类为 W

var y: typeof W = W;
>y : 类为 W
>W : 类为 W
>W : 类为 W

var z: number = W; // error
>z : 数字
>类型别名 :=> 数字
>W : 类为 W

var a: number = W.a;
>a : 数字
>类型别名 :=> 数字
>W.a : W.a
>W : 类为 W
>a : W.a

var b: typeof W = W.a; // error
>b : 类为 W
>W : 类为 W
>W.a : W.a
>W : 类为 W
>a : W.a

var c: typeof W.a = W.a;
>c : W.a
>W.a : W.a
>W : 类为 W
>a : W.a
>W.a : W.a
>W : 类为 W
>a : W.a

var d: typeof W = 3; // error
>d : 类为 W
>W : 类为 W
>3 : 3

var e: typeof W.a = 4;
>e : W.a
>W.a : W.a
>W : 类为 W
>a : W.a
>4 : 4

var f: WStatic = W.a; // error
>f : WStatic
>WStatic : WStatic
>W.a : W.a
>W : 类为 W
>a : W.a

var g: WStatic = 5; // error
>g : WStatic
>WStatic : WStatic
>5 : 5

var h: W = 3;
>h : W
>W : W
>3 : 3

var i: W = W.a;
>i : W
>W : W
>W.a : W.a
>W : 类为 W
>a : W.a

i = W.a;
>i = W.a : W.a
>i : W
>W.a : W.a
>W : 类为 W
>a : W.a

W.D;
>W.D : 类为 W.D
>W : 类为 W
>D : 类为 W.D

var p: W.D;
>p : W.D
>W : 任意
>类型别名 :=> 任意
>D : W.D

