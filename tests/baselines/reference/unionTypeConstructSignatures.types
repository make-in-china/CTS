=== tests/cases/conformance/types/union/unionTypeConstructSignatures.ts ===
var numOrDate: number | Date;
>numOrDate : 数字 | Date
>Date : Date

var strOrBoolean: string | boolean;
>strOrBoolean : 文字 | 真假

var strOrNum: string | number;
>strOrNum : 文字 | 数字

// If each type in U has construct signatures and the sets of construct signatures are identical ignoring return types, 
// U has the same set of construct signatures, but with return types that are unions of the return types of the respective construct signatures from each type in U.
var unionOfDifferentReturnType: { new (a: number): number; } | { new (a: number): Date; };
>unionOfDifferentReturnType : (新建 (a: 数字) => 数字) | (新建 (a: 数字) => Date)
>a : 数字
>类型别名 :=> 数字
>a : 数字
>类型别名 :=> 数字
>Date : Date

numOrDate = new unionOfDifferentReturnType(10);
>numOrDate = new unionOfDifferentReturnType(10) : 数字 | Date
>numOrDate : 数字 | Date
>new unionOfDifferentReturnType(10) : 数字 | Date
>unionOfDifferentReturnType : (新建 (a: 数字) => 数字) | (新建 (a: 数字) => Date)
>10 : 10

strOrBoolean = new unionOfDifferentReturnType("hello"); // error 
>strOrBoolean = new unionOfDifferentReturnType("hello") : 任意
>类型别名 :=> 任意
>strOrBoolean : 文字 | 真假
>new unionOfDifferentReturnType("hello") : 任意
>类型别名 :=> 任意
>unionOfDifferentReturnType : (新建 (a: 数字) => 数字) | (新建 (a: 数字) => Date)
>"hello" : "hello"

new unionOfDifferentReturnType1(true); // error in type of parameter
>new unionOfDifferentReturnType1(true) : 任意
>类型别名 :=> 任意
>unionOfDifferentReturnType1 : { 新建 (a: 数字): 数字; 新建 (a: 文字): 文字; } | { 新建 (a: 数字): Date; 新建 (a: 文字): 真假; }
>true : 为真
>类型别名 :=> 为真

var unionOfDifferentReturnType1: { new (a: number): number; new (a: string): string; } | { new (a: number): Date; new (a: string): boolean; };
>unionOfDifferentReturnType1 : { 新建 (a: 数字): 数字; 新建 (a: 文字): 文字; } | { 新建 (a: 数字): Date; 新建 (a: 文字): 真假; }
>a : 数字
>类型别名 :=> 数字
>a : 文字
>类型别名 :=> 文字
>a : 数字
>类型别名 :=> 数字
>Date : Date
>a : 文字
>类型别名 :=> 文字

numOrDate = new unionOfDifferentReturnType1(10);
>numOrDate = new unionOfDifferentReturnType1(10) : 数字 | Date
>numOrDate : 数字 | Date
>new unionOfDifferentReturnType1(10) : 数字 | Date
>unionOfDifferentReturnType1 : { 新建 (a: 数字): 数字; 新建 (a: 文字): 文字; } | { 新建 (a: 数字): Date; 新建 (a: 文字): 真假; }
>10 : 10

strOrBoolean = new unionOfDifferentReturnType1("hello");
>strOrBoolean = new unionOfDifferentReturnType1("hello") : 文字 | 真假
>strOrBoolean : 文字 | 真假
>new unionOfDifferentReturnType1("hello") : 文字 | 真假
>unionOfDifferentReturnType1 : { 新建 (a: 数字): 数字; 新建 (a: 文字): 文字; } | { 新建 (a: 数字): Date; 新建 (a: 文字): 真假; }
>"hello" : "hello"

new unionOfDifferentReturnType1(true); // error in type of parameter
>new unionOfDifferentReturnType1(true) : 任意
>类型别名 :=> 任意
>unionOfDifferentReturnType1 : { 新建 (a: 数字): 数字; 新建 (a: 文字): 文字; } | { 新建 (a: 数字): Date; 新建 (a: 文字): 真假; }
>true : 为真
>类型别名 :=> 为真

new unionOfDifferentReturnType1(); // error missing parameter
>new unionOfDifferentReturnType1() : 任意
>类型别名 :=> 任意
>unionOfDifferentReturnType1 : { 新建 (a: 数字): 数字; 新建 (a: 文字): 文字; } | { 新建 (a: 数字): Date; 新建 (a: 文字): 真假; }

var unionOfDifferentParameterTypes: { new (a: number): number; } | { new (a: string): Date; };
>unionOfDifferentParameterTypes : (新建 (a: 数字) => 数字) | (新建 (a: 文字) => Date)
>a : 数字
>类型别名 :=> 数字
>a : 文字
>类型别名 :=> 文字
>Date : Date

new unionOfDifferentParameterTypes(10);// error - no call signatures
>new unionOfDifferentParameterTypes(10) : 任意
>类型别名 :=> 任意
>unionOfDifferentParameterTypes : (新建 (a: 数字) => 数字) | (新建 (a: 文字) => Date)
>10 : 10

new unionOfDifferentParameterTypes("hello");// error - no call signatures
>new unionOfDifferentParameterTypes("hello") : 任意
>类型别名 :=> 任意
>unionOfDifferentParameterTypes : (新建 (a: 数字) => 数字) | (新建 (a: 文字) => Date)
>"hello" : "hello"

new unionOfDifferentParameterTypes();// error - no call signatures
>new unionOfDifferentParameterTypes() : 任意
>类型别名 :=> 任意
>unionOfDifferentParameterTypes : (新建 (a: 数字) => 数字) | (新建 (a: 文字) => Date)

var unionOfDifferentNumberOfSignatures: { new (a: number): number; } | { new (a: number): Date; new (a: string): boolean; };
>unionOfDifferentNumberOfSignatures : (新建 (a: 数字) => 数字) | { 新建 (a: 数字): Date; 新建 (a: 文字): 真假; }
>a : 数字
>类型别名 :=> 数字
>a : 数字
>类型别名 :=> 数字
>Date : Date
>a : 文字
>类型别名 :=> 文字

new unionOfDifferentNumberOfSignatures(); // error - no call signatures
>new unionOfDifferentNumberOfSignatures() : 任意
>类型别名 :=> 任意
>unionOfDifferentNumberOfSignatures : (新建 (a: 数字) => 数字) | { 新建 (a: 数字): Date; 新建 (a: 文字): 真假; }

new unionOfDifferentNumberOfSignatures(10); // error - no call signatures
>new unionOfDifferentNumberOfSignatures(10) : 数字 | Date
>unionOfDifferentNumberOfSignatures : (新建 (a: 数字) => 数字) | { 新建 (a: 数字): Date; 新建 (a: 文字): 真假; }
>10 : 10

new unionOfDifferentNumberOfSignatures("hello"); // error - no call signatures
>new unionOfDifferentNumberOfSignatures("hello") : 任意
>类型别名 :=> 任意
>unionOfDifferentNumberOfSignatures : (新建 (a: 数字) => 数字) | { 新建 (a: 数字): Date; 新建 (a: 文字): 真假; }
>"hello" : "hello"

var unionWithDifferentParameterCount: { new (a: string): string; } | { new (a: string, b: number): number; };
>unionWithDifferentParameterCount : (新建 (a: 文字) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>a : 文字
>类型别名 :=> 文字
>a : 文字
>类型别名 :=> 文字
>b : 数字
>类型别名 :=> 数字

new unionWithDifferentParameterCount();// no  call signature
>new unionWithDifferentParameterCount() : 任意
>类型别名 :=> 任意
>unionWithDifferentParameterCount : (新建 (a: 文字) => 文字) | (新建 (a: 文字, b: 数字) => 数字)

new unionWithDifferentParameterCount("hello");// no  call signature
>new unionWithDifferentParameterCount("hello") : 任意
>类型别名 :=> 任意
>unionWithDifferentParameterCount : (新建 (a: 文字) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>"hello" : "hello"

new unionWithDifferentParameterCount("hello", 10);// no  call signature
>new unionWithDifferentParameterCount("hello", 10) : 任意
>类型别名 :=> 任意
>unionWithDifferentParameterCount : (新建 (a: 文字) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>"hello" : "hello"
>10 : 10

var unionWithOptionalParameter1: { new (a: string, b?: number): string; } | { new (a: string, b?: number): number; };
>unionWithOptionalParameter1 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字, b?: 数字) => 数字)
>a : 文字
>类型别名 :=> 文字
>b : 数字
>类型别名 :=> 数字
>a : 文字
>类型别名 :=> 文字
>b : 数字
>类型别名 :=> 数字

strOrNum = new unionWithOptionalParameter1('hello');
>strOrNum = new unionWithOptionalParameter1('hello') : 文字 | 数字
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter1('hello') : 文字 | 数字
>unionWithOptionalParameter1 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字, b?: 数字) => 数字)
>'hello' : "hello"

strOrNum = new unionWithOptionalParameter1('hello', 10);
>strOrNum = new unionWithOptionalParameter1('hello', 10) : 文字 | 数字
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter1('hello', 10) : 文字 | 数字
>unionWithOptionalParameter1 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字, b?: 数字) => 数字)
>'hello' : "hello"
>10 : 10

strOrNum = new unionWithOptionalParameter1('hello', "hello"); // error in parameter type
>strOrNum = new unionWithOptionalParameter1('hello', "hello") : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter1('hello', "hello") : 任意
>类型别名 :=> 任意
>unionWithOptionalParameter1 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字, b?: 数字) => 数字)
>'hello' : "hello"
>"hello" : "hello"

strOrNum = new unionWithOptionalParameter1(); // error
>strOrNum = new unionWithOptionalParameter1() : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter1() : 任意
>类型别名 :=> 任意
>unionWithOptionalParameter1 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字, b?: 数字) => 数字)

var unionWithOptionalParameter2: { new (a: string, b?: number): string; } | { new (a: string, b: number): number };
>unionWithOptionalParameter2 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>a : 文字
>类型别名 :=> 文字
>b : 数字
>类型别名 :=> 数字
>a : 文字
>类型别名 :=> 文字
>b : 数字
>类型别名 :=> 数字

strOrNum = new unionWithOptionalParameter2('hello'); // error no call signature
>strOrNum = new unionWithOptionalParameter2('hello') : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter2('hello') : 任意
>类型别名 :=> 任意
>unionWithOptionalParameter2 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>'hello' : "hello"

strOrNum = new unionWithOptionalParameter2('hello', 10); // error no call signature
>strOrNum = new unionWithOptionalParameter2('hello', 10) : 文字 | 数字
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter2('hello', 10) : 文字 | 数字
>unionWithOptionalParameter2 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>'hello' : "hello"
>10 : 10

strOrNum = new unionWithOptionalParameter2('hello', "hello"); // error no call signature
>strOrNum = new unionWithOptionalParameter2('hello', "hello") : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter2('hello', "hello") : 任意
>类型别名 :=> 任意
>unionWithOptionalParameter2 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>'hello' : "hello"
>"hello" : "hello"

strOrNum = new unionWithOptionalParameter2(); // error no call signature
>strOrNum = new unionWithOptionalParameter2() : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter2() : 任意
>类型别名 :=> 任意
>unionWithOptionalParameter2 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字, b: 数字) => 数字)

var unionWithOptionalParameter3: { new (a: string, b?: number): string; } | { new (a: string): number; };
>unionWithOptionalParameter3 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字) => 数字)
>a : 文字
>类型别名 :=> 文字
>b : 数字
>类型别名 :=> 数字
>a : 文字
>类型别名 :=> 文字

strOrNum = new unionWithOptionalParameter3('hello'); // error no call signature
>strOrNum = new unionWithOptionalParameter3('hello') : 文字 | 数字
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter3('hello') : 文字 | 数字
>unionWithOptionalParameter3 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字) => 数字)
>'hello' : "hello"

strOrNum = new unionWithOptionalParameter3('hello', 10); // error no call signature
>strOrNum = new unionWithOptionalParameter3('hello', 10) : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter3('hello', 10) : 任意
>类型别名 :=> 任意
>unionWithOptionalParameter3 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字) => 数字)
>'hello' : "hello"
>10 : 10

strOrNum = new unionWithOptionalParameter3('hello', "hello"); // error no call signature
>strOrNum = new unionWithOptionalParameter3('hello', "hello") : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter3('hello', "hello") : 任意
>类型别名 :=> 任意
>unionWithOptionalParameter3 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字) => 数字)
>'hello' : "hello"
>"hello" : "hello"

strOrNum = new unionWithOptionalParameter3(); // error no call signature
>strOrNum = new unionWithOptionalParameter3() : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithOptionalParameter3() : 任意
>类型别名 :=> 任意
>unionWithOptionalParameter3 : (新建 (a: 文字, b?: 数字) => 文字) | (新建 (a: 文字) => 数字)

var unionWithRestParameter1: { new (a: string, ...b: number[]): string; } | { new (a: string, ...b: number[]): number };
>unionWithRestParameter1 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, ...b: 数字[]) => 数字)
>a : 文字
>类型别名 :=> 文字
>b : 数字[]
>a : 文字
>类型别名 :=> 文字
>b : 数字[]

strOrNum = new unionWithRestParameter1('hello');
>strOrNum = new unionWithRestParameter1('hello') : 文字 | 数字
>strOrNum : 文字 | 数字
>new unionWithRestParameter1('hello') : 文字 | 数字
>unionWithRestParameter1 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, ...b: 数字[]) => 数字)
>'hello' : "hello"

strOrNum = new unionWithRestParameter1('hello', 10);
>strOrNum = new unionWithRestParameter1('hello', 10) : 文字 | 数字
>strOrNum : 文字 | 数字
>new unionWithRestParameter1('hello', 10) : 文字 | 数字
>unionWithRestParameter1 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, ...b: 数字[]) => 数字)
>'hello' : "hello"
>10 : 10

strOrNum = new unionWithRestParameter1('hello', 10, 11);
>strOrNum = new unionWithRestParameter1('hello', 10, 11) : 文字 | 数字
>strOrNum : 文字 | 数字
>new unionWithRestParameter1('hello', 10, 11) : 文字 | 数字
>unionWithRestParameter1 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, ...b: 数字[]) => 数字)
>'hello' : "hello"
>10 : 10
>11 : 11

strOrNum = new unionWithRestParameter1('hello', "hello"); // error in parameter type
>strOrNum = new unionWithRestParameter1('hello', "hello") : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithRestParameter1('hello', "hello") : 任意
>类型别名 :=> 任意
>unionWithRestParameter1 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, ...b: 数字[]) => 数字)
>'hello' : "hello"
>"hello" : "hello"

strOrNum = new unionWithRestParameter1(); // error
>strOrNum = new unionWithRestParameter1() : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithRestParameter1() : 任意
>类型别名 :=> 任意
>unionWithRestParameter1 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, ...b: 数字[]) => 数字)

var unionWithRestParameter2: { new (a: string, ...b: number[]): string; } | { new (a: string, b: number): number };
>unionWithRestParameter2 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>a : 文字
>类型别名 :=> 文字
>b : 数字[]
>a : 文字
>类型别名 :=> 文字
>b : 数字
>类型别名 :=> 数字

strOrNum = new unionWithRestParameter2('hello'); // error no call signature
>strOrNum = new unionWithRestParameter2('hello') : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithRestParameter2('hello') : 任意
>类型别名 :=> 任意
>unionWithRestParameter2 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>'hello' : "hello"

strOrNum = new unionWithRestParameter2('hello', 10); // error no call signature
>strOrNum = new unionWithRestParameter2('hello', 10) : 文字 | 数字
>strOrNum : 文字 | 数字
>new unionWithRestParameter2('hello', 10) : 文字 | 数字
>unionWithRestParameter2 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>'hello' : "hello"
>10 : 10

strOrNum = new unionWithRestParameter2('hello', 10, 11); // error no call signature
>strOrNum = new unionWithRestParameter2('hello', 10, 11) : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithRestParameter2('hello', 10, 11) : 任意
>类型别名 :=> 任意
>unionWithRestParameter2 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>'hello' : "hello"
>10 : 10
>11 : 11

strOrNum = new unionWithRestParameter2('hello', "hello"); // error no call signature
>strOrNum = new unionWithRestParameter2('hello', "hello") : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithRestParameter2('hello', "hello") : 任意
>类型别名 :=> 任意
>unionWithRestParameter2 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, b: 数字) => 数字)
>'hello' : "hello"
>"hello" : "hello"

strOrNum = new unionWithRestParameter2(); // error no call signature
>strOrNum = new unionWithRestParameter2() : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithRestParameter2() : 任意
>类型别名 :=> 任意
>unionWithRestParameter2 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字, b: 数字) => 数字)

var unionWithRestParameter3: { new (a: string, ...b: number[]): string; } | { new (a: string): number };
>unionWithRestParameter3 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字) => 数字)
>a : 文字
>类型别名 :=> 文字
>b : 数字[]
>a : 文字
>类型别名 :=> 文字

strOrNum = new unionWithRestParameter3('hello'); // error no call signature
>strOrNum = new unionWithRestParameter3('hello') : 文字 | 数字
>strOrNum : 文字 | 数字
>new unionWithRestParameter3('hello') : 文字 | 数字
>unionWithRestParameter3 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字) => 数字)
>'hello' : "hello"

strOrNum = new unionWithRestParameter3('hello', 10); // error no call signature
>strOrNum = new unionWithRestParameter3('hello', 10) : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithRestParameter3('hello', 10) : 任意
>类型别名 :=> 任意
>unionWithRestParameter3 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字) => 数字)
>'hello' : "hello"
>10 : 10

strOrNum = new unionWithRestParameter3('hello', 10, 11); // error no call signature
>strOrNum = new unionWithRestParameter3('hello', 10, 11) : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithRestParameter3('hello', 10, 11) : 任意
>类型别名 :=> 任意
>unionWithRestParameter3 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字) => 数字)
>'hello' : "hello"
>10 : 10
>11 : 11

strOrNum = new unionWithRestParameter3('hello', "hello"); // error no call signature
>strOrNum = new unionWithRestParameter3('hello', "hello") : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithRestParameter3('hello', "hello") : 任意
>类型别名 :=> 任意
>unionWithRestParameter3 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字) => 数字)
>'hello' : "hello"
>"hello" : "hello"

strOrNum = new unionWithRestParameter3(); // error no call signature
>strOrNum = new unionWithRestParameter3() : 任意
>类型别名 :=> 任意
>strOrNum : 文字 | 数字
>new unionWithRestParameter3() : 任意
>类型别名 :=> 任意
>unionWithRestParameter3 : (新建 (a: 文字, ...b: 数字[]) => 文字) | (新建 (a: 文字) => 数字)

