=== tests/cases/conformance/types/spread/spreadUnion2.ts ===
declare const undefinedUnion: { a: number } | undefined;
>undefinedUnion : { a: 数字; } | 未定
>a : 数字
>类型别名 :=> 数字

declare const nullUnion: { b: number } | null;
>nullUnion : { b: 数字; } | 空值
>b : 数字
>类型别名 :=> 数字
>null : 空值
>类型别名 :=> 空值

var o1: {} | { a: number };
>o1 : {} | { a: 数字; }
>a : 数字
>类型别名 :=> 数字

var o1 = { ...undefinedUnion };
>o1 : {} | { a: 数字; }
>{ ...undefinedUnion } : {} | { a: 数字; }
>undefinedUnion : { a: 数字; } | 未定

var o2: {} | { b: number };
>o2 : {} | { b: 数字; }
>b : 数字
>类型别名 :=> 数字

var o2 = { ...nullUnion };
>o2 : {} | { b: 数字; }
>{ ...nullUnion } : {} | { b: 数字; }
>nullUnion : { b: 数字; } | 空值

var o3: {} | { a: number } | { b: number } | { a: number, b: number };
>o3 : {} | { a: 数字; } | { b: 数字; } | { a: 数字; b: 数字; }
>a : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>a : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

var o3 = { ...undefinedUnion, ...nullUnion };
>o3 : {} | { a: 数字; } | { b: 数字; } | { a: 数字; b: 数字; }
>{ ...undefinedUnion, ...nullUnion } : {} | { b: 数字; } | { a: 数字; } | { b: 数字; a: 数字; }
>undefinedUnion : { a: 数字; } | 未定
>nullUnion : { b: 数字; } | 空值

var o3 = { ...nullUnion, ...undefinedUnion };
>o3 : {} | { a: 数字; } | { b: 数字; } | { a: 数字; b: 数字; }
>{ ...nullUnion, ...undefinedUnion } : {} | { a: 数字; } | { b: 数字; } | { a: 数字; b: 数字; }
>nullUnion : { b: 数字; } | 空值
>undefinedUnion : { a: 数字; } | 未定

var o4: {} | { a: number };
>o4 : {} | { a: 数字; }
>a : 数字
>类型别名 :=> 数字

var o4 = { ...undefinedUnion, ...undefinedUnion };
>o4 : {} | { a: 数字; }
>{ ...undefinedUnion, ...undefinedUnion } : {} | { a: 数字; } | { a: 数字; } | { a: 数字; }
>undefinedUnion : { a: 数字; } | 未定
>undefinedUnion : { a: 数字; } | 未定

var o5: {} | { b: number };
>o5 : {} | { b: 数字; }
>b : 数字
>类型别名 :=> 数字

var o5 = { ...nullUnion, ...nullUnion };
>o5 : {} | { b: 数字; }
>{ ...nullUnion, ...nullUnion } : {} | { b: 数字; } | { b: 数字; } | { b: 数字; }
>nullUnion : { b: 数字; } | 空值
>nullUnion : { b: 数字; } | 空值


