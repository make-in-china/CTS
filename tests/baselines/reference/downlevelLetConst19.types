=== tests/cases/compiler/downlevelLetConst19.ts ===
'use strict'
>'use strict' : "use strict"

declare function use(a: any);
>use : (a: 任意) => 任意
>a : 任意
>类型别名 :=> 任意

var x;
>x : 任意
>类型别名 :=> 任意

function a() {
>a : () => 无值
  {
    let x;
>x : 任意
>类型别名 :=> 任意

    use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意

    function b() {
>b : () => 无值
        {
            let x;
>x : 任意
>类型别名 :=> 任意

            use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
        }
        use(x);
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
    }
  }
  use(x)
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
}
use(x)
>use(x) : 任意
>类型别名 :=> 任意
>use : (a: 任意) => 任意
>x : 任意
>类型别名 :=> 任意

