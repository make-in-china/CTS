=== tests/cases/conformance/types/union/unionTypeCallSignatures2.ts ===
interface A {
>A : A

    (x: number): number;
>x : 数字
>类型别名 :=> 数字

    (x: string, y?: string): boolean;
>x : 文字
>类型别名 :=> 文字
>y : 文字
>类型别名 :=> 文字

    (x: Date): void;
>x : Date
>Date : Date

    <T>(x: T[]): T[];
>T : T
>x : T[]
>T : T
>T : T
}

interface B {
>B : B

    (x: number): number;
>x : 数字
>类型别名 :=> 数字

    (x: string): string;
>x : 文字
>类型别名 :=> 文字

    (x: Date): void;
>x : Date
>Date : Date

    <T>(x: T[]): T[];
>T : T
>x : T[]
>T : T
>T : T
}

interface C {
>C : C

    (x: string, ...y: string[]): number;
>x : 文字
>类型别名 :=> 文字
>y : 文字[]

    (x: number, s?: string): number;
>x : 数字
>类型别名 :=> 数字
>s : 文字
>类型别名 :=> 文字

    <T>(x: T[]): T[];
>T : T
>x : T[]
>T : T
>T : T
}

var f1: A | B | C;
>f1 : A | B | C
>A : A
>B : B
>C : C

var n1 = f1(42);             // number
>n1 : 数字
>类型别名 :=> 数字
>f1(42) : 数字
>类型别名 :=> 数字
>f1 : A | B | C
>42 : 42

var s1 = f1("abc");          // boolean | string | number
>s1 : 文字 | 数字 | 真假
>f1("abc") : 文字 | 数字 | 真假
>f1 : A | B | C
>"abc" : "abc"

var a1 = f1([true, false]);  // boolean[]
>a1 : 真假[]
>f1([true, false]) : 真假[]
>f1 : A | B | C
>[true, false] : 真假[]
>true : 为真
>类型别名 :=> 为真
>false : 为假
>类型别名 :=> 为假

var f2: C | B | A;
>f2 : A | B | C
>C : C
>B : B
>A : A

var n2 = f2(42);             // number
>n2 : 数字
>类型别名 :=> 数字
>f2(42) : 数字
>类型别名 :=> 数字
>f2 : A | B | C
>42 : 42

var s2 = f2("abc");          // number | string | boolean
>s2 : 文字 | 数字 | 真假
>f2("abc") : 文字 | 数字 | 真假
>f2 : A | B | C
>"abc" : "abc"

var a2 = f2([true, false]);  // boolean[]
>a2 : 真假[]
>f2([true, false]) : 真假[]
>f2 : A | B | C
>[true, false] : 真假[]
>true : 为真
>类型别名 :=> 为真
>false : 为假
>类型别名 :=> 为假

var f3: B | A | C;
>f3 : A | B | C
>B : B
>A : A
>C : C

var n3 = f3(42);             // number
>n3 : 数字
>类型别名 :=> 数字
>f3(42) : 数字
>类型别名 :=> 数字
>f3 : A | B | C
>42 : 42

var s3 = f3("abc");          // string | boolean | number
>s3 : 文字 | 数字 | 真假
>f3("abc") : 文字 | 数字 | 真假
>f3 : A | B | C
>"abc" : "abc"

var a3 = f3([true, false]);  // boolean[]
>a3 : 真假[]
>f3([true, false]) : 真假[]
>f3 : A | B | C
>[true, false] : 真假[]
>true : 为真
>类型别名 :=> 为真
>false : 为假
>类型别名 :=> 为假


