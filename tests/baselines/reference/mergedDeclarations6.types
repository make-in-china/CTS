=== tests/cases/compiler/a.ts ===
export class A {
>A : A

    protected protected: any;
>protected : 任意
>类型别名 :=> 任意

    protected setProtected(val: any) {
>setProtected : (val: 任意) => 无值
>val : 任意
>类型别名 :=> 任意

        this.protected = val;
>this.protected = val : 任意
>类型别名 :=> 任意
>this.protected : 任意
>类型别名 :=> 任意
>this : 本体
>protected : 任意
>类型别名 :=> 任意
>val : 任意
>类型别名 :=> 任意
    }
}

=== tests/cases/compiler/b.ts ===
import {A} from './a';
>A : 类为 A

declare module "./a" {
    interface A { }
>A : A
}

export class B extends A {
>B : B
>A : A

    protected setProtected() {
>setProtected : () => 无值

    }
}
