=== tests/cases/conformance/expressions/typeGuards/typeGuardsInClassMethods.ts ===
// Note that type guards affect types of variables and parameters only and 
// have no effect on members of objects such as properties. 

// variables in global
var num: number;
>num : 数字
>类型别名 :=> 数字

var var1: string | number;
>var1 : 文字 | 数字

class C1 {
>C1 : C1

    constructor(param: string | number) {
>param : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables in function declaration
        var var2: string | number;
>var2 : 文字 | 数字

        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // parameters in function declaration
        num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
    }
    // Inside function declaration
    private p1(param: string | number) {
>p1 : (param: 文字 | 数字) => 无值
>param : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables in function declaration
        var var2: string | number;
>var2 : 文字 | 数字

        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // parameters in function declaration
        num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
    }
    // Inside function declaration
    p2(param: string | number) {
>p2 : (param: 文字 | 数字) => 无值
>param : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables in function declaration
        var var2: string | number;
>var2 : 文字 | 数字

        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // parameters in function declaration
        num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
    }
    // Inside function declaration
    private static s1(param: string | number) {
>s1 : (param: 文字 | 数字) => 无值
>param : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables in function declaration
        var var2: string | number;
>var2 : 文字 | 数字

        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // parameters in function declaration
        num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
    }
    // Inside function declaration
    static s2(param: string | number) {
>s2 : (param: 文字 | 数字) => 无值
>param : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables in function declaration
        var var2: string | number;
>var2 : 文字 | 数字

        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // parameters in function declaration
        num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
    }
}

