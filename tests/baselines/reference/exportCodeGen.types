=== tests/cases/conformance/internalModules/codeGeneration/exportCodeGen.ts ===
// should replace all refs to 'x' in the body,
// with fully qualified
module A {
>A : 类为 A

    export var x = 12;
>x : 数字
>类型别名 :=> 数字
>12 : 12

    function lt12() {
>lt12 : () => 真假

        return x < 12;
>x < 12 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>12 : 12
    }
} 

// should not fully qualify 'x'
module B {
>B : 类为 B

    var x = 12;
>x : 数字
>类型别名 :=> 数字
>12 : 12

    function lt12() {
>lt12 : () => 真假

        return x < 12;
>x < 12 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>12 : 12
    }
}

// not copied, since not exported
module C {
>C : 类为 C

    function no() {
>no : () => 真假

        return false;
>false : 为假
>类型别名 :=> 为假
    }
}

// copies, since exported
module D {
>D : 类为 D

    export function yes() {
>yes : () => 真假

        return true;
>true : 为真
>类型别名 :=> 为真
    }
}

// validate all exportable statements
module E {
>E : 类为 E

    export enum Color { Red }
>Color : Color
>Red : Color

    export function fn() { }
>fn : () => 无值

    export interface I { id: number }
>I : I
>id : 数字
>类型别名 :=> 数字

    export class C { name: string }
>C : C
>name : 文字
>类型别名 :=> 文字

    export module M {
>M : 类为 M

        export var x = 42;
>x : 数字
>类型别名 :=> 数字
>42 : 42
    }
}

// validate all exportable statements,
// which are not exported
module F {
>F : 类为 F

    enum Color { Red }
>Color : Color
>Red : Color

    function fn() { }
>fn : () => 无值

    interface I { id: number }
>I : I
>id : 数字
>类型别名 :=> 数字

    class C { name: string }
>C : C
>name : 文字
>类型别名 :=> 文字

    module M {
>M : 类为 M

        var x = 42;
>x : 数字
>类型别名 :=> 数字
>42 : 42
    }
}
