=== tests/cases/compiler/innerAliases.ts ===
module A {
>A : 类为 A

    export module B {
>B : 类为 B

        export module C {
>C : 类为 C

            export class Class1 {}
>Class1 : Class1
        }
    }
}

module D {
>D : 类为 D

    import inner = A.B.C; 
>inner : 类为 inner
>A : 类为 A
>B : 类为 A.B
>C : 类为 inner
   
    var c1 = new inner.Class1(); 
>c1 : inner.Class1
>new inner.Class1() : inner.Class1
>inner.Class1 : 类为 inner.Class1
>inner : 类为 inner
>Class1 : 类为 inner.Class1

    export module E { 
>E : 类为 E

        export class Class2 {}
>Class2 : Class2
    }
}

var c: D.inner.Class1;
>c : 任意
>类型别名 :=> 任意
>D : 任意
>类型别名 :=> 任意
>inner : 任意
>类型别名 :=> 任意
>Class1 : No type information available!

c = new D.inner.Class1();
>c = new D.inner.Class1() : 任意
>类型别名 :=> 任意
>c : 任意
>类型别名 :=> 任意
>new D.inner.Class1() : 任意
>类型别名 :=> 任意
>D.inner.Class1 : 任意
>类型别名 :=> 任意
>D.inner : 任意
>类型别名 :=> 任意
>D : 类为 D
>inner : 任意
>类型别名 :=> 任意
>Class1 : 任意
>类型别名 :=> 任意


