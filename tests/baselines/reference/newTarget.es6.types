=== tests/cases/conformance/es6/newTarget/newTarget.es6.ts ===
class A {
>A : A

    constructor() {
        const a = new.target;
>a : 类为 A
>new.target : 类为 A
>target : 任意
>类型别名 :=> 任意

        const b = () => new.target;
>b : () => 类为 A
>() => new.target : () => 类为 A
>new.target : 类为 A
>target : 任意
>类型别名 :=> 任意
    }
    static c = function () { return new.target; }
>c : () => 任意
>function () { return new.target; } : () => 任意
>new.target : () => 任意
>target : 任意
>类型别名 :=> 任意

    d = function () { return new.target; }
>d : () => 任意
>function () { return new.target; } : () => 任意
>new.target : () => 任意
>target : 任意
>类型别名 :=> 任意
}

class B extends A {
>B : B
>A : A

    constructor() {
        super();
>super() : 无值
>类型别名 :=> 无值
>super : 类为 A

        const e = new.target;
>e : 类为 B
>new.target : 类为 B
>target : 任意
>类型别名 :=> 任意

        const f = () => new.target;
>f : () => 类为 B
>() => new.target : () => 类为 B
>new.target : 类为 B
>target : 任意
>类型别名 :=> 任意
    }
}

function f1() {
>f1 : () => 无值

    const g = new.target;
>g : () => 无值
>new.target : () => 无值
>target : 任意
>类型别名 :=> 任意

    const h = () => new.target;
>h : () => () => 无值
>() => new.target : () => () => 无值
>new.target : () => 无值
>target : 任意
>类型别名 :=> 任意
}

const f2 = function () {
>f2 : () => 无值
>function () {    const i = new.target;    const j = () => new.target;} : () => 无值

    const i = new.target;
>i : () => 无值
>new.target : () => 无值
>target : 任意
>类型别名 :=> 任意

    const j = () => new.target;
>j : () => () => 无值
>() => new.target : () => () => 无值
>new.target : () => 无值
>target : 任意
>类型别名 :=> 任意
}

const O = {
>O : { k: () => 任意; }
>{    k: function () { return new.target; }} : { k: () => 任意; }

    k: function () { return new.target; }
>k : () => 任意
>function () { return new.target; } : () => 任意
>new.target : () => 任意
>target : 任意
>类型别名 :=> 任意

};


