=== tests/cases/compiler/super_inside-object-literal-getters-and-setters.ts ===
module ObjectLiteral {
>ObjectLiteral : typeof ObjectLiteral

    var ThisInObjectLiteral = {
>ThisInObjectLiteral : { _foo: string; foo: string; test: () => any; }
>{        _foo: '1',        get foo(): string {            return super._foo;        },        set foo(value: string) {            super._foo = value;        },        test: function () {            return super._foo;        }    } : { _foo: string; foo: string; test: () => any; }

        _foo: '1',
>_foo : string
>类型别名 :=> 文字
>'1' : "1"

        get foo(): string {
>foo : string
>类型别名 :=> 文字

            return super._foo;
>super._foo : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
>_foo : any
>类型别名 :=> 任意

        },
        set foo(value: string) {
>foo : string
>类型别名 :=> 文字
>value : string
>类型别名 :=> 文字

            super._foo = value;
>super._foo = value : string
>类型别名 :=> 文字
>super._foo : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
>_foo : any
>类型别名 :=> 任意
>value : string
>类型别名 :=> 文字

        },
        test: function () {
>test : () => any
>function () {            return super._foo;        } : () => any

            return super._foo;
>super._foo : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
>_foo : any
>类型别名 :=> 任意
        }
    }
}

class F { public test(): string { return ""; } }
>F : F
>test : () => string
>"" : ""

class SuperObjectTest extends F {
>SuperObjectTest : SuperObjectTest
>F : F

    public testing() {
>testing : () => void

        var test = {
>test : { readonly F: any; }
>{            get F() {                return super.test();            }        } : { readonly F: any; }

            get F() {
>F : any
>类型别名 :=> 任意

                return super.test();
>super.test() : any
>类型别名 :=> 任意
>super.test : any
>类型别名 :=> 任意
>super : any
>类型别名 :=> 任意
>test : any
>类型别名 :=> 任意
            }
        };
    }
}


