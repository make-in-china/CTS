=== tests/cases/conformance/internalModules/DeclarationMerging/ModuleAndEnumWithSameNameAndCommonRoot.ts ===
module enumdule {
>enumdule : 类为 enumdule

    export class Point {
>Point : Point

        constructor(public x: number, public y: number) { }
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字
    }
}

enum enumdule {
>enumdule : enumdule

    Red, Blue
>Red : enumdule.Red
>Blue : enumdule.Blue
}

var x: enumdule;
>x : enumdule
>enumdule : enumdule

var x = enumdule.Red;
>x : enumdule
>enumdule.Red : enumdule.Red
>enumdule : 类为 enumdule
>Red : enumdule.Red

var y: { x: number; y: number };
>y : { x: 数字; y: 数字; }
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

var y = new enumdule.Point(0, 0);
>y : { x: 数字; y: 数字; }
>new enumdule.Point(0, 0) : enumdule.Point
>enumdule.Point : 类为 enumdule.Point
>enumdule : 类为 enumdule
>Point : 类为 enumdule.Point
>0 : 0
>0 : 0

