=== tests/cases/conformance/types/primitives/enum/validEnumAssignments.ts ===
enum E {
>E : E

    A,
>A : E.A

    B
>B : E.B
}

var n: number;
>n : 数字
>类型别名 :=> 数字

var a: any;
>a : 任意
>类型别名 :=> 任意

var e: E;
>e : E
>E : E

n = e;
>n = e : E
>n : 数字
>类型别名 :=> 数字
>e : E

n = E.A;
>n = E.A : E.A
>n : 数字
>类型别名 :=> 数字
>E.A : E.A
>E : 类为 E
>A : E.A

a = n;
>a = n : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>n : 数字
>类型别名 :=> 数字

a = e;
>a = e : E
>a : 任意
>类型别名 :=> 任意
>e : E

a = E.A;
>a = E.A : E.A
>a : 任意
>类型别名 :=> 任意
>E.A : E.A
>E : 类为 E
>A : E.A

e = e;
>e = e : E
>e : E
>e : E

e = E.A;
>e = E.A : E.A
>e : E
>E.A : E.A
>E : 类为 E
>A : E.A

e = E.B;
>e = E.B : E.B
>e : E
>E.B : E.B
>E : 类为 E
>B : E.B

e = n;
>e = n : 数字
>类型别名 :=> 数字
>e : E
>n : 数字
>类型别名 :=> 数字

e = null;
>e = null : 空值
>类型别名 :=> 空值
>e : E
>null : 空值
>类型别名 :=> 空值

e = undefined;
>e = undefined : 未定
>类型别名 :=> 未定
>e : E
>undefined : 未定
>类型别名 :=> 未定

e = 1;
>e = 1 : 1
>e : E
>1 : 1

e = 1.;
>e = 1. : 1
>e : E
>1. : 1

e = 1.0;
>e = 1.0 : 1
>e : E
>1.0 : 1

e = -1;
>e = -1 : -1
>e : E
>-1 : -1
>1 : 1

