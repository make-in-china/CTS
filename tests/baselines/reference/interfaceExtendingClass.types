=== tests/cases/conformance/interfaces/interfacesExtendingClasses/interfaceExtendingClass.ts ===
class Foo {
>Foo : Foo

    x: string;
>x : 文字
>类型别名 :=> 文字

    y() { }
>y : () => 无值

    get Z() {
>Z : 数字
>类型别名 :=> 数字

        return 1;
>1 : 1
    }
    [x: string]: Object;
>x : 文字
>类型别名 :=> 文字
>Object : Object
}

interface I extends Foo {
>I : I
>Foo : Foo
}

var i: I;
>i : I
>I : I

var r1 = i.x;
>r1 : 文字
>类型别名 :=> 文字
>i.x : 文字
>类型别名 :=> 文字
>i : I
>x : 文字
>类型别名 :=> 文字

var r2 = i.y();
>r2 : 无值
>类型别名 :=> 无值
>i.y() : 无值
>类型别名 :=> 无值
>i.y : () => 无值
>i : I
>y : () => 无值

var r3 = i.Z;
>r3 : 数字
>类型别名 :=> 数字
>i.Z : 数字
>类型别名 :=> 数字
>i : I
>Z : 数字
>类型别名 :=> 数字

var f: Foo = i;
>f : Foo
>Foo : Foo
>i : I

i = f;
>i = f : Foo
>i : I
>f : Foo

