=== tests/cases/compiler/simpleArrowFunctionParameterReferencedInObjectLiteral1.ts ===
[].map(() => [].map(p => ({ X: p })));
>[].map(() => [].map(p => ({ X: p }))) : { X: 任意; }[][]
>[].map : <U>(callbackfn: (value: 任意, index: 数字, array: 任意[]) => U, thisArg?: 任意) => U[]
>[] : 未定[]
>map : <U>(callbackfn: (value: 任意, index: 数字, array: 任意[]) => U, thisArg?: 任意) => U[]
>() => [].map(p => ({ X: p })) : () => { X: 任意; }[]
>[].map(p => ({ X: p })) : { X: 任意; }[]
>[].map : <U>(callbackfn: (value: 任意, index: 数字, array: 任意[]) => U, thisArg?: 任意) => U[]
>[] : 未定[]
>map : <U>(callbackfn: (value: 任意, index: 数字, array: 任意[]) => U, thisArg?: 任意) => U[]
>p => ({ X: p }) : (p: 任意) => { X: 任意; }
>p : 任意
>类型别名 :=> 任意
>({ X: p }) : { X: 任意; }
>{ X: p } : { X: 任意; }
>X : 任意
>类型别名 :=> 任意
>p : 任意
>类型别名 :=> 任意

