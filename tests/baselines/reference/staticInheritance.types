=== tests/cases/compiler/staticInheritance.ts ===
function doThing(x: { n: string }) { }
>doThing : (x: { n: string; }) => void
>x : { n: string; }
>n : string
>类型别名 :=> 文字

class A {
>A : A

    static n: string;
>n : string
>类型别名 :=> 文字

    p = doThing(A); // OK
>p : void
>类型别名 :=> 无值
>doThing(A) : void
>类型别名 :=> 无值
>doThing : (x: { n: string; }) => void
>A : typeof A
}
class B extends A {
>B : B
>A : A

    p1 = doThing(A); // OK
>p1 : void
>类型别名 :=> 无值
>doThing(A) : void
>类型别名 :=> 无值
>doThing : (x: { n: string; }) => void
>A : typeof A

    p2 = doThing(B); // OK
>p2 : void
>类型别名 :=> 无值
>doThing(B) : void
>类型别名 :=> 无值
>doThing : (x: { n: string; }) => void
>B : typeof B
}
doThing(B); //OK
>doThing(B) : void
>类型别名 :=> 无值
>doThing : (x: { n: string; }) => void
>B : typeof B

