=== tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeObjectOnIndexSignature.ts ===
class Base {
>Base : Base

    public a: string;
>a : 文字
>类型别名 :=> 文字
}

class Derived extends Base {
>Derived : Derived
>Base : Base

    public b: string;
>b : 文字
>类型别名 :=> 文字
}

var a1: { [a: string]: string };
>a1 : { [a: 文字]: 文字; }
>a : 文字
>类型别名 :=> 文字

var b1: { [b: string]: string };
>b1 : { [b: 文字]: 文字; }
>b : 文字
>类型别名 :=> 文字

var a2: { [index: string]: Base };
>a2 : { [index: 文字]: Base; }
>index : 文字
>类型别名 :=> 文字
>Base : Base

var b2: { [index: string]: Derived };
>b2 : { [index: 文字]: Derived; }
>index : 文字
>类型别名 :=> 文字
>Derived : Derived

var a3: { [index: number]: string };
>a3 : { [index: 数字]: 文字; }
>index : 数字
>类型别名 :=> 数字

var b3: { [index: number]: string };
>b3 : { [index: 数字]: 文字; }
>index : 数字
>类型别名 :=> 数字

var a4: { [index: number]: Base };
>a4 : { [index: 数字]: Base; }
>index : 数字
>类型别名 :=> 数字
>Base : Base

var b4: { [index: string]: Derived };
>b4 : { [index: 文字]: Derived; }
>index : 文字
>类型别名 :=> 文字
>Derived : Derived

// operator <
var r1a1 = a1 < b1;
>r1a1 : 真假
>类型别名 :=> 真假
>a1 < b1 : 真假
>类型别名 :=> 真假
>a1 : { [a: 文字]: 文字; }
>b1 : { [b: 文字]: 文字; }

var r1a1 = a2 < b2;
>r1a1 : 真假
>类型别名 :=> 真假
>a2 < b2 : 真假
>类型别名 :=> 真假
>a2 : { [index: 文字]: Base; }
>b2 : { [index: 文字]: Derived; }

var r1a1 = a3 < b3;
>r1a1 : 真假
>类型别名 :=> 真假
>a3 < b3 : 真假
>类型别名 :=> 真假
>a3 : { [index: 数字]: 文字; }
>b3 : { [index: 数字]: 文字; }

var r1a1 = a4 < b4;
>r1a1 : 真假
>类型别名 :=> 真假
>a4 < b4 : 真假
>类型别名 :=> 真假
>a4 : { [index: 数字]: Base; }
>b4 : { [index: 文字]: Derived; }

var r1b1 = b1 < a1;
>r1b1 : 真假
>类型别名 :=> 真假
>b1 < a1 : 真假
>类型别名 :=> 真假
>b1 : { [b: 文字]: 文字; }
>a1 : { [a: 文字]: 文字; }

var r1b1 = b2 < a2;
>r1b1 : 真假
>类型别名 :=> 真假
>b2 < a2 : 真假
>类型别名 :=> 真假
>b2 : { [index: 文字]: Derived; }
>a2 : { [index: 文字]: Base; }

var r1b1 = b3 < a3;
>r1b1 : 真假
>类型别名 :=> 真假
>b3 < a3 : 真假
>类型别名 :=> 真假
>b3 : { [index: 数字]: 文字; }
>a3 : { [index: 数字]: 文字; }

var r1b1 = b4 < a4;
>r1b1 : 真假
>类型别名 :=> 真假
>b4 < a4 : 真假
>类型别名 :=> 真假
>b4 : { [index: 文字]: Derived; }
>a4 : { [index: 数字]: Base; }

// operator >
var r2a1 = a1 > b1;
>r2a1 : 真假
>类型别名 :=> 真假
>a1 > b1 : 真假
>类型别名 :=> 真假
>a1 : { [a: 文字]: 文字; }
>b1 : { [b: 文字]: 文字; }

var r2a1 = a2 > b2;
>r2a1 : 真假
>类型别名 :=> 真假
>a2 > b2 : 真假
>类型别名 :=> 真假
>a2 : { [index: 文字]: Base; }
>b2 : { [index: 文字]: Derived; }

var r2a1 = a3 > b3;
>r2a1 : 真假
>类型别名 :=> 真假
>a3 > b3 : 真假
>类型别名 :=> 真假
>a3 : { [index: 数字]: 文字; }
>b3 : { [index: 数字]: 文字; }

var r2a1 = a4 > b4;
>r2a1 : 真假
>类型别名 :=> 真假
>a4 > b4 : 真假
>类型别名 :=> 真假
>a4 : { [index: 数字]: Base; }
>b4 : { [index: 文字]: Derived; }

var r2b1 = b1 > a1;
>r2b1 : 真假
>类型别名 :=> 真假
>b1 > a1 : 真假
>类型别名 :=> 真假
>b1 : { [b: 文字]: 文字; }
>a1 : { [a: 文字]: 文字; }

var r2b1 = b2 > a2;
>r2b1 : 真假
>类型别名 :=> 真假
>b2 > a2 : 真假
>类型别名 :=> 真假
>b2 : { [index: 文字]: Derived; }
>a2 : { [index: 文字]: Base; }

var r2b1 = b3 > a3;
>r2b1 : 真假
>类型别名 :=> 真假
>b3 > a3 : 真假
>类型别名 :=> 真假
>b3 : { [index: 数字]: 文字; }
>a3 : { [index: 数字]: 文字; }

var r2b1 = b4 > a4;
>r2b1 : 真假
>类型别名 :=> 真假
>b4 > a4 : 真假
>类型别名 :=> 真假
>b4 : { [index: 文字]: Derived; }
>a4 : { [index: 数字]: Base; }

// operator <=
var r3a1 = a1 <= b1;
>r3a1 : 真假
>类型别名 :=> 真假
>a1 <= b1 : 真假
>类型别名 :=> 真假
>a1 : { [a: 文字]: 文字; }
>b1 : { [b: 文字]: 文字; }

var r3a1 = a2 <= b2;
>r3a1 : 真假
>类型别名 :=> 真假
>a2 <= b2 : 真假
>类型别名 :=> 真假
>a2 : { [index: 文字]: Base; }
>b2 : { [index: 文字]: Derived; }

var r3a1 = a3 <= b3;
>r3a1 : 真假
>类型别名 :=> 真假
>a3 <= b3 : 真假
>类型别名 :=> 真假
>a3 : { [index: 数字]: 文字; }
>b3 : { [index: 数字]: 文字; }

var r3a1 = a4 <= b4;
>r3a1 : 真假
>类型别名 :=> 真假
>a4 <= b4 : 真假
>类型别名 :=> 真假
>a4 : { [index: 数字]: Base; }
>b4 : { [index: 文字]: Derived; }

var r3b1 = b1 <= a1;
>r3b1 : 真假
>类型别名 :=> 真假
>b1 <= a1 : 真假
>类型别名 :=> 真假
>b1 : { [b: 文字]: 文字; }
>a1 : { [a: 文字]: 文字; }

var r3b1 = b2 <= a2;
>r3b1 : 真假
>类型别名 :=> 真假
>b2 <= a2 : 真假
>类型别名 :=> 真假
>b2 : { [index: 文字]: Derived; }
>a2 : { [index: 文字]: Base; }

var r3b1 = b3 <= a3;
>r3b1 : 真假
>类型别名 :=> 真假
>b3 <= a3 : 真假
>类型别名 :=> 真假
>b3 : { [index: 数字]: 文字; }
>a3 : { [index: 数字]: 文字; }

var r3b1 = b4 <= a4;
>r3b1 : 真假
>类型别名 :=> 真假
>b4 <= a4 : 真假
>类型别名 :=> 真假
>b4 : { [index: 文字]: Derived; }
>a4 : { [index: 数字]: Base; }

// operator >=
var r4a1 = a1 >= b1;
>r4a1 : 真假
>类型别名 :=> 真假
>a1 >= b1 : 真假
>类型别名 :=> 真假
>a1 : { [a: 文字]: 文字; }
>b1 : { [b: 文字]: 文字; }

var r4a1 = a2 >= b2;
>r4a1 : 真假
>类型别名 :=> 真假
>a2 >= b2 : 真假
>类型别名 :=> 真假
>a2 : { [index: 文字]: Base; }
>b2 : { [index: 文字]: Derived; }

var r4a1 = a3 >= b3;
>r4a1 : 真假
>类型别名 :=> 真假
>a3 >= b3 : 真假
>类型别名 :=> 真假
>a3 : { [index: 数字]: 文字; }
>b3 : { [index: 数字]: 文字; }

var r4a1 = a4 >= b4;
>r4a1 : 真假
>类型别名 :=> 真假
>a4 >= b4 : 真假
>类型别名 :=> 真假
>a4 : { [index: 数字]: Base; }
>b4 : { [index: 文字]: Derived; }

var r4b1 = b1 >= a1;
>r4b1 : 真假
>类型别名 :=> 真假
>b1 >= a1 : 真假
>类型别名 :=> 真假
>b1 : { [b: 文字]: 文字; }
>a1 : { [a: 文字]: 文字; }

var r4b1 = b2 >= a2;
>r4b1 : 真假
>类型别名 :=> 真假
>b2 >= a2 : 真假
>类型别名 :=> 真假
>b2 : { [index: 文字]: Derived; }
>a2 : { [index: 文字]: Base; }

var r4b1 = b3 >= a3;
>r4b1 : 真假
>类型别名 :=> 真假
>b3 >= a3 : 真假
>类型别名 :=> 真假
>b3 : { [index: 数字]: 文字; }
>a3 : { [index: 数字]: 文字; }

var r4b1 = b4 >= a4;
>r4b1 : 真假
>类型别名 :=> 真假
>b4 >= a4 : 真假
>类型别名 :=> 真假
>b4 : { [index: 文字]: Derived; }
>a4 : { [index: 数字]: Base; }

// operator ==
var r5a1 = a1 == b1;
>r5a1 : 真假
>类型别名 :=> 真假
>a1 == b1 : 真假
>类型别名 :=> 真假
>a1 : { [a: 文字]: 文字; }
>b1 : { [b: 文字]: 文字; }

var r5a1 = a2 == b2;
>r5a1 : 真假
>类型别名 :=> 真假
>a2 == b2 : 真假
>类型别名 :=> 真假
>a2 : { [index: 文字]: Base; }
>b2 : { [index: 文字]: Derived; }

var r5a1 = a3 == b3;
>r5a1 : 真假
>类型别名 :=> 真假
>a3 == b3 : 真假
>类型别名 :=> 真假
>a3 : { [index: 数字]: 文字; }
>b3 : { [index: 数字]: 文字; }

var r5a1 = a4 == b4;
>r5a1 : 真假
>类型别名 :=> 真假
>a4 == b4 : 真假
>类型别名 :=> 真假
>a4 : { [index: 数字]: Base; }
>b4 : { [index: 文字]: Derived; }

var r5b1 = b1 == a1;
>r5b1 : 真假
>类型别名 :=> 真假
>b1 == a1 : 真假
>类型别名 :=> 真假
>b1 : { [b: 文字]: 文字; }
>a1 : { [a: 文字]: 文字; }

var r5b1 = b2 == a2;
>r5b1 : 真假
>类型别名 :=> 真假
>b2 == a2 : 真假
>类型别名 :=> 真假
>b2 : { [index: 文字]: Derived; }
>a2 : { [index: 文字]: Base; }

var r5b1 = b3 == a3;
>r5b1 : 真假
>类型别名 :=> 真假
>b3 == a3 : 真假
>类型别名 :=> 真假
>b3 : { [index: 数字]: 文字; }
>a3 : { [index: 数字]: 文字; }

var r5b1 = b4 == a4;
>r5b1 : 真假
>类型别名 :=> 真假
>b4 == a4 : 真假
>类型别名 :=> 真假
>b4 : { [index: 文字]: Derived; }
>a4 : { [index: 数字]: Base; }

// operator !=
var r6a1 = a1 != b1;
>r6a1 : 真假
>类型别名 :=> 真假
>a1 != b1 : 真假
>类型别名 :=> 真假
>a1 : { [a: 文字]: 文字; }
>b1 : { [b: 文字]: 文字; }

var r6a1 = a2 != b2;
>r6a1 : 真假
>类型别名 :=> 真假
>a2 != b2 : 真假
>类型别名 :=> 真假
>a2 : { [index: 文字]: Base; }
>b2 : { [index: 文字]: Derived; }

var r6a1 = a3 != b3;
>r6a1 : 真假
>类型别名 :=> 真假
>a3 != b3 : 真假
>类型别名 :=> 真假
>a3 : { [index: 数字]: 文字; }
>b3 : { [index: 数字]: 文字; }

var r6a1 = a4 != b4;
>r6a1 : 真假
>类型别名 :=> 真假
>a4 != b4 : 真假
>类型别名 :=> 真假
>a4 : { [index: 数字]: Base; }
>b4 : { [index: 文字]: Derived; }

var r6b1 = b1 != a1;
>r6b1 : 真假
>类型别名 :=> 真假
>b1 != a1 : 真假
>类型别名 :=> 真假
>b1 : { [b: 文字]: 文字; }
>a1 : { [a: 文字]: 文字; }

var r6b1 = b2 != a2;
>r6b1 : 真假
>类型别名 :=> 真假
>b2 != a2 : 真假
>类型别名 :=> 真假
>b2 : { [index: 文字]: Derived; }
>a2 : { [index: 文字]: Base; }

var r6b1 = b3 != a3;
>r6b1 : 真假
>类型别名 :=> 真假
>b3 != a3 : 真假
>类型别名 :=> 真假
>b3 : { [index: 数字]: 文字; }
>a3 : { [index: 数字]: 文字; }

var r6b1 = b4 != a4;
>r6b1 : 真假
>类型别名 :=> 真假
>b4 != a4 : 真假
>类型别名 :=> 真假
>b4 : { [index: 文字]: Derived; }
>a4 : { [index: 数字]: Base; }

// operator ===
var r7a1 = a1 === b1;
>r7a1 : 真假
>类型别名 :=> 真假
>a1 === b1 : 真假
>类型别名 :=> 真假
>a1 : { [a: 文字]: 文字; }
>b1 : { [b: 文字]: 文字; }

var r7a1 = a2 === b2;
>r7a1 : 真假
>类型别名 :=> 真假
>a2 === b2 : 真假
>类型别名 :=> 真假
>a2 : { [index: 文字]: Base; }
>b2 : { [index: 文字]: Derived; }

var r7a1 = a3 === b3;
>r7a1 : 真假
>类型别名 :=> 真假
>a3 === b3 : 真假
>类型别名 :=> 真假
>a3 : { [index: 数字]: 文字; }
>b3 : { [index: 数字]: 文字; }

var r7a1 = a4 === b4;
>r7a1 : 真假
>类型别名 :=> 真假
>a4 === b4 : 真假
>类型别名 :=> 真假
>a4 : { [index: 数字]: Base; }
>b4 : { [index: 文字]: Derived; }

var r7b1 = b1 === a1;
>r7b1 : 真假
>类型别名 :=> 真假
>b1 === a1 : 真假
>类型别名 :=> 真假
>b1 : { [b: 文字]: 文字; }
>a1 : { [a: 文字]: 文字; }

var r7b1 = b2 === a2;
>r7b1 : 真假
>类型别名 :=> 真假
>b2 === a2 : 真假
>类型别名 :=> 真假
>b2 : { [index: 文字]: Derived; }
>a2 : { [index: 文字]: Base; }

var r7b1 = b3 === a3;
>r7b1 : 真假
>类型别名 :=> 真假
>b3 === a3 : 真假
>类型别名 :=> 真假
>b3 : { [index: 数字]: 文字; }
>a3 : { [index: 数字]: 文字; }

var r7b1 = b4 === a4;
>r7b1 : 真假
>类型别名 :=> 真假
>b4 === a4 : 真假
>类型别名 :=> 真假
>b4 : { [index: 文字]: Derived; }
>a4 : { [index: 数字]: Base; }

// operator !==
var r8a1 = a1 !== b1;
>r8a1 : 真假
>类型别名 :=> 真假
>a1 !== b1 : 真假
>类型别名 :=> 真假
>a1 : { [a: 文字]: 文字; }
>b1 : { [b: 文字]: 文字; }

var r8a1 = a2 !== b2;
>r8a1 : 真假
>类型别名 :=> 真假
>a2 !== b2 : 真假
>类型别名 :=> 真假
>a2 : { [index: 文字]: Base; }
>b2 : { [index: 文字]: Derived; }

var r8a1 = a3 !== b3;
>r8a1 : 真假
>类型别名 :=> 真假
>a3 !== b3 : 真假
>类型别名 :=> 真假
>a3 : { [index: 数字]: 文字; }
>b3 : { [index: 数字]: 文字; }

var r8a1 = a4 !== b4;
>r8a1 : 真假
>类型别名 :=> 真假
>a4 !== b4 : 真假
>类型别名 :=> 真假
>a4 : { [index: 数字]: Base; }
>b4 : { [index: 文字]: Derived; }

var r8b1 = b1 !== a1;
>r8b1 : 真假
>类型别名 :=> 真假
>b1 !== a1 : 真假
>类型别名 :=> 真假
>b1 : { [b: 文字]: 文字; }
>a1 : { [a: 文字]: 文字; }

var r8b1 = b2 !== a2;
>r8b1 : 真假
>类型别名 :=> 真假
>b2 !== a2 : 真假
>类型别名 :=> 真假
>b2 : { [index: 文字]: Derived; }
>a2 : { [index: 文字]: Base; }

var r8b1 = b3 !== a3;
>r8b1 : 真假
>类型别名 :=> 真假
>b3 !== a3 : 真假
>类型别名 :=> 真假
>b3 : { [index: 数字]: 文字; }
>a3 : { [index: 数字]: 文字; }

var r8b1 = b4 !== a4;
>r8b1 : 真假
>类型别名 :=> 真假
>b4 !== a4 : 真假
>类型别名 :=> 真假
>b4 : { [index: 文字]: Derived; }
>a4 : { [index: 数字]: Base; }

