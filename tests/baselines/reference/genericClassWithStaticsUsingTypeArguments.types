=== tests/cases/compiler/genericClassWithStaticsUsingTypeArguments.ts ===
// Should be error to use 'T' in all declarations within Foo.
class Foo<T> {
>Foo : Foo<T>
>T : T

    static a = (n: T) => { };
>a : (n: 任意) => 无值
>(n: T) => { } : (n: 任意) => 无值
>n : 任意
>类型别名 :=> 任意
>T : No type information available!

    static b: T;
>b : 任意
>类型别名 :=> 任意
>T : No type information available!

    static c: T[] = [];
>c : 任意[]
>T : No type information available!
>[] : 未定[]

    static d = false || ((x: T) => x || undefined)(null)
>d : 任意
>类型别名 :=> 任意
>false || ((x: T) => x || undefined)(null) : 任意
>类型别名 :=> 任意
>false : 为假
>类型别名 :=> 为假
>((x: T) => x || undefined)(null) : 任意
>类型别名 :=> 任意
>((x: T) => x || undefined) : (x: 任意) => 任意
>(x: T) => x || undefined : (x: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
>T : No type information available!
>x || undefined : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>undefined : 未定
>类型别名 :=> 未定
>null : 空值
>类型别名 :=> 空值

    static e = function (x: T) { return null; }
>e : (x: 任意) => 任意
>function (x: T) { return null; } : (x: 任意) => 任意
>x : 任意
>类型别名 :=> 任意
>T : No type information available!
>null : 空值
>类型别名 :=> 空值

    static f(xs: T[]): T[] {
>f : (xs: 任意[]) => 任意[]
>xs : 任意[]
>T : No type information available!
>T : No type information available!

        return xs.reverse();
>xs.reverse() : 任意[]
>xs.reverse : () => 任意[]
>xs : 任意[]
>reverse : () => 任意[]
    }
}

