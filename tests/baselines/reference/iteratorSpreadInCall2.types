=== tests/cases/conformance/es6/spread/iteratorSpreadInCall2.ts ===
function foo(s: symbol[]) { }
>foo : (s: 符号[]) => 无值
>s : 符号[]

class SymbolIterator {
>SymbolIterator : SymbolIterator

    next() {
>next : () => { value: 符号; done: 真假; }

        return {
>{            value: Symbol(),            done: false        } : { value: 符号; done: 真假; }

            value: Symbol(),
>value : 符号
>类型别名 :=> 符号
>Symbol() : 符号
>类型别名 :=> 符号
>Symbol : SymbolConstructor

            done: false
>done : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假

        };
    }

    [Symbol.iterator]() {
>Symbol.iterator : 符号
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>iterator : 符号
>类型别名 :=> 符号

        return this;
>this : 本体
    }
}

foo(...new SymbolIterator);
>foo(...new SymbolIterator) : 无值
>类型别名 :=> 无值
>foo : (s: 符号[]) => 无值
>...new SymbolIterator : 任意
>类型别名 :=> 任意
>new SymbolIterator : SymbolIterator
>SymbolIterator : 类为 SymbolIterator

