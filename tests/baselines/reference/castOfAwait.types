=== tests/cases/compiler/castOfAwait.ts ===
async function f() {
>f : () => Promise<void>

    <number> await 0;
><number> await 0 : number
>类型别名 :=> 数字
>await 0 : 0
>0 : 0

    typeof await 0;
>typeof await 0 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>await 0 : 0
>0 : 0

    void await 0;
>void await 0 : undefined
>类型别名 :=> 未定
>await 0 : 0
>0 : 0

    await void <string> typeof <number> void await 0;
>await void <string> typeof <number> void await 0 : undefined
>类型别名 :=> 未定
>void <string> typeof <number> void await 0 : undefined
>类型别名 :=> 未定
><string> typeof <number> void await 0 : string
>类型别名 :=> 文字
>typeof <number> void await 0 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
><number> void await 0 : number
>类型别名 :=> 数字
>void await 0 : undefined
>类型别名 :=> 未定
>await 0 : 0
>0 : 0

    await await 0;
>await await 0 : 0
>await 0 : 0
>0 : 0
}

