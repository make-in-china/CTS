=== tests/cases/compiler/accessOverriddenBaseClassMember1.ts ===
class Point {
>Point : Point

    constructor(public x: number, public y: number) { }
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

    public toString() {
>toString : () => string

        return "x=" + this.x + " y=" + this.y;
>"x=" + this.x + " y=" + this.y : string
>类型别名 :=> 文字
>"x=" + this.x + " y=" : string
>类型别名 :=> 文字
>"x=" + this.x : string
>类型别名 :=> 文字
>"x=" : "x="
>this.x : number
>类型别名 :=> 数字
>this : this
>x : number
>类型别名 :=> 数字
>" y=" : " y="
>this.y : number
>类型别名 :=> 数字
>this : this
>y : number
>类型别名 :=> 数字
    }
}
class ColoredPoint extends Point {
>ColoredPoint : ColoredPoint
>Point : Point

    constructor(x: number, y: number, public color: string) {
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
>color : string
>类型别名 :=> 文字

        super(x, y);
>super(x, y) : void
>类型别名 :=> 无值
>super : typeof Point
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
    }
    public toString() {
>toString : () => string

        return super.toString() + " color=" + this.color;
>super.toString() + " color=" + this.color : string
>类型别名 :=> 文字
>super.toString() + " color=" : string
>类型别名 :=> 文字
>super.toString() : string
>类型别名 :=> 文字
>super.toString : () => string
>super : Point
>toString : () => string
>" color=" : " color="
>this.color : string
>类型别名 :=> 文字
>this : this
>color : string
>类型别名 :=> 文字
    }
}

