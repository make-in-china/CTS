=== tests/cases/conformance/es6/destructuring/optionalBindingParametersInOverloads2.ts ===
function foo({ x, y, z }?: { x: string; y: number; z: boolean });
>foo : ({ x, y, z }?: { x: 文字; y: 数字; z: 真假; }) => 任意
>x : 文字
>类型别名 :=> 文字
>y : 数字
>类型别名 :=> 数字
>z : 真假
>类型别名 :=> 真假
>x : 文字
>类型别名 :=> 文字
>y : 数字
>类型别名 :=> 数字
>z : 真假
>类型别名 :=> 真假

function foo(...rest: any[]) {
>foo : ({ x, y, z }?: { x: 文字; y: 数字; z: 真假; }) => 任意
>rest : 任意[]

}

foo({ x: "", y: 0, z: false });
>foo({ x: "", y: 0, z: false }) : 任意
>类型别名 :=> 任意
>foo : ({ x, y, z }?: { x: 文字; y: 数字; z: 真假; }) => 任意
>{ x: "", y: 0, z: false } : { x: 文字; y: 数字; z: 为假; }
>x : 文字
>类型别名 :=> 文字
>"" : ""
>y : 数字
>类型别名 :=> 数字
>0 : 0
>z : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假

foo({ x: false, y: 0, z: "" });
>foo({ x: false, y: 0, z: "" }) : 任意
>类型别名 :=> 任意
>foo : ({ x, y, z }?: { x: 文字; y: 数字; z: 真假; }) => 任意
>{ x: false, y: 0, z: "" } : { x: 真假; y: 数字; z: 文字; }
>x : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假
>y : 数字
>类型别名 :=> 数字
>0 : 0
>z : 文字
>类型别名 :=> 文字
>"" : ""

