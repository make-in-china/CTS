=== tests/cases/conformance/es6/arrowFunction/emitArrowFunctionWhenUsingArguments01.ts ===
var a = () => {
>a : () => 无值
>() => {    var arg = arguments[0];  // error} : () => 无值

    var arg = arguments[0];  // error
>arg : 任意
>类型别名 :=> 任意
>arguments[0] : 任意
>类型别名 :=> 任意
>arguments : IArguments
>0 : 0
}

var b = function () {
>b : () => 无值
>function () {    var a = () => {        var arg = arguments[0];  // error    }} : () => 无值

    var a = () => {
>a : () => 无值
>() => {        var arg = arguments[0];  // error    } : () => 无值

        var arg = arguments[0];  // error
>arg : 任意
>类型别名 :=> 任意
>arguments[0] : 任意
>类型别名 :=> 任意
>arguments : IArguments
>0 : 0
    }
}

function baz() {
>baz : () => 无值

	() => {
>() => {		var arg = arguments[0];	} : () => 无值

		var arg = arguments[0];
>arg : 任意
>类型别名 :=> 任意
>arguments[0] : 任意
>类型别名 :=> 任意
>arguments : IArguments
>0 : 0
	}
}

function foo(inputFunc: () => void) { }
>foo : (inputFunc: () => 无值) => 无值
>inputFunc : () => 无值

foo(() => {
>foo(() => {    var arg = arguments[0];  // error}) : 无值
>类型别名 :=> 无值
>foo : (inputFunc: () => 无值) => 无值
>() => {    var arg = arguments[0];  // error} : () => 无值

    var arg = arguments[0];  // error
>arg : 任意
>类型别名 :=> 任意
>arguments[0] : 任意
>类型别名 :=> 任意
>arguments : IArguments
>0 : 0

});

function bar() {
>bar : () => 无值

    var arg = arguments[0];  // no error
>arg : 任意
>类型别名 :=> 任意
>arguments[0] : 任意
>类型别名 :=> 任意
>arguments : IArguments
>0 : 0
}


() => {
>() => {	function foo() {		var arg = arguments[0];  // no error	}} : () => 无值

	function foo() {
>foo : () => 无值

		var arg = arguments[0];  // no error
>arg : 任意
>类型别名 :=> 任意
>arguments[0] : 任意
>类型别名 :=> 任意
>arguments : IArguments
>0 : 0
	}
}
