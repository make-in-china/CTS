=== tests/cases/compiler/constraints0.ts ===
interface A {
>A : A

	a: number;
>a : 数字
>类型别名 :=> 数字
}

interface B {
>B : B

	b: string;
>b : 文字
>类型别名 :=> 文字
}

interface C<T extends A> {
>C : C<T>
>T : T
>A : A

    x: T;
>x : T
>T : T
}

var v1: C<A>; // should work
>v1 : C<A>
>C : C<T>
>A : A

var v2: C<B>; // should not work
>v2 : C<B>
>C : C<T>
>B : B

var y = v1.x.a; // 'a' should be of type 'number'
>y : 数字
>类型别名 :=> 数字
>v1.x.a : 数字
>类型别名 :=> 数字
>v1.x : A
>v1 : C<A>
>x : A
>a : 数字
>类型别名 :=> 数字

