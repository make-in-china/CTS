=== tests/cases/compiler/declarationEmitDestructuringArrayPattern2.ts ===
var [x10, [y10, [z10]]] = [1, ["hello", [true]]];
>x10 : number
>类型别名 :=> 数字
>y10 : string
>类型别名 :=> 文字
>z10 : boolean
>类型别名 :=> 真假
>[1, ["hello", [true]]] : [number, [string, [boolean]]]
>1 : 1
>["hello", [true]] : [string, [boolean]]
>"hello" : "hello"
>[true] : [boolean]
>true : true
>类型别名 :=> 为真

var [x11 = 0, y11 = ""] = [1, "hello"];
>x11 : number
>类型别名 :=> 数字
>0 : 0
>y11 : string
>类型别名 :=> 文字
>"" : ""
>[1, "hello"] : [number, string]
>1 : 1
>"hello" : "hello"

var [a11, b11, c11] = [];
>a11 : any
>类型别名 :=> 任意
>b11 : any
>类型别名 :=> 任意
>c11 : any
>类型别名 :=> 任意
>[] : [any, any, any]

var [a2, [b2, { x12, y12: c2 }]=["abc", { x12: 10, y12: false }]] = [1, ["hello", { x12: 5, y12: true }]];
>a2 : number
>类型别名 :=> 数字
>b2 : string
>类型别名 :=> 文字
>x12 : number
>类型别名 :=> 数字
>y12 : any
>类型别名 :=> 任意
>c2 : boolean
>类型别名 :=> 真假
>["abc", { x12: 10, y12: false }] : [string, { x12: number; y12: boolean; }]
>"abc" : "abc"
>{ x12: 10, y12: false } : { x12: number; y12: boolean; }
>x12 : number
>类型别名 :=> 数字
>10 : 10
>y12 : boolean
>类型别名 :=> 真假
>false : false
>类型别名 :=> 为假
>[1, ["hello", { x12: 5, y12: true }]] : [number, [string, { x12: number; y12: true; }]]
>1 : 1
>["hello", { x12: 5, y12: true }] : [string, { x12: number; y12: true; }]
>"hello" : "hello"
>{ x12: 5, y12: true } : { x12: number; y12: true; }
>x12 : number
>类型别名 :=> 数字
>5 : 5
>y12 : boolean
>类型别名 :=> 真假
>true : true
>类型别名 :=> 为真

var [x13, y13] = [1, "hello"];
>x13 : number
>类型别名 :=> 数字
>y13 : string
>类型别名 :=> 文字
>[1, "hello"] : [number, string]
>1 : 1
>"hello" : "hello"

var [a3, b3] = [[x13, y13], { x: x13, y: y13 }];
>a3 : (string | number)[]
>b3 : { x: number; y: string; }
>[[x13, y13], { x: x13, y: y13 }] : [(string | number)[], { x: number; y: string; }]
>[x13, y13] : (string | number)[]
>x13 : number
>类型别名 :=> 数字
>y13 : string
>类型别名 :=> 文字
>{ x: x13, y: y13 } : { x: number; y: string; }
>x : number
>类型别名 :=> 数字
>x13 : number
>类型别名 :=> 数字
>y : string
>类型别名 :=> 文字
>y13 : string
>类型别名 :=> 文字

