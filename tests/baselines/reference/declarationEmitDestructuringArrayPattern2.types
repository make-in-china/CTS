=== tests/cases/compiler/declarationEmitDestructuringArrayPattern2.ts ===
var [x10, [y10, [z10]]] = [1, ["hello", [true]]];
>x10 : 数字
>类型别名 :=> 数字
>y10 : 文字
>类型别名 :=> 文字
>z10 : 真假
>类型别名 :=> 真假
>[1, ["hello", [true]]] : [数字, [文字, [真假]]]
>1 : 1
>["hello", [true]] : [文字, [真假]]
>"hello" : "hello"
>[true] : [真假]
>true : 为真
>类型别名 :=> 为真

var [x11 = 0, y11 = ""] = [1, "hello"];
>x11 : 数字
>类型别名 :=> 数字
>0 : 0
>y11 : 文字
>类型别名 :=> 文字
>"" : ""
>[1, "hello"] : [数字, 文字]
>1 : 1
>"hello" : "hello"

var [a11, b11, c11] = [];
>a11 : 任意
>类型别名 :=> 任意
>b11 : 任意
>类型别名 :=> 任意
>c11 : 任意
>类型别名 :=> 任意
>[] : [任意, 任意, 任意]

var [a2, [b2, { x12, y12: c2 }]=["abc", { x12: 10, y12: false }]] = [1, ["hello", { x12: 5, y12: true }]];
>a2 : 数字
>类型别名 :=> 数字
>b2 : 文字
>类型别名 :=> 文字
>x12 : 数字
>类型别名 :=> 数字
>y12 : 任意
>类型别名 :=> 任意
>c2 : 真假
>类型别名 :=> 真假
>["abc", { x12: 10, y12: false }] : [文字, { x12: 数字; y12: 真假; }]
>"abc" : "abc"
>{ x12: 10, y12: false } : { x12: 数字; y12: 真假; }
>x12 : 数字
>类型别名 :=> 数字
>10 : 10
>y12 : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假
>[1, ["hello", { x12: 5, y12: true }]] : [数字, [文字, { x12: 数字; y12: 为真; }]]
>1 : 1
>["hello", { x12: 5, y12: true }] : [文字, { x12: 数字; y12: 为真; }]
>"hello" : "hello"
>{ x12: 5, y12: true } : { x12: 数字; y12: 为真; }
>x12 : 数字
>类型别名 :=> 数字
>5 : 5
>y12 : 真假
>类型别名 :=> 真假
>true : 为真
>类型别名 :=> 为真

var [x13, y13] = [1, "hello"];
>x13 : 数字
>类型别名 :=> 数字
>y13 : 文字
>类型别名 :=> 文字
>[1, "hello"] : [数字, 文字]
>1 : 1
>"hello" : "hello"

var [a3, b3] = [[x13, y13], { x: x13, y: y13 }];
>a3 : (文字 | 数字)[]
>b3 : { x: 数字; y: 文字; }
>[[x13, y13], { x: x13, y: y13 }] : [(文字 | 数字)[], { x: 数字; y: 文字; }]
>[x13, y13] : (文字 | 数字)[]
>x13 : 数字
>类型别名 :=> 数字
>y13 : 文字
>类型别名 :=> 文字
>{ x: x13, y: y13 } : { x: 数字; y: 文字; }
>x : 数字
>类型别名 :=> 数字
>x13 : 数字
>类型别名 :=> 数字
>y : 文字
>类型别名 :=> 文字
>y13 : 文字
>类型别名 :=> 文字

