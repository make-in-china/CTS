=== tests/cases/compiler/file1.ts ===
class foo {}
>foo : foo

namespace foo {
>foo : 类为 foo

    export class A {}
>A : A

    export namespace B { export let a; }
>B : 类为 B
>a : 任意
>类型别名 :=> 任意
}
export = foo;
>foo : foo

=== tests/cases/compiler/file2.ts ===
import x = require("./file1"); 
>x : 类为 x

x.B.b = 1;
>x.B.b = 1 : 1
>x.B.b : 数字
>类型别名 :=> 数字
>x.B : 类为 x.B
>x : 类为 x
>B : 类为 x.B
>b : 数字
>类型别名 :=> 数字
>1 : 1

// OK - './file1' is a namespace
declare module "./file1" {
    interface A { a: number }
>A : A
>a : 数字
>类型别名 :=> 数字

    namespace B {
>B : 类为 B

        export let b: number;
>b : 数字
>类型别名 :=> 数字
    }
}

=== tests/cases/compiler/file3.ts ===
import * as x from "./file1";
>x : 类为 x

import "./file2";
let a: x.A;
>a : x.A
>x : 任意
>类型别名 :=> 任意
>A : x.A

let b = a.a;
>b : 数字
>类型别名 :=> 数字
>a.a : 数字
>类型别名 :=> 数字
>a : x.A
>a : 数字
>类型别名 :=> 数字

let c = x.B.b;
>c : 数字
>类型别名 :=> 数字
>x.B.b : 数字
>类型别名 :=> 数字
>x.B : 类为 x.B
>x : 类为 x
>B : 类为 x.B
>b : 数字
>类型别名 :=> 数字

