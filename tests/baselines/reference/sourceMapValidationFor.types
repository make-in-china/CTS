=== tests/cases/compiler/sourceMapValidationFor.ts ===
for (var i = 0; i < 10; i++) {
>i : number
>类型别名 :=> 数字
>0 : 0
>i < 10 : boolean
>类型别名 :=> 真假
>i : number
>类型别名 :=> 数字
>10 : 10
>i++ : number
>类型别名 :=> 数字
>i : number
>类型别名 :=> 数字

    WScript.Echo("i: " + i);
>WScript.Echo("i: " + i) : any
>类型别名 :=> 任意
>WScript.Echo : any
>类型别名 :=> 任意
>WScript : any
>类型别名 :=> 任意
>Echo : any
>类型别名 :=> 任意
>"i: " + i : string
>类型别名 :=> 文字
>"i: " : "i: "
>i : number
>类型别名 :=> 数字
}
for (i = 0; i < 10; i++)
>i = 0 : 0
>i : number
>类型别名 :=> 数字
>0 : 0
>i < 10 : boolean
>类型别名 :=> 真假
>i : number
>类型别名 :=> 数字
>10 : 10
>i++ : number
>类型别名 :=> 数字
>i : number
>类型别名 :=> 数字
{
    WScript.Echo("i: " + i);
>WScript.Echo("i: " + i) : any
>类型别名 :=> 任意
>WScript.Echo : any
>类型别名 :=> 任意
>WScript : any
>类型别名 :=> 任意
>Echo : any
>类型别名 :=> 任意
>"i: " + i : string
>类型别名 :=> 文字
>"i: " : "i: "
>i : number
>类型别名 :=> 数字
}
for (var j = 0; j < 10; ) {
>j : number
>类型别名 :=> 数字
>0 : 0
>j < 10 : boolean
>类型别名 :=> 真假
>j : number
>类型别名 :=> 数字
>10 : 10

    j++;
>j++ : number
>类型别名 :=> 数字
>j : number
>类型别名 :=> 数字

    if (j == 1) {
>j == 1 : boolean
>类型别名 :=> 真假
>j : number
>类型别名 :=> 数字
>1 : 1

        continue;
    }
}
for (j = 0; j < 10;)
>j = 0 : 0
>j : number
>类型别名 :=> 数字
>0 : 0
>j < 10 : boolean
>类型别名 :=> 真假
>j : number
>类型别名 :=> 数字
>10 : 10
{
    j++;
>j++ : number
>类型别名 :=> 数字
>j : number
>类型别名 :=> 数字
}
for (var k = 0;; k++) {
>k : number
>类型别名 :=> 数字
>0 : 0
>k++ : number
>类型别名 :=> 数字
>k : number
>类型别名 :=> 数字
}
for (k = 0;; k++)
>k = 0 : 0
>k : number
>类型别名 :=> 数字
>0 : 0
>k++ : number
>类型别名 :=> 数字
>k : number
>类型别名 :=> 数字
{
}
for (; k < 10; k++) {
>k < 10 : boolean
>类型别名 :=> 真假
>k : number
>类型别名 :=> 数字
>10 : 10
>k++ : number
>类型别名 :=> 数字
>k : number
>类型别名 :=> 数字
}
for (;;) {
    i++;
>i++ : number
>类型别名 :=> 数字
>i : number
>类型别名 :=> 数字
}
for (;;)
{
    i++;
>i++ : number
>类型别名 :=> 数字
>i : number
>类型别名 :=> 数字
}
for (i = 0, j = 20; j < 20, i < 20; j++) {
>i = 0, j = 20 : 20
>i = 0 : 0
>i : number
>类型别名 :=> 数字
>0 : 0
>j = 20 : 20
>j : number
>类型别名 :=> 数字
>20 : 20
>j < 20, i < 20 : boolean
>类型别名 :=> 真假
>j < 20 : boolean
>类型别名 :=> 真假
>j : number
>类型别名 :=> 数字
>20 : 20
>i < 20 : boolean
>类型别名 :=> 真假
>i : number
>类型别名 :=> 数字
>20 : 20
>j++ : number
>类型别名 :=> 数字
>j : number
>类型别名 :=> 数字
}
