=== tests/cases/compiler/consumer.ts ===
import Drawing = require('./Drawing');
>Drawing : 类为 Drawing

var addr = new Drawing.Math.Adder();
>addr : Adder
>new Drawing.Math.Adder() : Adder
>Drawing.Math.Adder : 类为 Adder
>Drawing.Math : { Adder: 类为 Adder; }
>Drawing : 类为 Drawing
>Math : { Adder: 类为 Adder; }
>Adder : 类为 Adder

=== tests/cases/compiler/Drawing.ts ===
export import Math = require('./Math/Math')
>Math : { Adder: 类为 Adder; }

=== tests/cases/compiler/Math/Math.ts ===
import Adder = require('./Adder');
>Adder : 类为 Adder

var Math = {
>Math : { Adder: 类为 Adder; }
>{    Adder:Adder} : { Adder: 类为 Adder; }

    Adder:Adder
>Adder : 类为 Adder
>Adder : 类为 Adder

};

export = Math
>Math : { Adder: 类为 Adder; }

=== tests/cases/compiler/Math/Adder.ts ===
class Adder {
>Adder : Adder

    add(a: number, b: number) {
>add : (a: 数字, b: 数字) => 无值
>a : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
        
    }
}

export = Adder;
>Adder : Adder

