=== tests/cases/conformance/expressions/typeGuards/typeGuardOfFormNotExpr.ts ===
var str: string;
>str : string
>类型别名 :=> 文字

var bool: boolean;
>bool : boolean
>类型别名 :=> 真假

var num: number;
>num : number
>类型别名 :=> 数字

var strOrNum: string | number;
>strOrNum : string | number

var strOrNumOrBool: string | number | boolean;
>strOrNumOrBool : string | number | boolean

var numOrBool: number | boolean;
>numOrBool : number | boolean

// A type guard of the form !expr
// - when true, narrows the type of x by expr when false, or
// - when false, narrows the type of x by expr when true.

// !typeguard1
if (!(typeof strOrNum === "string")) {
>!(typeof strOrNum === "string") : boolean
>类型别名 :=> 真假
>(typeof strOrNum === "string") : boolean
>类型别名 :=> 真假
>typeof strOrNum === "string" : boolean
>类型别名 :=> 真假
>typeof strOrNum : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>strOrNum : string | number
>"string" : "string"

    num === strOrNum; // number
>num === strOrNum : boolean
>类型别名 :=> 真假
>num : number
>类型别名 :=> 数字
>strOrNum : number
>类型别名 :=> 数字
}
else {
    str = strOrNum; // string
>str = strOrNum : string
>类型别名 :=> 文字
>str : string
>类型别名 :=> 文字
>strOrNum : string
>类型别名 :=> 文字
}
// !(typeguard1 || typeguard2)
if (!(typeof strOrNumOrBool === "string" || typeof strOrNumOrBool === "number")) {
>!(typeof strOrNumOrBool === "string" || typeof strOrNumOrBool === "number") : boolean
>类型别名 :=> 真假
>(typeof strOrNumOrBool === "string" || typeof strOrNumOrBool === "number") : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool === "string" || typeof strOrNumOrBool === "number" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool === "string" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>strOrNumOrBool : string | number | boolean
>"string" : "string"
>typeof strOrNumOrBool === "number" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>strOrNumOrBool : number | boolean
>"number" : "number"

    bool = strOrNumOrBool; // boolean
>bool = strOrNumOrBool : boolean
>类型别名 :=> 真假
>bool : boolean
>类型别名 :=> 真假
>strOrNumOrBool : boolean
>类型别名 :=> 真假
}
else {
    strOrNum = strOrNumOrBool; // string | number
>strOrNum = strOrNumOrBool : string | number
>strOrNum : string | number
>strOrNumOrBool : string | number
}
// !(typeguard1) || !(typeguard2)
if (!(typeof strOrNumOrBool !== "string") || !(typeof strOrNumOrBool !== "number")) {
>!(typeof strOrNumOrBool !== "string") || !(typeof strOrNumOrBool !== "number") : boolean
>类型别名 :=> 真假
>!(typeof strOrNumOrBool !== "string") : boolean
>类型别名 :=> 真假
>(typeof strOrNumOrBool !== "string") : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool !== "string" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>strOrNumOrBool : string | number | boolean
>"string" : "string"
>!(typeof strOrNumOrBool !== "number") : boolean
>类型别名 :=> 真假
>(typeof strOrNumOrBool !== "number") : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool !== "number" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>strOrNumOrBool : number | boolean
>"number" : "number"

    strOrNum = strOrNumOrBool; // string | number
>strOrNum = strOrNumOrBool : string | number
>strOrNum : string | number
>strOrNumOrBool : string | number
}
else {
    bool = strOrNumOrBool; // boolean
>bool = strOrNumOrBool : boolean
>类型别名 :=> 真假
>bool : boolean
>类型别名 :=> 真假
>strOrNumOrBool : boolean
>类型别名 :=> 真假
}
// !(typeguard1 && typeguard2)
if (!(typeof strOrNumOrBool !== "string" && typeof strOrNumOrBool !== "number")) {
>!(typeof strOrNumOrBool !== "string" && typeof strOrNumOrBool !== "number") : boolean
>类型别名 :=> 真假
>(typeof strOrNumOrBool !== "string" && typeof strOrNumOrBool !== "number") : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool !== "string" && typeof strOrNumOrBool !== "number" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool !== "string" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>strOrNumOrBool : string | number | boolean
>"string" : "string"
>typeof strOrNumOrBool !== "number" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>strOrNumOrBool : number | boolean
>"number" : "number"

    strOrNum = strOrNumOrBool; // string | number
>strOrNum = strOrNumOrBool : string | number
>strOrNum : string | number
>strOrNumOrBool : string | number
}
else {
    bool = strOrNumOrBool; // boolean
>bool = strOrNumOrBool : boolean
>类型别名 :=> 真假
>bool : boolean
>类型别名 :=> 真假
>strOrNumOrBool : boolean
>类型别名 :=> 真假
}
// !(typeguard1) && !(typeguard2)
if (!(typeof strOrNumOrBool === "string") && !(typeof strOrNumOrBool === "number")) {
>!(typeof strOrNumOrBool === "string") && !(typeof strOrNumOrBool === "number") : boolean
>类型别名 :=> 真假
>!(typeof strOrNumOrBool === "string") : boolean
>类型别名 :=> 真假
>(typeof strOrNumOrBool === "string") : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool === "string" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>strOrNumOrBool : string | number | boolean
>"string" : "string"
>!(typeof strOrNumOrBool === "number") : boolean
>类型别名 :=> 真假
>(typeof strOrNumOrBool === "number") : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool === "number" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>strOrNumOrBool : number | boolean
>"number" : "number"

    bool = strOrNumOrBool; // boolean
>bool = strOrNumOrBool : boolean
>类型别名 :=> 真假
>bool : boolean
>类型别名 :=> 真假
>strOrNumOrBool : boolean
>类型别名 :=> 真假
}
else {
    strOrNum = strOrNumOrBool; // string | number
>strOrNum = strOrNumOrBool : string | number
>strOrNum : string | number
>strOrNumOrBool : string | number
}
// !(typeguard1) && simpleExpr
if (!(typeof strOrNumOrBool === "string") && numOrBool !== strOrNumOrBool) {
>!(typeof strOrNumOrBool === "string") && numOrBool !== strOrNumOrBool : boolean
>类型别名 :=> 真假
>!(typeof strOrNumOrBool === "string") : boolean
>类型别名 :=> 真假
>(typeof strOrNumOrBool === "string") : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool === "string" : boolean
>类型别名 :=> 真假
>typeof strOrNumOrBool : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>strOrNumOrBool : string | number | boolean
>"string" : "string"
>numOrBool !== strOrNumOrBool : boolean
>类型别名 :=> 真假
>numOrBool : number | boolean
>strOrNumOrBool : number | boolean

    numOrBool = strOrNumOrBool; // number | boolean
>numOrBool = strOrNumOrBool : number | boolean
>numOrBool : number | boolean
>strOrNumOrBool : number | boolean
}
else {
    var r1: string | number | boolean = strOrNumOrBool; // string | number | boolean
>r1 : string | number | boolean
>strOrNumOrBool : string | number | boolean
}
