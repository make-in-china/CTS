=== tests/cases/conformance/jsx/file.tsx ===
import React = require('react');
>React : 类为 React

type TextProps = { editable: false }
>TextProps : { editable: 为假; } | { editable: 为真; onEdit: (newText: 文字) => 无值; }
>editable : 为假
>类型别名 :=> 为假
>false : 为假
>类型别名 :=> 为假

               | { editable: true, onEdit: (newText: string) => void };
>editable : 为真
>类型别名 :=> 为真
>true : 为真
>类型别名 :=> 为真
>onEdit : (newText: 文字) => 无值
>newText : 文字
>类型别名 :=> 文字

class TextComponent extends React.Component<TextProps, {}> {
>TextComponent : TextComponent
>React.Component : React.Component<{ editable: 为假; } | { editable: 为真; onEdit: (newText: 文字) => 无值; }, {}>
>React : 类为 React
>Component : 类为 React.Component
>TextProps : { editable: 为假; } | { editable: 为真; onEdit: (newText: 文字) => 无值; }

    render() {
>render : () => JSX.Element

        return <span>Some Text..</span>;
><span>Some Text..</span> : JSX.Element
>span : 任意
>类型别名 :=> 任意
>span : 任意
>类型别名 :=> 任意
    }
}

// Error
let x = <TextComponent editable={true} />
>x : JSX.Element
><TextComponent editable={true} /> : JSX.Element
>TextComponent : 类为 TextComponent
>editable : 真假
>类型别名 :=> 真假
>true : 为真
>类型别名 :=> 为真

const textProps: TextProps = {
>textProps : { editable: 为假; } | { editable: 为真; onEdit: (newText: 文字) => 无值; }
>TextProps : { editable: 为假; } | { editable: 为真; onEdit: (newText: 文字) => 无值; }
>{    editable: false} : { editable: 为假; }

    editable: false
>editable : 真假
>类型别名 :=> 真假
>false : 为假
>类型别名 :=> 为假

};
