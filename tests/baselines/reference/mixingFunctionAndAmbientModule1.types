=== tests/cases/compiler/mixingFunctionAndAmbientModule1.ts ===
module A {
>A : 类为 A

    declare module My {
>My : 类为 My

        export var x: number;
>x : 数字
>类型别名 :=> 数字
    }
    function My(s: string) { }
>My : 类为 My
>s : 文字
>类型别名 :=> 文字
}

module B {
>B : 类为 B

    declare module My {
>My : 类为 My

        export var x: number;
>x : 数字
>类型别名 :=> 数字
    }
    function My(s: boolean);
>My : 类为 My
>s : 真假
>类型别名 :=> 真假

    function My(s: any) { }
>My : 类为 My
>s : 任意
>类型别名 :=> 任意
}

module C {
>C : 类为 C

    declare module My {
>My : 类为 My

        export var x: number;
>x : 数字
>类型别名 :=> 数字
    }
    declare function My(s: boolean);
>My : 类为 My
>s : 真假
>类型别名 :=> 真假
}

module D {
>D : 类为 D

    declare module My {
>My : 类为 My

        export var x: number;
>x : 数字
>类型别名 :=> 数字
    }
    declare function My(s: boolean);
>My : 类为 My
>s : 真假
>类型别名 :=> 真假

    declare function My(s: any);
>My : 类为 My
>s : 任意
>类型别名 :=> 任意
}


module E {
>E : 类为 E

    declare module My {
>My : 类为 My

        export var x: number;
>x : 数字
>类型别名 :=> 数字
    }
    declare function My(s: boolean);
>My : 类为 My
>s : 真假
>类型别名 :=> 真假

    declare module My {
>My : 类为 My

        export var y: number;
>y : 数字
>类型别名 :=> 数字
    }
    declare function My(s: any);
>My : 类为 My
>s : 任意
>类型别名 :=> 任意
}

