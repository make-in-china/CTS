=== tests/cases/compiler/declFileCallSignatures_0.ts ===
export interface ICallSignature {
>ICallSignature : ICallSignature

    /** This comment should appear for foo*/
    (): string;
}

export interface ICallSignatureWithParameters {
>ICallSignatureWithParameters : ICallSignatureWithParameters

    /** This is comment for function signature*/
    (/** this is comment about a*/a: string,
>a : 文字
>类型别名 :=> 文字

        /** this is comment for b*/
        b: number): void;
>b : 数字
>类型别名 :=> 数字
}

export interface ICallSignatureWithRestParameters {
>ICallSignatureWithRestParameters : ICallSignatureWithRestParameters

    (a: string, ...rests: string[]): string;
>a : 文字
>类型别名 :=> 文字
>rests : 文字[]
}

export interface ICallSignatureWithOverloads {
>ICallSignatureWithOverloads : ICallSignatureWithOverloads

    (a: string): string;
>a : 文字
>类型别名 :=> 文字

    (a: number): number;
>a : 数字
>类型别名 :=> 数字
}

export interface ICallSignatureWithTypeParameters<T> {
>ICallSignatureWithTypeParameters : ICallSignatureWithTypeParameters<T>
>T : T

    /** This comment should appear for foo*/
    (a: T): string;
>a : T
>T : T
}

export interface ICallSignatureWithOwnTypeParametes {
>ICallSignatureWithOwnTypeParametes : ICallSignatureWithOwnTypeParametes

    <T extends ICallSignature>(a: T): string;
>T : T
>ICallSignature : ICallSignature
>a : T
>T : T
}

=== tests/cases/compiler/declFileCallSignatures_1.ts ===
interface IGlobalCallSignature {
>IGlobalCallSignature : IGlobalCallSignature

    /** This comment should appear for foo*/
    (): string;
}

interface IGlobalCallSignatureWithParameters {
>IGlobalCallSignatureWithParameters : IGlobalCallSignatureWithParameters

    /** This is comment for function signature*/
    (/** this is comment about a*/a: string,
>a : 文字
>类型别名 :=> 文字

        /** this is comment for b*/
        b: number): void;
>b : 数字
>类型别名 :=> 数字
}

interface IGlobalCallSignatureWithRestParameters {
>IGlobalCallSignatureWithRestParameters : IGlobalCallSignatureWithRestParameters

    (a: string, ...rests: string[]): string;
>a : 文字
>类型别名 :=> 文字
>rests : 文字[]

}

interface IGlobalCallSignatureWithOverloads {
>IGlobalCallSignatureWithOverloads : IGlobalCallSignatureWithOverloads

    (a: string): string;
>a : 文字
>类型别名 :=> 文字

    (a: number): number;
>a : 数字
>类型别名 :=> 数字
}

interface IGlobalCallSignatureWithTypeParameters<T> {
>IGlobalCallSignatureWithTypeParameters : IGlobalCallSignatureWithTypeParameters<T>
>T : T

    /** This comment should appear for foo*/
    (a: T): string;
>a : T
>T : T
}

interface IGlobalCallSignatureWithOwnTypeParametes {
>IGlobalCallSignatureWithOwnTypeParametes : IGlobalCallSignatureWithOwnTypeParametes

    <T extends IGlobalCallSignature>(a: T): string;
>T : T
>IGlobalCallSignature : IGlobalCallSignature
>a : T
>T : T
}
