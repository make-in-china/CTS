=== tests/cases/conformance/types/stringLiteral/stringLiteralCheckedInIf02.ts ===
type S = "a" | "b";
>S : S

type T = S[] | S;
>T : T
>S : S
>S : S

function isS(t: T): t is S {
>isS : (t: T) => t 作为 S
>t : T
>T : T
>t : 任意
>类型别名 :=> 任意
>S : S

    return t === "a" || t === "b";
>t === "a" || t === "b" : 真假
>类型别名 :=> 真假
>t === "a" : 真假
>类型别名 :=> 真假
>t : T
>"a" : "a"
>t === "b" : 真假
>类型别名 :=> 真假
>t : "b" | S[]
>"b" : "b"
}

function f(foo: T) {
>f : (foo: T) => S
>foo : T
>T : T

    if (isS(foo)) {
>isS(foo) : 真假
>类型别名 :=> 真假
>isS : (t: T) => t 作为 S
>foo : T

        return foo;
>foo : S
    }
    else { 
        return foo[0];
>foo[0] : S
>foo : S[]
>0 : 0
    }
}
