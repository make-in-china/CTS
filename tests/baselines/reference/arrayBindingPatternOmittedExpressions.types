=== tests/cases/compiler/arrayBindingPatternOmittedExpressions.ts ===
var results: string[];
>results : string[]

{
    let [, b, , a] = results;
> : undefined
>类型别名 :=> 未定
>b : string
>类型别名 :=> 文字
> : undefined
>类型别名 :=> 未定
>a : string
>类型别名 :=> 文字
>results : string[]

    let x = {
>x : { a: string; b: string; }
>{        a,        b    } : { a: string; b: string; }

        a,
>a : string
>类型别名 :=> 文字

        b
>b : string
>类型别名 :=> 文字
    }
}


function f([, a, , b, , , , s, , , ] = results) {
>f : ([, a, , b, , , , s, , ,]?: string[]) => void
> : undefined
>类型别名 :=> 未定
>a : string
>类型别名 :=> 文字
> : undefined
>类型别名 :=> 未定
>b : string
>类型别名 :=> 文字
> : undefined
>类型别名 :=> 未定
> : undefined
>类型别名 :=> 未定
> : undefined
>类型别名 :=> 未定
>s : string
>类型别名 :=> 文字
> : undefined
>类型别名 :=> 未定
> : undefined
>类型别名 :=> 未定
>results : string[]

    a = s[1];
>a = s[1] : string
>类型别名 :=> 文字
>a : string
>类型别名 :=> 文字
>s[1] : string
>类型别名 :=> 文字
>s : string
>类型别名 :=> 文字
>1 : 1

    b = s[2];
>b = s[2] : string
>类型别名 :=> 文字
>b : string
>类型别名 :=> 文字
>s[2] : string
>类型别名 :=> 文字
>s : string
>类型别名 :=> 文字
>2 : 2
}
