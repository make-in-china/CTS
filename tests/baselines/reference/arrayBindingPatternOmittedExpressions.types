=== tests/cases/compiler/arrayBindingPatternOmittedExpressions.ts ===
var results: string[];
>results : 文字[]

{
    let [, b, , a] = results;
> : 未定
>类型别名 :=> 未定
>b : 任意
>类型别名 :=> 任意
> : 未定
>类型别名 :=> 未定
>a : 任意
>类型别名 :=> 任意
>results : 文字[]

    let x = {
>x : { a: 任意; b: 任意; }
>{        a,        b    } : { a: 任意; b: 任意; }

        a,
>a : 任意
>类型别名 :=> 任意

        b
>b : 任意
>类型别名 :=> 任意
    }
}


function f([, a, , b, , , , s, , , ] = results) {
>f : ([, a, , b, , , , s, , ,]?: 文字[]) => 无值
> : 未定
>类型别名 :=> 未定
>a : 任意
>类型别名 :=> 任意
> : 未定
>类型别名 :=> 未定
>b : 任意
>类型别名 :=> 任意
> : 未定
>类型别名 :=> 未定
> : 未定
>类型别名 :=> 未定
> : 未定
>类型别名 :=> 未定
>s : 任意
>类型别名 :=> 任意
> : 未定
>类型别名 :=> 未定
> : 未定
>类型别名 :=> 未定
>results : 文字[]

    a = s[1];
>a = s[1] : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意
>s[1] : 任意
>类型别名 :=> 任意
>s : 任意
>类型别名 :=> 任意
>1 : 1

    b = s[2];
>b = s[2] : 任意
>类型别名 :=> 任意
>b : 任意
>类型别名 :=> 任意
>s[2] : 任意
>类型别名 :=> 任意
>s : 任意
>类型别名 :=> 任意
>2 : 2
}
