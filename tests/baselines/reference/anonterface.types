=== tests/cases/compiler/anonterface.ts ===
module M {
>M : typeof M

    export class C {
>C : C

        m(fn:{ (n:number):string; },n2:number):string {
>m : (fn: (n: number) => string, n2: number) => string
>fn : (n: number) => string
>n : number
>类型别名 :=> 数字
>n2 : number
>类型别名 :=> 数字

            return fn(n2);
>fn(n2) : string
>类型别名 :=> 文字
>fn : (n: number) => string
>n2 : number
>类型别名 :=> 数字
        }
    }
}

var c=new M.C();
>c : M.C
>new M.C() : M.C
>M.C : typeof M.C
>M : typeof M
>C : typeof M.C

c.m(function(n) { return "hello: "+n; },18);
>c.m(function(n) { return "hello: "+n; },18) : string
>类型别名 :=> 文字
>c.m : (fn: (n: number) => string, n2: number) => string
>c : M.C
>m : (fn: (n: number) => string, n2: number) => string
>function(n) { return "hello: "+n; } : (n: number) => string
>n : number
>类型别名 :=> 数字
>"hello: "+n : string
>类型别名 :=> 文字
>"hello: " : "hello: "
>n : number
>类型别名 :=> 数字
>18 : 18




