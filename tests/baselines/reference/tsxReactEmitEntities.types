=== tests/cases/conformance/jsx/file.tsx ===
declare module JSX {
>JSX : 任意
>类型别名 :=> 任意

	interface Element { }
>Element : Element

	interface IntrinsicElements {
>IntrinsicElements : IntrinsicElements

		[s: string]: any;
>s : 文字
>类型别名 :=> 文字
	}
}
declare var React: any;
>React : 任意
>类型别名 :=> 任意

<div>Dot goes here: &middot; &notAnEntity; </div>;
><div>Dot goes here: &middot; &notAnEntity; </div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

<div>Be careful of &quot;-ed strings!</div>;
><div>Be careful of &quot;-ed strings!</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

<div>&#0123;&#123;braces&#x7d;&#x7D;</div>;
><div>&#0123;&#123;braces&#x7d;&#x7D;</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

// Escapes do nothing
<div>\n</div>;
><div>\n</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

// Also works in string literal attributes
<div attr="&#0123;&hellip;&#x7D;\"></div>;
><div attr="&#0123;&hellip;&#x7D;\"></div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>attr : 文字
>类型别名 :=> 文字
>div : 任意
>类型别名 :=> 任意

// Does not happen for a string literal that happens to be inside an attribute (and escapes then work)
<div attr={"&#0123;&hellip;&#x7D;\""}></div>;
><div attr={"&#0123;&hellip;&#x7D;\""}></div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>attr : 文字
>类型别名 :=> 文字
>"&#0123;&hellip;&#x7D;\"" : "&#0123;&hellip;&#x7D;\""
>div : 任意
>类型别名 :=> 任意

// Preserves single quotes
<div attr='"'></div>
><div attr='"'></div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>attr : 文字
>类型别名 :=> 文字
>div : 任意
>类型别名 :=> 任意

