=== /a/node_modules/@types/errorCh/index.d.ts ===
//@@{ 错误类:Error, 错误:error, 错误_:err }
导出 声明 种类 错误类 {
>错误类 : 错误类

    私有 错误: 文字
>错误 : string

    //@{ "错误常量":"error", "错误类常量":"Error" }
    构造(错误_:"错误常量" | "错误类常量")
>错误_ : "错误常量" | "错误类常量"

    //@{ 错误属性:Error }
    公开 错误属性: 文字
>错误属性 : string
}

=== /a/测试_1.ts ===
导入 * 转为 错误 来自 "errorCh"
>错误 : typeof 错误

变量 aaa = 新建 错误.错误类("错误常量")
>aaa : 错误.错误类
>新建 错误.错误类("错误常量") : 错误.错误类
>错误.错误类 : typeof 错误.错误类
>错误 : typeof 错误
>错误类 : typeof 错误.错误类
>"错误常量" : "错误常量"

aaa.错误属性
>aaa.错误属性 : string
>aaa : 错误.错误类
>错误属性 : string

aaa.错误   // 错误: 不能调用私有属性.
>aaa.错误 : string
>aaa : 错误.错误类
>错误 : string

=== /a/测试_2.ts ===
导入 { 错误类 } 来自 "errorCh"
>错误类 : typeof 错误类

变量 aaa = 新建 错误类("错误常量")
>aaa : 错误类
>新建 错误类("错误常量") : 错误类
>错误类 : typeof 错误类
>"错误常量" : "错误常量"

变量 { 错误属性 } = aaa   // 错误: 因为使用的是别名 可能不报错, 编译 es5 以下不报错
>错误属性 : string
>aaa : 错误类

变量 bbb = 错误属性
>bbb : string
>错误属性 : string

aaa.错误   // 错误: 不能调用私有属性.
>aaa.错误 : string
>aaa : 错误类
>错误 : string


//************************* 中英*比较 *************************// 

=== /a/node_modules/@types/errorEn/index.d.ts ===
export declare class Error {
>Error : Error

    private error: string
>error : string

    constructor(err: "error" | "Error")
>err : "error" | "Error"

    public Error: string
>Error : string
}

=== /a/测试_3.ts ===
import *as e from "errorEn"
>e : typeof e

let aaa = new e.Error("Error")
>aaa : e.Error
>new e.Error("Error") : e.Error
>e.Error : typeof e.Error
>e : typeof e
>Error : typeof e.Error
>"Error" : "Error"

aaa.Error
>aaa.Error : string
>aaa : e.Error
>Error : string

aaa.error   // error: 不能调用私有属性.
>aaa.error : string
>aaa : e.Error
>error : string


=== /a/测试_4.ts ===
import { Error as ERROR } from "errorEn"
>Error : typeof ERROR
>ERROR : typeof ERROR

let aaa = new ERROR("Error")
>aaa : ERROR
>new ERROR("Error") : ERROR
>ERROR : typeof ERROR
>"Error" : "Error"

let { Error } = aaa     //error: 如导入不使用别名 这里会报错. 
>Error : string
>aaa : ERROR

let bbb = Error
>bbb : string
>Error : string

aaa.error   // error: 不能调用私有属性.
>aaa.error : string
>aaa : ERROR
>error : string

