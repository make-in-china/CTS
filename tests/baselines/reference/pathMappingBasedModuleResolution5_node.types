=== c:/root/folder1/file1.ts ===
import {x} from "folder2/file1"
>x : number
>类型别名 :=> 数字

import {y} from "folder3/file2"
>y : number
>类型别名 :=> 数字

import {z} from "components/file3"
>z : number
>类型别名 :=> 数字

import {z1} from "file4"
>z1 : number
>类型别名 :=> 数字

declare function use(a: any): void;
>use : (a: any) => void
>a : any
>类型别名 :=> 任意

use(x.toExponential());
>use(x.toExponential()) : void
>类型别名 :=> 无值
>use : (a: any) => void
>x.toExponential() : string
>类型别名 :=> 文字
>x.toExponential : (fractionDigits?: number) => string
>x : number
>类型别名 :=> 数字
>toExponential : (fractionDigits?: number) => string

use(y.toExponential());
>use(y.toExponential()) : void
>类型别名 :=> 无值
>use : (a: any) => void
>y.toExponential() : string
>类型别名 :=> 文字
>y.toExponential : (fractionDigits?: number) => string
>y : number
>类型别名 :=> 数字
>toExponential : (fractionDigits?: number) => string

use(z.toExponential());
>use(z.toExponential()) : void
>类型别名 :=> 无值
>use : (a: any) => void
>z.toExponential() : string
>类型别名 :=> 文字
>z.toExponential : (fractionDigits?: number) => string
>z : number
>类型别名 :=> 数字
>toExponential : (fractionDigits?: number) => string

use(z1.toExponential());
>use(z1.toExponential()) : void
>类型别名 :=> 无值
>use : (a: any) => void
>z1.toExponential() : string
>类型别名 :=> 文字
>z1.toExponential : (fractionDigits?: number) => string
>z1 : number
>类型别名 :=> 数字
>toExponential : (fractionDigits?: number) => string

=== c:/root/folder2/file1.ts ===
export var x = 1;
>x : number
>类型别名 :=> 数字
>1 : 1

=== c:/root/generated/folder3/file2.ts ===
export var y = 1;
>y : number
>类型别名 :=> 数字
>1 : 1

=== c:/root/shared/components/file3/index.d.ts ===
export var z: number;
>z : number
>类型别名 :=> 数字

=== c:/node_modules/file4.ts ===
export var z1 = 1;
>z1 : number
>类型别名 :=> 数字
>1 : 1

