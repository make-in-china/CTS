=== tests/cases/compiler/es5-asyncFunctionObjectLiterals.ts ===
declare var x, y, z, a, b, c;
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意
>b : 任意
>类型别名 :=> 任意
>c : 任意
>类型别名 :=> 任意

async function objectLiteral0() {
>objectLiteral0 : () => Promise<无值>

    x = {
>x = {        a: await y,        b: z    } : { a: 任意; b: 任意; }
>x : 任意
>类型别名 :=> 任意
>{        a: await y,        b: z    } : { a: 任意; b: 任意; }

        a: await y,
>a : 任意
>类型别名 :=> 任意
>await y : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

        b: z
>b : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    };
}

async function objectLiteral1() {
>objectLiteral1 : () => Promise<无值>

    x = {
>x = {        a: y,        b: await z    } : { a: 任意; b: 任意; }
>x : 任意
>类型别名 :=> 任意
>{        a: y,        b: await z    } : { a: 任意; b: 任意; }

        a: y,
>a : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

        b: await z
>b : 任意
>类型别名 :=> 任意
>await z : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    };
}

async function objectLiteral2() {
>objectLiteral2 : () => Promise<无值>

    x = {
>x = {        [await a]: y,        b: z    } : { [x: 数字]: 任意; b: 任意; }
>x : 任意
>类型别名 :=> 任意
>{        [await a]: y,        b: z    } : { [x: 数字]: 任意; b: 任意; }

        [await a]: y,
>await a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

        b: z
>b : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    };
}

async function objectLiteral3() {
>objectLiteral3 : () => Promise<无值>

    x = {
>x = {        [a]: await y,        b: z    } : { [x: 数字]: 任意; b: 任意; }
>x : 任意
>类型别名 :=> 任意
>{        [a]: await y,        b: z    } : { [x: 数字]: 任意; b: 任意; }

        [a]: await y,
>a : 任意
>类型别名 :=> 任意
>await y : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

        b: z
>b : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    };
}

async function objectLiteral4() {
>objectLiteral4 : () => Promise<无值>

    x = {
>x = {        a: await y,        [b]: z    } : { [x: 数字]: 任意; a: 任意; }
>x : 任意
>类型别名 :=> 任意
>{        a: await y,        [b]: z    } : { [x: 数字]: 任意; a: 任意; }

        a: await y,
>a : 任意
>类型别名 :=> 任意
>await y : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

        [b]: z
>b : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    };
}

async function objectLiteral5() {
>objectLiteral5 : () => Promise<无值>

    x = {
>x = {        a: y,        [await b]: z    } : { [x: 数字]: 任意; a: 任意; }
>x : 任意
>类型别名 :=> 任意
>{        a: y,        [await b]: z    } : { [x: 数字]: 任意; a: 任意; }

        a: y,
>a : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

        [await b]: z
>await b : 任意
>类型别名 :=> 任意
>b : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    };
}

async function objectLiteral6() {
>objectLiteral6 : () => Promise<无值>

    x = {
>x = {        a: y,        [b]: await z    } : { [x: 数字]: 任意; a: 任意; }
>x : 任意
>类型别名 :=> 任意
>{        a: y,        [b]: await z    } : { [x: 数字]: 任意; a: 任意; }

        a: y,
>a : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

        [b]: await z
>b : 任意
>类型别名 :=> 任意
>await z : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    };
}
