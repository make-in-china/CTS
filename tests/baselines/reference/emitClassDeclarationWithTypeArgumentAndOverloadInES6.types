=== tests/cases/conformance/es6/classDeclaration/emitClassDeclarationWithTypeArgumentAndOverloadInES6.ts ===
class B<T> {
>B : B<T>
>T : T

    x: T;
>x : T
>T : T

    B: T;
>B : T
>T : T

    constructor(a: any)
>a : 任意
>类型别名 :=> 任意

    constructor(a: any,b: T)
>a : 任意
>类型别名 :=> 任意
>b : T
>T : T

    constructor(a: T) { this.B = a;}
>a : T
>T : T
>this.B = a : T
>this.B : T
>this : 本体
>B : T
>a : T

    foo(a: T)
>foo : { (a: T): 任意; (a: 任意): 任意; (b: 文字): 任意; }
>a : T
>T : T

    foo(a: any)
>foo : { (a: T): 任意; (a: 任意): 任意; (b: 文字): 任意; }
>a : 任意
>类型别名 :=> 任意

    foo(b: string)
>foo : { (a: T): 任意; (a: 任意): 任意; (b: 文字): 任意; }
>b : 文字
>类型别名 :=> 文字

    foo(): T {
>foo : { (a: T): 任意; (a: 任意): 任意; (b: 文字): 任意; }
>T : T

        return this.x;
>this.x : T
>this : 本体
>x : T
    }

    get BB(): T {
>BB : T
>T : T

        return this.B;
>this.B : T
>this : 本体
>B : T
    }
    set BBWith(c: T) {
>BBWith : T
>c : T
>T : T

        this.B = c;
>this.B = c : T
>this.B : T
>this : 本体
>B : T
>c : T
    }
}
