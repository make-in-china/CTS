=== tests/cases/compiler/nestedSelf.ts ===
module M {
>M : 类为 M

 export class C {
>C : C

   public n = 42;
>n : 数字
>类型别名 :=> 数字
>42 : 42

   public foo() { [1,2,3].map((x) => { return this.n * x; })}
>foo : () => 无值
>[1,2,3].map((x) => { return this.n * x; }) : 数字[]
>[1,2,3].map : <U>(callbackfn: (value: 数字, index: 数字, array: 数字[]) => U, thisArg?: 任意) => U[]
>[1,2,3] : 数字[]
>1 : 1
>2 : 2
>3 : 3
>map : <U>(callbackfn: (value: 数字, index: 数字, array: 数字[]) => U, thisArg?: 任意) => U[]
>(x) => { return this.n * x; } : (x: 数字) => 数字
>x : 数字
>类型别名 :=> 数字
>this.n * x : 数字
>类型别名 :=> 数字
>this.n : 数字
>类型别名 :=> 数字
>this : 本体
>n : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
 }
}


