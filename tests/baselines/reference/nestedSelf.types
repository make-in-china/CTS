=== tests/cases/compiler/nestedSelf.ts ===
module M {
>M : typeof M

 export class C {
>C : C

   public n = 42;
>n : number
>类型别名 :=> 数字
>42 : 42

   public foo() { [1,2,3].map((x) => { return this.n * x; })}
>foo : () => void
>[1,2,3].map((x) => { return this.n * x; }) : number[]
>[1,2,3].map : <U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U[]
>[1,2,3] : number[]
>1 : 1
>2 : 2
>3 : 3
>map : <U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U[]
>(x) => { return this.n * x; } : (x: number) => number
>x : number
>类型别名 :=> 数字
>this.n * x : number
>类型别名 :=> 数字
>this.n : number
>类型别名 :=> 数字
>this : this
>n : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
 }
}


