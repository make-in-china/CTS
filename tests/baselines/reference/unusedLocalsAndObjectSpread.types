=== tests/cases/compiler/unusedLocalsAndObjectSpread.ts ===
declare var console: { log(a: any): void };
>console : { log(a: 任意): 无值; }
>log : (a: 任意) => 无值
>a : 任意
>类型别名 :=> 任意

function one() {
>one : () => 无值

    const foo = { a: 1, b: 2 };
>foo : { a: 数字; b: 数字; }
>{ a: 1, b: 2 } : { a: 数字; b: 数字; }
>a : 数字
>类型别名 :=> 数字
>1 : 1
>b : 数字
>类型别名 :=> 数字
>2 : 2

    // 'a' is declared but never used
    const {a, ...bar} = foo;
>a : 数字
>类型别名 :=> 数字
>bar : { b: 数字; }
>foo : { a: 数字; b: 数字; }

    console.log(bar);
>console.log(bar) : 无值
>类型别名 :=> 无值
>console.log : (a: 任意) => 无值
>console : { log(a: 任意): 无值; }
>log : (a: 任意) => 无值
>bar : { b: 数字; }
}

function two() {
>two : () => 无值

    const foo = { a: 1, b: 2 };
>foo : { a: 数字; b: 数字; }
>{ a: 1, b: 2 } : { a: 数字; b: 数字; }
>a : 数字
>类型别名 :=> 数字
>1 : 1
>b : 数字
>类型别名 :=> 数字
>2 : 2

    // '_' is declared but never used
    const {a: _, ...bar} = foo;
>a : 任意
>类型别名 :=> 任意
>_ : 数字
>类型别名 :=> 数字
>bar : { b: 数字; }
>foo : { a: 数字; b: 数字; }

    console.log(bar);
>console.log(bar) : 无值
>类型别名 :=> 无值
>console.log : (a: 任意) => 无值
>console : { log(a: 任意): 无值; }
>log : (a: 任意) => 无值
>bar : { b: 数字; }
}

function three() {
>three : () => 无值

    const foo = { a: 1, b: 2 };
>foo : { a: 数字; b: 数字; }
>{ a: 1, b: 2 } : { a: 数字; b: 数字; }
>a : 数字
>类型别名 :=> 数字
>1 : 1
>b : 数字
>类型别名 :=> 数字
>2 : 2

    // 'a' is declared but never used
    const {a, ...bar} = foo; // bar should be unused
>a : 数字
>类型别名 :=> 数字
>bar : { b: 数字; }
>foo : { a: 数字; b: 数字; }

    //console.log(bar);
}

function four() {
>four : () => 无值

    const foo = { a: 1, b: 2 };
>foo : { a: 数字; b: 数字; }
>{ a: 1, b: 2 } : { a: 数字; b: 数字; }
>a : 数字
>类型别名 :=> 数字
>1 : 1
>b : 数字
>类型别名 :=> 数字
>2 : 2

    // '_' is declared but never used
    const {a: _, ...bar} = foo; // bar should be unused
>a : 任意
>类型别名 :=> 任意
>_ : 数字
>类型别名 :=> 数字
>bar : { b: 数字; }
>foo : { a: 数字; b: 数字; }

    //console.log(bar);
}

