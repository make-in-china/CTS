=== tests/cases/conformance/expressions/typeGuards/typeGuardsInFunction.ts ===
// Note that type guards affect types of variables and parameters only and 
// have no effect on members of objects such as properties. 

// variables in global
var num: number;
>num : 数字
>类型别名 :=> 数字

var var1: string | number;
>var1 : 文字 | 数字

// Inside function declaration
function f(param: string | number) {
>f : (param: 文字 | 数字) => 无值
>param : 文字 | 数字

    // global vars in function declaration
    num =  typeof var1 === "string" && var1.length; // string
>num =  typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

    // variables in function declaration
    var var2: string | number;
>var2 : 文字 | 数字

    num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

    // parameters in function declaration
    num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
}
// local function declaration
function f1(param: string | number) {
>f1 : (param: 文字 | 数字) => 无值
>param : 文字 | 数字

    var var2: string | number;
>var2 : 文字 | 数字

    function f2(param1: string | number) {
>f2 : (param1: 文字 | 数字) => 无值
>param1 : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables from outer function declaration
        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // parameters in outer declaration
        num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // local
        var var3: string | number;
>var3 : 文字 | 数字

        num = typeof var3 === "string" && var3.length; // string
>num = typeof var3 === "string" && var3.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var3 === "string" && var3.length : 数字
>类型别名 :=> 数字
>typeof var3 === "string" : 真假
>类型别名 :=> 真假
>typeof var3 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var3 : 文字 | 数字
>"string" : "string"
>var3.length : 数字
>类型别名 :=> 数字
>var3 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        num = typeof param1 === "string" && param1.length; // string
>num = typeof param1 === "string" && param1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param1 === "string" && param1.length : 数字
>类型别名 :=> 数字
>typeof param1 === "string" : 真假
>类型别名 :=> 真假
>typeof param1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param1 : 文字 | 数字
>"string" : "string"
>param1.length : 数字
>类型别名 :=> 数字
>param1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
    }
}
// Function expression
function f2(param: string | number) {
>f2 : (param: 文字 | 数字) => 无值
>param : 文字 | 数字

    // variables in function declaration
    var var2: string | number;
>var2 : 文字 | 数字

    // variables in function expressions
    var r = function (param1: string | number) {
>r : 无值
>类型别名 :=> 无值
>function (param1: string | number) {        // global vars in function declaration        num = typeof var1 === "string" && var1.length; // string        // variables from outer function declaration        num = typeof var2 === "string" && var2.length; // string        // parameters in outer declaration        num = typeof param === "string" && param.length; // string        // local        var var3: string | number;        num = typeof var3 === "string" && var3.length; // string        num = typeof param1 === "string" && param1.length; // string    } (param) : 无值
>类型别名 :=> 无值
>function (param1: string | number) {        // global vars in function declaration        num = typeof var1 === "string" && var1.length; // string        // variables from outer function declaration        num = typeof var2 === "string" && var2.length; // string        // parameters in outer declaration        num = typeof param === "string" && param.length; // string        // local        var var3: string | number;        num = typeof var3 === "string" && var3.length; // string        num = typeof param1 === "string" && param1.length; // string    } : (param1: 文字 | 数字) => 无值
>param1 : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables from outer function declaration
        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // parameters in outer declaration
        num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // local
        var var3: string | number;
>var3 : 文字 | 数字

        num = typeof var3 === "string" && var3.length; // string
>num = typeof var3 === "string" && var3.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var3 === "string" && var3.length : 数字
>类型别名 :=> 数字
>typeof var3 === "string" : 真假
>类型别名 :=> 真假
>typeof var3 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var3 : 文字 | 数字
>"string" : "string"
>var3.length : 数字
>类型别名 :=> 数字
>var3 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        num = typeof param1 === "string" && param1.length; // string
>num = typeof param1 === "string" && param1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param1 === "string" && param1.length : 数字
>类型别名 :=> 数字
>typeof param1 === "string" : 真假
>类型别名 :=> 真假
>typeof param1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param1 : 文字 | 数字
>"string" : "string"
>param1.length : 数字
>类型别名 :=> 数字
>param1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

    } (param);
>param : 文字 | 数字
}
// Arrow expression
function f3(param: string | number) {
>f3 : (param: 文字 | 数字) => 无值
>param : 文字 | 数字

    // variables in function declaration
    var var2: string | number;
>var2 : 文字 | 数字

    // variables in function expressions
    var r = ((param1: string | number) => {
>r : 无值
>类型别名 :=> 无值
>((param1: string | number) => {        // global vars in function declaration        num = typeof var1 === "string" && var1.length; // string        // variables from outer function declaration        num = typeof var2 === "string" && var2.length; // string        // parameters in outer declaration        num = typeof param === "string" && param.length; // string        // local        var var3: string | number;        num = typeof var3 === "string" && var3.length; // string        num = typeof param1 === "string" && param1.length; // string    })(param) : 无值
>类型别名 :=> 无值
>((param1: string | number) => {        // global vars in function declaration        num = typeof var1 === "string" && var1.length; // string        // variables from outer function declaration        num = typeof var2 === "string" && var2.length; // string        // parameters in outer declaration        num = typeof param === "string" && param.length; // string        // local        var var3: string | number;        num = typeof var3 === "string" && var3.length; // string        num = typeof param1 === "string" && param1.length; // string    }) : (param1: 文字 | 数字) => 无值
>(param1: string | number) => {        // global vars in function declaration        num = typeof var1 === "string" && var1.length; // string        // variables from outer function declaration        num = typeof var2 === "string" && var2.length; // string        // parameters in outer declaration        num = typeof param === "string" && param.length; // string        // local        var var3: string | number;        num = typeof var3 === "string" && var3.length; // string        num = typeof param1 === "string" && param1.length; // string    } : (param1: 文字 | 数字) => 无值
>param1 : 文字 | 数字

        // global vars in function declaration
        num = typeof var1 === "string" && var1.length; // string
>num = typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var1 === "string" && var1.length : 数字
>类型别名 :=> 数字
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // variables from outer function declaration
        num = typeof var2 === "string" && var2.length; // string
>num = typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var2 === "string" && var2.length : 数字
>类型别名 :=> 数字
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"
>var2.length : 数字
>类型别名 :=> 数字
>var2 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // parameters in outer declaration
        num = typeof param === "string" && param.length; // string
>num = typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param === "string" && param.length : 数字
>类型别名 :=> 数字
>typeof param === "string" : 真假
>类型别名 :=> 真假
>typeof param : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param : 文字 | 数字
>"string" : "string"
>param.length : 数字
>类型别名 :=> 数字
>param : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        // local
        var var3: string | number;
>var3 : 文字 | 数字

        num = typeof var3 === "string" && var3.length; // string
>num = typeof var3 === "string" && var3.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof var3 === "string" && var3.length : 数字
>类型别名 :=> 数字
>typeof var3 === "string" : 真假
>类型别名 :=> 真假
>typeof var3 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var3 : 文字 | 数字
>"string" : "string"
>var3.length : 数字
>类型别名 :=> 数字
>var3 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

        num = typeof param1 === "string" && param1.length; // string
>num = typeof param1 === "string" && param1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>typeof param1 === "string" && param1.length : 数字
>类型别名 :=> 数字
>typeof param1 === "string" : 真假
>类型别名 :=> 真假
>typeof param1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>param1 : 文字 | 数字
>"string" : "string"
>param1.length : 数字
>类型别名 :=> 数字
>param1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字

    })(param);
>param : 文字 | 数字
}
// Return type of function
// Inside function declaration
var strOrNum: string | number;
>strOrNum : 文字 | 数字

function f4() {
>f4 : () => 文字 | 数字

    var var2: string | number = strOrNum;
>var2 : 文字 | 数字
>strOrNum : 文字 | 数字

    return var2;
>var2 : 文字 | 数字
}
strOrNum = typeof f4() === "string" && f4(); // string | number 
>strOrNum = typeof f4() === "string" && f4() : 文字 | 数字
>strOrNum : 文字 | 数字
>typeof f4() === "string" && f4() : 文字 | 数字
>typeof f4() === "string" : 真假
>类型别名 :=> 真假
>typeof f4() : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>f4() : 文字 | 数字
>f4 : () => 文字 | 数字
>"string" : "string"
>f4() : 文字 | 数字
>f4 : () => 文字 | 数字

