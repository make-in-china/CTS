=== tests/cases/compiler/genericSpecializations2.ts ===
class IFoo<T> {
>IFoo : IFoo<T>
>T : T

    foo<T>(x: T): T { // no error on implementors because IFoo's T is different from foo's T
>foo : <T>(x: T) => T
>T : T
>x : T
>T : T
>T : T

        return null;
>null : 空值
>类型别名 :=> 空值
    }
}

class IntFooBad implements IFoo<number> {
>IntFooBad : IntFooBad
>IFoo : IFoo<T>

    foo<string>(x: string): string { return null; }
>foo : <string>(x: 文字) => 文字
>string : string
>x : 文字
>类型别名 :=> 文字
>null : 空值
>类型别名 :=> 空值
}

class StringFoo2 implements IFoo<string> {
>StringFoo2 : StringFoo2
>IFoo : IFoo<T>

    foo<string>(x: string): string { return null; }
>foo : <string>(x: 文字) => 文字
>string : string
>x : 文字
>类型别名 :=> 文字
>null : 空值
>类型别名 :=> 空值
}

class StringFoo3 implements IFoo<string> {
>StringFoo3 : StringFoo3
>IFoo : IFoo<T>

    foo<T>(x: T): T { return null; }
>foo : <T>(x: T) => T
>T : T
>x : T
>T : T
>T : T
>null : 空值
>类型别名 :=> 空值
}


