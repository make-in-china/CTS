=== tests/cases/compiler/callOverloadViaElementAccessExpression.ts ===
class C {
>C : C

    foo(x: number): number;
>foo : { (x: number): number; (x: string): string; }
>x : number
>类型别名 :=> 数字

    foo(x: string): string;
>foo : { (x: number): number; (x: string): string; }
>x : string
>类型别名 :=> 文字

    foo(x: any): any {
>foo : { (x: number): number; (x: string): string; }
>x : any
>类型别名 :=> 任意

        return null;
>null : null
>类型别名 :=> 空值
    }
}

var c = new C();
>c : C
>new C() : C
>C : typeof C

var r: string = c['foo'](1);
>r : string
>类型别名 :=> 文字
>c['foo'](1) : number
>类型别名 :=> 数字
>c['foo'] : { (x: number): number; (x: string): string; }
>c : C
>'foo' : "foo"
>1 : 1

var r2: number = c['foo']('');
>r2 : number
>类型别名 :=> 数字
>c['foo']('') : string
>类型别名 :=> 文字
>c['foo'] : { (x: number): number; (x: string): string; }
>c : C
>'foo' : "foo"
>'' : ""

