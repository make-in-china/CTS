=== tests/cases/compiler/callOverloadViaElementAccessExpression.ts ===
class C {
>C : C

    foo(x: number): number;
>foo : { (x: 数字): 数字; (x: 文字): 文字; }
>x : 数字
>类型别名 :=> 数字

    foo(x: string): string;
>foo : { (x: 数字): 数字; (x: 文字): 文字; }
>x : 文字
>类型别名 :=> 文字

    foo(x: any): any {
>foo : { (x: 数字): 数字; (x: 文字): 文字; }
>x : 任意
>类型别名 :=> 任意

        return null;
>null : 空值
>类型别名 :=> 空值
    }
}

var c = new C();
>c : C
>new C() : C
>C : 类为 C

var r: string = c['foo'](1);
>r : 文字
>类型别名 :=> 文字
>c['foo'](1) : 数字
>类型别名 :=> 数字
>c['foo'] : { (x: 数字): 数字; (x: 文字): 文字; }
>c : C
>'foo' : "foo"
>1 : 1

var r2: number = c['foo']('');
>r2 : 数字
>类型别名 :=> 数字
>c['foo']('') : 文字
>类型别名 :=> 文字
>c['foo'] : { (x: 数字): 数字; (x: 文字): 文字; }
>c : C
>'foo' : "foo"
>'' : ""

