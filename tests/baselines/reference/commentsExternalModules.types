=== tests/cases/compiler/commentsExternalModules_1.ts ===
/**This is on import declaration*/
import extMod = require("commentsExternalModules_0"); // trailing comment1
>extMod : 类为 extMod

extMod.m1.fooExport();
>extMod.m1.fooExport() : 数字
>类型别名 :=> 数字
>extMod.m1.fooExport : () => 数字
>extMod.m1 : 类为 extMod.m1
>extMod : 类为 extMod
>m1 : 类为 extMod.m1
>fooExport : () => 数字

var newVar = new extMod.m1.m2.c();
>newVar : extMod.m1.m2.c
>new extMod.m1.m2.c() : extMod.m1.m2.c
>extMod.m1.m2.c : 类为 extMod.m1.m2.c
>extMod.m1.m2 : 类为 extMod.m1.m2
>extMod.m1 : 类为 extMod.m1
>extMod : 类为 extMod
>m1 : 类为 extMod.m1
>m2 : 类为 extMod.m1.m2
>c : 类为 extMod.m1.m2.c

extMod.m4.fooExport();
>extMod.m4.fooExport() : 数字
>类型别名 :=> 数字
>extMod.m4.fooExport : () => 数字
>extMod.m4 : 类为 extMod.m4
>extMod : 类为 extMod
>m4 : 类为 extMod.m4
>fooExport : () => 数字

var newVar2 = new extMod.m4.m2.c();
>newVar2 : extMod.m4.m2.c
>new extMod.m4.m2.c() : extMod.m4.m2.c
>extMod.m4.m2.c : 类为 extMod.m4.m2.c
>extMod.m4.m2 : 类为 extMod.m4.m2
>extMod.m4 : 类为 extMod.m4
>extMod : 类为 extMod
>m4 : 类为 extMod.m4
>m2 : 类为 extMod.m4.m2
>c : 类为 extMod.m4.m2.c

=== tests/cases/compiler/commentsExternalModules_0.ts ===
/** Module comment*/
export module m1 {
>m1 : 类为 m1

    /** b's comment*/
    export var b: number;
>b : 数字
>类型别名 :=> 数字

    /** foo's comment*/
    function foo() {
>foo : () => 数字

        return b;
>b : 数字
>类型别名 :=> 数字
    }
    /** m2 comments*/
    export module m2 {
>m2 : 类为 m2

        /** class comment;*/
        export class c {
>c : c

        };
        /** i*/
        export var i = new c();
>i : c
>new c() : c
>c : 类为 c
    }
    /** exported function*/
    export function fooExport() {
>fooExport : () => 数字

        return foo();
>foo() : 数字
>类型别名 :=> 数字
>foo : () => 数字
    }
}
m1.fooExport();
>m1.fooExport() : 数字
>类型别名 :=> 数字
>m1.fooExport : () => 数字
>m1 : 类为 m1
>fooExport : () => 数字

var myvar = new m1.m2.c();
>myvar : m1.m2.c
>new m1.m2.c() : m1.m2.c
>m1.m2.c : 类为 m1.m2.c
>m1.m2 : 类为 m1.m2
>m1 : 类为 m1
>m2 : 类为 m1.m2
>c : 类为 m1.m2.c

/** Module comment */
export module m4 {
>m4 : 类为 m4

    /** b's comment */
    export var b: number;
>b : 数字
>类型别名 :=> 数字

    /** foo's comment
    */
    function foo() {
>foo : () => 数字

        return b;
>b : 数字
>类型别名 :=> 数字
    }
    /** m2 comments
    */
    export module m2 {
>m2 : 类为 m2

        /** class comment; */
        export class c {
>c : c

        };
        /** i */
        export var i = new c();
>i : c
>new c() : c
>c : 类为 c
    }
    /** exported function */
    export function fooExport() {
>fooExport : () => 数字

        return foo();
>foo() : 数字
>类型别名 :=> 数字
>foo : () => 数字
    }
}
m4.fooExport();
>m4.fooExport() : 数字
>类型别名 :=> 数字
>m4.fooExport : () => 数字
>m4 : 类为 m4
>fooExport : () => 数字

var myvar2 = new m4.m2.c();
>myvar2 : m4.m2.c
>new m4.m2.c() : m4.m2.c
>m4.m2.c : 类为 m4.m2.c
>m4.m2 : 类为 m4.m2
>m4 : 类为 m4
>m2 : 类为 m4.m2
>c : 类为 m4.m2.c

