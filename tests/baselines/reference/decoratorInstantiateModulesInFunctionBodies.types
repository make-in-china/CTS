=== tests/cases/conformance/decorators/class/a.ts ===
// from #3108
export var test = 'abc';
>test : string
>类型别名 :=> 文字
>'abc' : "abc"

=== tests/cases/conformance/decorators/class/b.ts ===
import { test } from './a';
>test : string
>类型别名 :=> 文字

function filter(handler: any) {
>filter : (handler: any) => (target: any, propertyKey: string) => void
>handler : any
>类型别名 :=> 任意

    return function (target: any, propertyKey: string) {
>function (target: any, propertyKey: string) {        // ...    } : (target: any, propertyKey: string) => void
>target : any
>类型别名 :=> 任意
>propertyKey : string
>类型别名 :=> 文字

        // ...
    };
}

class Wat {
>Wat : Wat

    @filter(() => test == 'abc')
>filter(() => test == 'abc') : (target: any, propertyKey: string) => void
>filter : (handler: any) => (target: any, propertyKey: string) => void
>() => test == 'abc' : () => boolean
>test == 'abc' : boolean
>类型别名 :=> 真假
>test : string
>类型别名 :=> 文字
>'abc' : "abc"

    static whatever() {
>whatever : () => void

        // ...
    }
}
