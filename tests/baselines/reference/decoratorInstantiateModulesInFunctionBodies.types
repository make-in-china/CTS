=== tests/cases/conformance/decorators/class/a.ts ===
// from #3108
export var test = 'abc';
>test : 文字
>类型别名 :=> 文字
>'abc' : "abc"

=== tests/cases/conformance/decorators/class/b.ts ===
import { test } from './a';
>test : 文字
>类型别名 :=> 文字

function filter(handler: any) {
>filter : (handler: 任意) => (target: 任意, propertyKey: 文字) => 无值
>handler : 任意
>类型别名 :=> 任意

    return function (target: any, propertyKey: string) {
>function (target: any, propertyKey: string) {        // ...    } : (target: 任意, propertyKey: 文字) => 无值
>target : 任意
>类型别名 :=> 任意
>propertyKey : 文字
>类型别名 :=> 文字

        // ...
    };
}

class Wat {
>Wat : Wat

    @filter(() => test == 'abc')
>filter(() => test == 'abc') : (target: 任意, propertyKey: 文字) => 无值
>filter : (handler: 任意) => (target: 任意, propertyKey: 文字) => 无值
>() => test == 'abc' : () => 真假
>test == 'abc' : 真假
>类型别名 :=> 真假
>test : 文字
>类型别名 :=> 文字
>'abc' : "abc"

    static whatever() {
>whatever : () => 无值

        // ...
    }
}
