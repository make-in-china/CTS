=== tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignatureWithoutAnnotationsOrBody.ts ===
// Call signatures without a return type annotation and function body return 'any'

function foo(x) { }
>foo : (x: 任意) => 无值
>x : 任意
>类型别名 :=> 任意

var r = foo(1); // void since there's a body
>r : 无值
>类型别名 :=> 无值
>foo(1) : 无值
>类型别名 :=> 无值
>foo : (x: 任意) => 无值
>1 : 1

interface I {
>I : I

    ();
    f();
>f : () => 任意
}
var i: I;
>i : I
>I : I

var r2 = i();
>r2 : 任意
>类型别名 :=> 任意
>i() : 任意
>类型别名 :=> 任意
>i : I

var r3 = i.f();
>r3 : 任意
>类型别名 :=> 任意
>i.f() : 任意
>类型别名 :=> 任意
>i.f : () => 任意
>i : I
>f : () => 任意

var a: {
>a : { (): 任意; f(): 任意; }

    ();
    f();
>f : () => 任意

};
var r4 = a();
>r4 : 任意
>类型别名 :=> 任意
>a() : 任意
>类型别名 :=> 任意
>a : { (): 任意; f(): 任意; }

var r5 = a.f();
>r5 : 任意
>类型别名 :=> 任意
>a.f() : 任意
>类型别名 :=> 任意
>a.f : () => 任意
>a : { (): 任意; f(): 任意; }
>f : () => 任意

