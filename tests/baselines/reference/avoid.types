=== tests/cases/compiler/avoid.ts ===
function f() {
>f : () => 无值

    var x=1;
>x : 数字
>类型别名 :=> 数字
>1 : 1
}

var y=f();  // error void fn
>y : 无值
>类型别名 :=> 无值
>f() : 无值
>类型别名 :=> 无值
>f : () => 无值

var why:any=f(); // error void fn
>why : 任意
>类型别名 :=> 任意
>f() : 无值
>类型别名 :=> 无值
>f : () => 无值

var w:any;
>w : 任意
>类型别名 :=> 任意

w=f(); // error void fn
>w=f() : 无值
>类型别名 :=> 无值
>w : 任意
>类型别名 :=> 任意
>f() : 无值
>类型别名 :=> 无值
>f : () => 无值

class C {
>C : C

    g() {
>g : () => 无值
        
    }
}

var z=new C().g(); // error void fn
>z : 无值
>类型别名 :=> 无值
>new C().g() : 无值
>类型别名 :=> 无值
>new C().g : () => 无值
>new C() : C
>C : 类为 C
>g : () => 无值

var N=new f();  // ok with void fn
>N : 任意
>类型别名 :=> 任意
>new f() : 任意
>类型别名 :=> 任意
>f : () => 无值


