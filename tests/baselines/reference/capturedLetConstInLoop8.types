=== tests/cases/compiler/capturedLetConstInLoop8.ts ===
function foo() {
>foo : () => "123" | "456"

    l0:
>l0 : 任意
>类型别名 :=> 任意

    for (let z = 0; z < 1; ++z) {
>z : 数字
>类型别名 :=> 数字
>0 : 0
>z < 1 : 真假
>类型别名 :=> 真假
>z : 数字
>类型别名 :=> 数字
>1 : 1
>++z : 数字
>类型别名 :=> 数字
>z : 数字
>类型别名 :=> 数字

        l1:
>l1 : 任意
>类型别名 :=> 任意

        for (let x = 0; x < 1; ++x) {
>x : 数字
>类型别名 :=> 数字
>0 : 0
>x < 1 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>1 : 1
>++x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

            ll1:
>ll1 : 任意
>类型别名 :=> 任意

            for (let y = 0; y < 1; ++y) {
>y : 数字
>类型别名 :=> 数字
>0 : 0
>y < 1 : 真假
>类型别名 :=> 真假
>y : 数字
>类型别名 :=> 数字
>1 : 1
>++y : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

                (function() { return x + y });
>(function() { return x + y }) : () => 数字
>function() { return x + y } : () => 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

                (() => x + y);
>(() => x + y) : () => 数字
>() => x + y : () => 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

                if (y == 1) {
>y == 1 : 真假
>类型别名 :=> 真假
>y : 数字
>类型别名 :=> 数字
>1 : 1

                    break;
                }
                if (y == 1) {
>y == 1 : 真假
>类型别名 :=> 真假
>y : 数字
>类型别名 :=> 数字
>1 : 1

                    break l1;
>l1 : 任意
>类型别名 :=> 任意
                }
                if (y == 1) {
>y == 1 : 真假
>类型别名 :=> 真假
>y : 数字
>类型别名 :=> 数字
>1 : 1

                    break ll1;
>ll1 : 任意
>类型别名 :=> 任意
                }
                if (y == 1) {
>y == 1 : 真假
>类型别名 :=> 真假
>y : 数字
>类型别名 :=> 数字
>1 : 1

                    continue l0;
>l0 : 任意
>类型别名 :=> 任意
                }

                if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>2 : 2

                    continue;
                }
                if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>2 : 2

                    continue l1;
>l1 : 任意
>类型别名 :=> 任意
                }
                if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>2 : 2

                    continue ll1;
>ll1 : 任意
>类型别名 :=> 任意
                }
                if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>2 : 2

                    return "123"
>"123" : "123"
                }
                if (x == 3) {
>x == 3 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>3 : 3

                    return;
                }
            }
            if (x == 1) {
>x == 1 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>1 : 1

                break;
            }
            if (x == 1) {
>x == 1 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>1 : 1

                break l1;
>l1 : 任意
>类型别名 :=> 任意
            }
            if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>2 : 2

                continue;
            }
            if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>2 : 2

                continue l1;
>l1 : 任意
>类型别名 :=> 任意
            }
            if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>2 : 2

                continue l0;
>l0 : 任意
>类型别名 :=> 任意
            }
            if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>2 : 2

                return "456";
>"456" : "456"
            }
            if (x == 3) {
>x == 3 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>3 : 3

                return;
            }
        }
    }
}

function foo_c() {
>foo_c : () => "123" | "456"

    l0:
>l0 : 任意
>类型别名 :=> 任意

    for (const z = 0; z < 1;) {
>z : 0
>0 : 0
>z < 1 : 真假
>类型别名 :=> 真假
>z : 0
>1 : 1

        l1:
>l1 : 任意
>类型别名 :=> 任意

        for (const x = 0; x < 1;) {
>x : 0
>0 : 0
>x < 1 : 真假
>类型别名 :=> 真假
>x : 0
>1 : 1

            ll1:
>ll1 : 任意
>类型别名 :=> 任意

            for (const y = 0; y < 1;) {
>y : 0
>0 : 0
>y < 1 : 真假
>类型别名 :=> 真假
>y : 0
>1 : 1

                (function() { return x + y });
>(function() { return x + y }) : () => 数字
>function() { return x + y } : () => 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 0
>y : 0

                (() => x + y);
>(() => x + y) : () => 数字
>() => x + y : () => 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 0
>y : 0

                if (y == 1) {
>y == 1 : 真假
>类型别名 :=> 真假
>y : 0
>1 : 1

                    break;
                }
                if (y == 1) {
>y == 1 : 真假
>类型别名 :=> 真假
>y : 0
>1 : 1

                    break l1;
>l1 : 任意
>类型别名 :=> 任意
                }
                if (y == 1) {
>y == 1 : 真假
>类型别名 :=> 真假
>y : 0
>1 : 1

                    break ll1;
>ll1 : 任意
>类型别名 :=> 任意
                }
                if (y == 1) {
>y == 1 : 真假
>类型别名 :=> 真假
>y : 0
>1 : 1

                    continue l0;
>l0 : 任意
>类型别名 :=> 任意
                }

                if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 0
>2 : 2

                    continue;
                }
                if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 0
>2 : 2

                    continue l1;
>l1 : 任意
>类型别名 :=> 任意
                }
                if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 0
>2 : 2

                    continue ll1;
>ll1 : 任意
>类型别名 :=> 任意
                }
                if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 0
>2 : 2

                    return "123"
>"123" : "123"
                }
                if (x == 3) {
>x == 3 : 真假
>类型别名 :=> 真假
>x : 0
>3 : 3

                    return;
                }
            }
            if (x == 1) {
>x == 1 : 真假
>类型别名 :=> 真假
>x : 0
>1 : 1

                break;
            }
            if (x == 1) {
>x == 1 : 真假
>类型别名 :=> 真假
>x : 0
>1 : 1

                break l1;
>l1 : 任意
>类型别名 :=> 任意
            }
            if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 0
>2 : 2

                continue;
            }
            if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 0
>2 : 2

                continue l1;
>l1 : 任意
>类型别名 :=> 任意
            }
            if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 0
>2 : 2

                continue l0;
>l0 : 任意
>类型别名 :=> 任意
            }
            if (x == 2) {
>x == 2 : 真假
>类型别名 :=> 真假
>x : 0
>2 : 2

                return "456";
>"456" : "456"
            }
            if (x == 3) {
>x == 3 : 真假
>类型别名 :=> 真假
>x : 0
>3 : 3

                return;
            }
        }
    }
}

