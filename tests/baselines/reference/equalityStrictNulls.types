=== tests/cases/conformance/types/typeRelationships/comparable/equalityStrictNulls.ts ===
function f1(x: string) {
>f1 : (x: string) => void
>x : string
>类型别名 :=> 文字

    if (x == undefined) {
>x == undefined : boolean
>类型别名 :=> 真假
>x : string
>类型别名 :=> 文字
>undefined : undefined
>类型别名 :=> 未定
    }
    if (x != undefined) {
>x != undefined : boolean
>类型别名 :=> 真假
>x : string
>类型别名 :=> 文字
>undefined : undefined
>类型别名 :=> 未定
    }
    if (x === undefined) {
>x === undefined : boolean
>类型别名 :=> 真假
>x : string
>类型别名 :=> 文字
>undefined : undefined
>类型别名 :=> 未定
    }
    if (x !== undefined) {
>x !== undefined : boolean
>类型别名 :=> 真假
>x : string
>类型别名 :=> 文字
>undefined : undefined
>类型别名 :=> 未定
    }
    if (x == null) {
>x == null : boolean
>类型别名 :=> 真假
>x : string
>类型别名 :=> 文字
>null : null
>类型别名 :=> 空值
    }
    if (x != null) {
>x != null : boolean
>类型别名 :=> 真假
>x : string
>类型别名 :=> 文字
>null : null
>类型别名 :=> 空值
    }
    if (x === null) {
>x === null : boolean
>类型别名 :=> 真假
>x : string
>类型别名 :=> 文字
>null : null
>类型别名 :=> 空值
    }
    if (x !== null) {
>x !== null : boolean
>类型别名 :=> 真假
>x : string
>类型别名 :=> 文字
>null : null
>类型别名 :=> 空值
    }
    if (undefined == x) {
>undefined == x : boolean
>类型别名 :=> 真假
>undefined : undefined
>类型别名 :=> 未定
>x : string
>类型别名 :=> 文字
    }
    if (undefined != x) {
>undefined != x : boolean
>类型别名 :=> 真假
>undefined : undefined
>类型别名 :=> 未定
>x : string
>类型别名 :=> 文字
    }
    if (undefined === x) {
>undefined === x : boolean
>类型别名 :=> 真假
>undefined : undefined
>类型别名 :=> 未定
>x : string
>类型别名 :=> 文字
    }
    if (undefined !== x) {
>undefined !== x : boolean
>类型别名 :=> 真假
>undefined : undefined
>类型别名 :=> 未定
>x : string
>类型别名 :=> 文字
    }
    if (null == x) {
>null == x : boolean
>类型别名 :=> 真假
>null : null
>类型别名 :=> 空值
>x : string
>类型别名 :=> 文字
    }
    if (null != x) {
>null != x : boolean
>类型别名 :=> 真假
>null : null
>类型别名 :=> 空值
>x : string
>类型别名 :=> 文字
    }
    if (null === x) {
>null === x : boolean
>类型别名 :=> 真假
>null : null
>类型别名 :=> 空值
>x : string
>类型别名 :=> 文字
    }
    if (null !== x) {
>null !== x : boolean
>类型别名 :=> 真假
>null : null
>类型别名 :=> 空值
>x : string
>类型别名 :=> 文字
    }
}

function f2() {
>f2 : () => void

    if (undefined == undefined) {
>undefined == undefined : boolean
>类型别名 :=> 真假
>undefined : undefined
>类型别名 :=> 未定
>undefined : undefined
>类型别名 :=> 未定
    }
    if (undefined == null) {
>undefined == null : boolean
>类型别名 :=> 真假
>undefined : undefined
>类型别名 :=> 未定
>null : null
>类型别名 :=> 空值
    }
    if (null == undefined) {
>null == undefined : boolean
>类型别名 :=> 真假
>null : null
>类型别名 :=> 空值
>undefined : undefined
>类型别名 :=> 未定
    }
    if (null == null) {
>null == null : boolean
>类型别名 :=> 真假
>null : null
>类型别名 :=> 空值
>null : null
>类型别名 :=> 空值
    }
}

function f3(a: number, b: boolean, c: { x: number }, d: number | string) {
>f3 : (a: number, b: boolean, c: { x: number; }, d: string | number) => void
>a : number
>类型别名 :=> 数字
>b : boolean
>类型别名 :=> 真假
>c : { x: number; }
>x : number
>类型别名 :=> 数字
>d : string | number

    if (a == null) {
>a == null : boolean
>类型别名 :=> 真假
>a : number
>类型别名 :=> 数字
>null : null
>类型别名 :=> 空值
    }
    if (b == null) {
>b == null : boolean
>类型别名 :=> 真假
>b : boolean
>类型别名 :=> 真假
>null : null
>类型别名 :=> 空值
    }
    if (c == null) {
>c == null : boolean
>类型别名 :=> 真假
>c : { x: number; }
>null : null
>类型别名 :=> 空值
    }
    if (d == null) {
>d == null : boolean
>类型别名 :=> 真假
>d : string | number
>null : null
>类型别名 :=> 空值
    }
}

function f4(x: number) {
>f4 : (x: number) => void
>x : number
>类型别名 :=> 数字

    if (x > undefined) {
>x > undefined : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>undefined : undefined
>类型别名 :=> 未定
    }
    if (x < undefined) {
>x < undefined : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>undefined : undefined
>类型别名 :=> 未定
    }
    if (x >= undefined) {
>x >= undefined : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>undefined : undefined
>类型别名 :=> 未定
    }
    if (x <= undefined) {
>x <= undefined : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>undefined : undefined
>类型别名 :=> 未定
    }
}
function f5(x: string) {
>f5 : (x: string) => void
>x : string
>类型别名 :=> 文字

    switch(x) {
>x : string
>类型别名 :=> 文字

        case null:
>null : null
>类型别名 :=> 空值

            break;
        case undefined:
>undefined : undefined
>类型别名 :=> 未定

            break;
        default:
            return;
    }
}

