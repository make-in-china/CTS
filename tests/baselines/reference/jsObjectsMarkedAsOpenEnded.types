=== tests/cases/conformance/salsa/a.js ===
var variable = {};
>variable : { [x: 文字]: 任意; }
>{} : { [x: 文字]: 任意; }

variable.a = 0;
>variable.a = 0 : 0
>variable.a : 任意
>类型别名 :=> 任意
>variable : { [x: 文字]: 任意; }
>a : 任意
>类型别名 :=> 任意
>0 : 0

class C {
>C : C

    initializedMember = {};
>initializedMember : { [x: 文字]: 任意; }
>{} : { [x: 文字]: 任意; }

    constructor() {
        this.member = {};
>this.member = {} : { [x: 文字]: 任意; }
>this.member : { [x: 文字]: 任意; }
>this : 本体
>member : { [x: 文字]: 任意; }
>{} : { [x: 文字]: 任意; }

        this.member.a = 0;
>this.member.a = 0 : 0
>this.member.a : 任意
>类型别名 :=> 任意
>this.member : { [x: 文字]: 任意; }
>this : 本体
>member : { [x: 文字]: 任意; }
>a : 任意
>类型别名 :=> 任意
>0 : 0
    }
}

var obj = {
>obj : { [x: 文字]: 任意; property: { [x: 文字]: 任意; }; }
>{    property: {}} : { [x: 文字]: 任意; property: { [x: 文字]: 任意; }; }

    property: {}
>property : { [x: 文字]: 任意; }
>{} : { [x: 文字]: 任意; }

};

obj.property.a = 0;
>obj.property.a = 0 : 0
>obj.property.a : 任意
>类型别名 :=> 任意
>obj.property : { [x: 文字]: 任意; }
>obj : { [x: 文字]: 任意; property: { [x: 文字]: 任意; }; }
>property : { [x: 文字]: 任意; }
>a : 任意
>类型别名 :=> 任意
>0 : 0

var arr = [{}];
>arr : { [x: 文字]: 任意; }[]
>[{}] : { [x: 文字]: 任意; }[]
>{} : { [x: 文字]: 任意; }

function getObj() {
>getObj : () => { [x: 文字]: 任意; }

    return {};
>{} : { [x: 文字]: 任意; }
}


=== tests/cases/conformance/salsa/b.ts ===
variable.a = 1;
>variable.a = 1 : 1
>variable.a : 任意
>类型别名 :=> 任意
>variable : { [x: 文字]: 任意; }
>a : 任意
>类型别名 :=> 任意
>1 : 1

(new C()).member.a = 1;
>(new C()).member.a = 1 : 1
>(new C()).member.a : 任意
>类型别名 :=> 任意
>(new C()).member : { [x: 文字]: 任意; }
>(new C()) : C
>new C() : C
>C : 类为 C
>member : { [x: 文字]: 任意; }
>a : 任意
>类型别名 :=> 任意
>1 : 1

(new C()).initializedMember.a = 1;
>(new C()).initializedMember.a = 1 : 1
>(new C()).initializedMember.a : 任意
>类型别名 :=> 任意
>(new C()).initializedMember : { [x: 文字]: 任意; }
>(new C()) : C
>new C() : C
>C : 类为 C
>initializedMember : { [x: 文字]: 任意; }
>a : 任意
>类型别名 :=> 任意
>1 : 1

obj.property.a = 1;
>obj.property.a = 1 : 1
>obj.property.a : 任意
>类型别名 :=> 任意
>obj.property : { [x: 文字]: 任意; }
>obj : { [x: 文字]: 任意; property: { [x: 文字]: 任意; }; }
>property : { [x: 文字]: 任意; }
>a : 任意
>类型别名 :=> 任意
>1 : 1

arr[0].a = 1;
>arr[0].a = 1 : 1
>arr[0].a : 任意
>类型别名 :=> 任意
>arr[0] : { [x: 文字]: 任意; }
>arr : { [x: 文字]: 任意; }[]
>0 : 0
>a : 任意
>类型别名 :=> 任意
>1 : 1

getObj().a = 1;
>getObj().a = 1 : 1
>getObj().a : 任意
>类型别名 :=> 任意
>getObj() : { [x: 文字]: 任意; }
>getObj : () => { [x: 文字]: 任意; }
>a : 任意
>类型别名 :=> 任意
>1 : 1


