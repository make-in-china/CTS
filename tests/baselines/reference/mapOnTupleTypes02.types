=== tests/cases/compiler/mapOnTupleTypes02.ts ===
export type Point = [number, number];
>Point : [数字, 数字]

export function increment(point: Point) {
>increment : (point: [数字, 数字]) => 数字[]
>point : [数字, 数字]
>Point : [数字, 数字]

  return point.map(d => d + 1);
>point.map(d => d + 1) : 数字[]
>point.map : <U>(callbackfn: (value: 数字, index: 数字, array: 数字[]) => U, thisArg?: 任意) => U[]
>point : [数字, 数字]
>map : <U>(callbackfn: (value: 数字, index: 数字, array: 数字[]) => U, thisArg?: 任意) => U[]
>d => d + 1 : (d: 数字) => 数字
>d : 数字
>类型别名 :=> 数字
>d + 1 : 数字
>类型别名 :=> 数字
>d : 数字
>类型别名 :=> 数字
>1 : 1
}
