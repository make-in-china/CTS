=== tests/cases/compiler/foo.d.ts ===
declare module "foo" {
    export class Foo {
>Foo : Foo

        constructor();
        method1(): any;
>method1 : () => 任意
    }
}

=== tests/cases/compiler/foo-ext.d.ts ===
declare module "foo" {
    export interface Foo {
>Foo : Foo

        method2(): any;
>method2 : () => 任意
    }
}

=== tests/cases/compiler/index.ts ===
import * as foo from "foo";
>foo : 类为 foo

class Test {
>Test : Test

    bar: foo.Foo;
>bar : foo.Foo
>foo : 任意
>类型别名 :=> 任意
>Foo : foo.Foo

    constructor() {
        this.bar = new foo.Foo();
>this.bar = new foo.Foo() : foo.Foo
>this.bar : foo.Foo
>this : 本体
>bar : foo.Foo
>new foo.Foo() : foo.Foo
>foo.Foo : 类为 foo.Foo
>foo : 类为 foo
>Foo : 类为 foo.Foo
    }
}

