=== tests/cases/conformance/es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesAssignmentErrorFromMissingIdentifier.ts ===
var id: number = 10000;
>id : number
>类型别名 :=> 数字
>10000 : 10000

var name: string = "my name";
>name : string
>类型别名 :=> 文字
>"my name" : "my name"

var person: { b: string; id: number } = { name, id };  // error
>person : { b: string; id: number; }
>b : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字
>{ name, id } : { name: string; id: number; }
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字

function bar(name: string, id: number): { name: number, id: string } { return { name, id }; }  // error
>bar : (name: string, id: number) => { name: number; id: string; }
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字
>name : number
>类型别名 :=> 数字
>id : string
>类型别名 :=> 文字
>{ name, id } : { name: string; id: number; }
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字

function foo(name: string, id: number): { name: string, id: number } { return { name, id }; }  // error
>foo : (name: string, id: number) => { name: string; id: number; }
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字
>{ name, id } : { name: string; id: number; }
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字

var person1: { name, id }; // ok
>person1 : { name: any; id: any; }
>name : any
>类型别名 :=> 任意
>id : any
>类型别名 :=> 任意

var person2: { name: string, id: number } = bar("hello", 5);
>person2 : { name: string; id: number; }
>name : string
>类型别名 :=> 文字
>id : number
>类型别名 :=> 数字
>bar("hello", 5) : { name: number; id: string; }
>bar : (name: string, id: number) => { name: number; id: string; }
>"hello" : "hello"
>5 : 5

