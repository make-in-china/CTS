=== tests/cases/compiler/parameterNamesInTypeParameterList.ts ===
function f0<T extends typeof a>(a: T) {
>f0 : <T 扩展 任意>(a: T) => 无值
>T : T
>a : 任意
>类型别名 :=> 任意
>a : T
>T : T

	a.b;
>a.b : 任意
>类型别名 :=> 任意
>a : T
>b : 任意
>类型别名 :=> 任意
}

function f1<T extends typeof a>({a}: {a:T}) {
>f1 : <T 扩展 任意>({ a }: { a: T; }) => 无值
>T : T
>a : 任意
>类型别名 :=> 任意
>a : T
>a : T
>T : T

	a.b;
>a.b : 任意
>类型别名 :=> 任意
>a : T
>b : 任意
>类型别名 :=> 任意
}

function f2<T extends typeof a>([a]: T[]) {
>f2 : <T 扩展 任意>([a]: T[]) => 无值
>T : T
>a : 任意
>类型别名 :=> 任意
>a : T
>T : T

	a.b;
>a.b : 任意
>类型别名 :=> 任意
>a : T
>b : 任意
>类型别名 :=> 任意
}

class A {
>A : A

	m0<T extends typeof a>(a: T) {
>m0 : <T 扩展 任意>(a: T) => 无值
>T : T
>a : 任意
>类型别名 :=> 任意
>a : T
>T : T

		a.b
>a.b : 任意
>类型别名 :=> 任意
>a : T
>b : 任意
>类型别名 :=> 任意
	}
	m1<T extends typeof a>({a}: {a:T}) {
>m1 : <T 扩展 任意>({ a }: { a: T; }) => 无值
>T : T
>a : 任意
>类型别名 :=> 任意
>a : T
>a : T
>T : T

		a.b
>a.b : 任意
>类型别名 :=> 任意
>a : T
>b : 任意
>类型别名 :=> 任意
	}
	m2<T extends typeof a>([a]: T[]) {
>m2 : <T 扩展 任意>([a]: T[]) => 无值
>T : T
>a : 任意
>类型别名 :=> 任意
>a : T
>T : T

		a.b
>a.b : 任意
>类型别名 :=> 任意
>a : T
>b : 任意
>类型别名 :=> 任意
	}
}
