=== tests/cases/compiler/augmentedTypesModules2.ts ===
// module then function
module m2 { }
>m2 : () => 无值

function m2() { }; // ok since the module is not instantiated
>m2 : () => 无值

module m2a { var y = 2; }
>m2a : 类为 m2a
>y : 数字
>类型别名 :=> 数字
>2 : 2

function m2a() { }; // error since the module is instantiated
>m2a : 类为 m2a

module m2b { export var y = 2; }
>m2b : 类为 m2b
>y : 数字
>类型别名 :=> 数字
>2 : 2

function m2b() { };  // error since the module is instantiated
>m2b : 类为 m2b

function m2c() { }; 
>m2c : 类为 m2c

module m2c { export var y = 2; } 
>m2c : 类为 m2c
>y : 数字
>类型别名 :=> 数字
>2 : 2

module m2cc { export var y = 2; }
>m2cc : 类为 m2cc
>y : 数字
>类型别名 :=> 数字
>2 : 2

function m2cc() { }; // error to have module first
>m2cc : 类为 m2cc

module m2d { }
>m2d : () => 无值

declare function m2d(): void; 
>m2d : () => 无值

declare function m2e(): void; 
>m2e : () => 无值

module m2e { }
>m2e : () => 无值

function m2f() { };
>m2f : () => 无值

module m2f { export interface I { foo(): void } } 
>m2f : () => 无值
>I : I
>foo : () => 无值

function m2g() { };
>m2g : 类为 m2g

module m2g { export class C { foo() { } } } 
>m2g : 类为 m2g
>C : C
>foo : () => 无值

