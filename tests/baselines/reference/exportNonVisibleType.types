=== tests/cases/conformance/externalModules/foo1.ts ===
interface I1 {
>I1 : I1

	a: string;
>a : 文字
>类型别名 :=> 文字

	b: number;
>b : 数字
>类型别名 :=> 数字
}

var x: I1 = {a: "test", b: 42};
>x : I1
>I1 : I1
>{a: "test", b: 42} : { a: 文字; b: 数字; }
>a : 文字
>类型别名 :=> 文字
>"test" : "test"
>b : 数字
>类型别名 :=> 数字
>42 : 42

export = x; // Should fail, I1 not exported.
>x : I1


=== tests/cases/conformance/externalModules/foo2.ts ===
interface I1 {
>I1 : I1

	a: string;
>a : 文字
>类型别名 :=> 文字

	b: number;
>b : 数字
>类型别名 :=> 数字
}

class C1 {
>C1 : C1

	m1: I1;
>m1 : I1
>I1 : I1
}

export = C1; // Should fail, type I1 of visible member C1.m1 not exported.
>C1 : C1

=== tests/cases/conformance/externalModules/foo3.ts ===
interface I1 {
>I1 : I1

	a: string;
>a : 文字
>类型别名 :=> 文字

	b: number;
>b : 数字
>类型别名 :=> 数字
}

class C1 {
>C1 : C1

	private m1: I1;
>m1 : I1
>I1 : I1
}

export = C1; // Should work, private type I1 of visible class C1 only used in private member m1.
>C1 : C1

