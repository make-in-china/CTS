=== tests/cases/conformance/jsx/file.tsx ===
import React = require('react');
>React : typeof React

interface ComponentProps {
>ComponentProps : ComponentProps

    property1: string;
>property1 : string
>类型别名 :=> 文字

    property2: number;
>property2 : number
>类型别名 :=> 数字
}

export default function Component(props: ComponentProps) {
>Component : (props: ComponentProps) => JSX.Element
>props : ComponentProps
>ComponentProps : ComponentProps

    return (
>(        <AnotherComponent {...props} property2 AnotherProperty1="hi"/>    ) : JSX.Element

        <AnotherComponent {...props} property2 AnotherProperty1="hi"/>
><AnotherComponent {...props} property2 AnotherProperty1="hi"/> : JSX.Element
>AnotherComponent : ({ property1 }: AnotherComponentProps) => JSX.Element
>props : ComponentProps
>property2 : true
>类型别名 :=> 为真
>AnotherProperty1 : string
>类型别名 :=> 文字

    );
}

interface AnotherComponentProps {
>AnotherComponentProps : AnotherComponentProps

    property1: string;
>property1 : string
>类型别名 :=> 文字

    AnotherProperty1: string;
>AnotherProperty1 : string
>类型别名 :=> 文字

    property2: boolean;
>property2 : boolean
>类型别名 :=> 真假
}

function AnotherComponent({ property1 }: AnotherComponentProps) {
>AnotherComponent : ({ property1 }: AnotherComponentProps) => JSX.Element
>property1 : string
>类型别名 :=> 文字
>AnotherComponentProps : AnotherComponentProps

    return (
>(        <span>{property1}</span>    ) : JSX.Element

        <span>{property1}</span>
><span>{property1}</span> : JSX.Element
>span : any
>类型别名 :=> 任意
>property1 : string
>类型别名 :=> 文字
>span : any
>类型别名 :=> 任意

    );
}
