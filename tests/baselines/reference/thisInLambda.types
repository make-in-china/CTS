=== tests/cases/compiler/thisInLambda.ts ===
class Foo {
>Foo : Foo

    x = "hello";
>x : string
>类型别名 :=> 文字
>"hello" : "hello"

    bar() {
>bar : () => void

        this.x; // 'this' is type 'Foo'
>this.x : string
>类型别名 :=> 文字
>this : this
>x : string
>类型别名 :=> 文字

        var f = () => this.x; // 'this' should be type 'Foo' as well
>f : () => string
>() => this.x : () => string
>this.x : string
>类型别名 :=> 文字
>this : this
>x : string
>类型别名 :=> 文字
    }
}

function myFn(a:any) { }
>myFn : (a: any) => void
>a : any
>类型别名 :=> 任意

class myCls {
>myCls : myCls

    constructor () {
        myFn(() => {
>myFn(() => {            myFn(() => {                var x = this;            });        }) : void
>类型别名 :=> 无值
>myFn : (a: any) => void
>() => {            myFn(() => {                var x = this;            });        } : () => void

            myFn(() => {
>myFn(() => {                var x = this;            }) : void
>类型别名 :=> 无值
>myFn : (a: any) => void
>() => {                var x = this;            } : () => void

                var x = this;
>x : this
>this : this

            });
        });
    }
}
