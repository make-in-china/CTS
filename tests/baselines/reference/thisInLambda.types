=== tests/cases/compiler/thisInLambda.ts ===
class Foo {
>Foo : Foo

    x = "hello";
>x : 文字
>类型别名 :=> 文字
>"hello" : "hello"

    bar() {
>bar : () => 无值

        this.x; // 'this' is type 'Foo'
>this.x : 文字
>类型别名 :=> 文字
>this : 本体
>x : 文字
>类型别名 :=> 文字

        var f = () => this.x; // 'this' should be type 'Foo' as well
>f : () => 文字
>() => this.x : () => 文字
>this.x : 文字
>类型别名 :=> 文字
>this : 本体
>x : 文字
>类型别名 :=> 文字
    }
}

function myFn(a:any) { }
>myFn : (a: 任意) => 无值
>a : 任意
>类型别名 :=> 任意

class myCls {
>myCls : myCls

    constructor () {
        myFn(() => {
>myFn(() => {            myFn(() => {                var x = this;            });        }) : 无值
>类型别名 :=> 无值
>myFn : (a: 任意) => 无值
>() => {            myFn(() => {                var x = this;            });        } : () => 无值

            myFn(() => {
>myFn(() => {                var x = this;            }) : 无值
>类型别名 :=> 无值
>myFn : (a: 任意) => 无值
>() => {                var x = this;            } : () => 无值

                var x = this;
>x : 本体
>this : 本体

            });
        });
    }
}
