=== tests/cases/conformance/externalModules/a.ts ===
import * as Foo from './foo';
>Foo : 类为 Foo

Foo.fn();
>Foo.fn() : 无值
>类型别名 :=> 无值
>Foo.fn : () => 无值
>Foo : 类为 Foo
>fn : () => 无值

let x: Foo.Thing;
>x : Foo.Thing
>Foo : 任意
>类型别名 :=> 任意
>Thing : Foo.Thing

let y: number = x.n;
>y : 数字
>类型别名 :=> 数字
>x.n : 数字
>类型别名 :=> 数字
>x : Foo.Thing
>n : 数字
>类型别名 :=> 数字

=== tests/cases/conformance/externalModules/foo.d.ts ===
export var x: number;
>x : 数字
>类型别名 :=> 数字

export function fn(): void;
>fn : () => 无值

export interface Thing { n: typeof x }
>Thing : Thing
>n : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

export as namespace Foo;
>Foo : 类为 "tests/cases/conformance/externalModules/foo"

