=== tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/classExtendsItselfIndirectly2.ts ===
class C extends N.E { foo: string; } // error
>C : C
>N.E : 类为 N.E
>N : 类为 N
>E : 类为 N.E
>foo : 文字
>类型别名 :=> 文字

module M {
>M : 类为 M

    export class D extends C { bar: string; }
>D : D
>C : 类为 C
>bar : 文字
>类型别名 :=> 文字

}

module N {
>N : 类为 N

    export class E extends M.D { baz: number; }
>E : E
>M.D : 类为 M.D
>M : 类为 M
>D : 类为 M.D
>baz : 数字
>类型别名 :=> 数字
}

module O {
>O : 类为 O

    class C2<T> extends Q.E2<T> { foo: T; } // error
>C2 : C2<T>
>T : T
>Q.E2 : 类为 Q.E2
>Q : 类为 Q
>E2 : 类为 Q.E2
>T : T
>foo : T
>T : T

    module P {
>P : 类为 P

        export class D2<T> extends C2<T> { bar: T; }
>D2 : D2<T>
>T : T
>C2 : 类为 C2
>T : T
>bar : T
>T : T
    }

    module Q {
>Q : 类为 Q

        export class E2<T> extends P.D2<T> { baz: T; }
>E2 : E2<T>
>T : T
>P.D2 : 类为 P.D2
>P : 类为 P
>D2 : 类为 P.D2
>T : T
>baz : T
>T : T
    }
}
