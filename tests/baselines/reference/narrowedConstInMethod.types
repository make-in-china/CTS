=== tests/cases/compiler/narrowedConstInMethod.ts ===
// Fixes #10501, possibly null 'x'
function f() {
>f : () => { bar(): number; } | undefined

    const x: string | null = <any>{};
>x : string | null
>null : null
>类型别名 :=> 空值
><any>{} : any
>类型别名 :=> 任意
>{} : {}

    if (x !== null) {
>x !== null : boolean
>类型别名 :=> 真假
>x : string | null
>null : null
>类型别名 :=> 空值

        return {
>{            bar() { return x.length; }  // ok        } : { bar(): number; }

            bar() { return x.length; }  // ok
>bar : () => number
>x.length : number
>类型别名 :=> 数字
>x : string
>类型别名 :=> 文字
>length : number
>类型别名 :=> 数字

        };
    }
}

function f2() {
>f2 : () => typeof (Anonymous class) | undefined

    const x: string | null = <any>{};
>x : string | null
>null : null
>类型别名 :=> 空值
><any>{} : any
>类型别名 :=> 任意
>{} : {}

    if (x !== null) {
>x !== null : boolean
>类型别名 :=> 真假
>x : string | null
>null : null
>类型别名 :=> 空值

        return class {
>class {            bar() { return x.length; }  // ok        } : typeof (Anonymous class)

            bar() { return x.length; }  // ok
>bar : () => number
>x.length : number
>类型别名 :=> 数字
>x : string
>类型别名 :=> 文字
>length : number
>类型别名 :=> 数字

        };
    }
}

