=== tests/cases/compiler/overloadOnConstConstraintChecks3.ts ===
class A { private x = 1} 
>A : A
>x : 数字
>类型别名 :=> 数字
>1 : 1

class B extends A {}
>B : B
>A : A

class C extends A {
>C : C
>A : A

    public foo() { }
>foo : () => 无值
}
function foo(name: 'hi'): B;
>foo : { (name: "hi"): B; (name: "bye"): C; (name: 文字): A; }
>name : "hi"
>B : B

function foo(name: 'bye'): C;
>foo : { (name: "hi"): B; (name: "bye"): C; (name: 文字): A; }
>name : "bye"
>C : C

function foo(name: string): A;
>foo : { (name: "hi"): B; (name: "bye"): C; (name: 文字): A; }
>name : 文字
>类型别名 :=> 文字
>A : A

function foo(name: any): A {
>foo : { (name: "hi"): B; (name: "bye"): C; (name: 文字): A; }
>name : 任意
>类型别名 :=> 任意
>A : A

    return null;
>null : 空值
>类型别名 :=> 空值
}

