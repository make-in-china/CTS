=== tests/cases/conformance/es6/arrowFunction/emitArrowFunctionWhenUsingArguments19.ts ===
function f() {
>f : () => 无值

    function g() {
>g : () => 无值

        var _arguments = 10;                // No capture in 'g', so no conflict.
>_arguments : 数字
>类型别名 :=> 数字
>10 : 10

        function h() {
>h : () => 无值

            var capture = () => arguments;  // Should trigger an '_arguments' capture into function 'h'
>capture : () => IArguments
>() => arguments : () => IArguments
>arguments : IArguments

            foo(_arguments);                // Error as this does not resolve to the user defined '_arguments'
>foo(_arguments) : 数字
>类型别名 :=> 数字
>foo : (x: 任意) => 数字
>_arguments : 数字
>类型别名 :=> 数字
        }
    }

    function foo(x: any) {
>foo : (x: 任意) => 数字
>x : 任意
>类型别名 :=> 任意

        return 100;
>100 : 100
    }
}
