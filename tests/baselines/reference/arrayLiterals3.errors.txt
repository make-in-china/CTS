tests/cases/conformance/expressions/arrayLiterals/arrayLiterals3.ts(10,5): error TS2322: Type '未定[]' is not assignable to type '[任意, 任意, 任意]'.
  Property '0' is missing in type '未定[]'.
tests/cases/conformance/expressions/arrayLiterals/arrayLiterals3.ts(11,5): error TS2322: Type '["string", 数字, 真假]' is not assignable to type '[真假, 文字, 数字]'.
  Type '"string"' is not assignable to type '真假'.
tests/cases/conformance/expressions/arrayLiterals/arrayLiterals3.ts(17,5): error TS2322: Type '[数字, 数字, 文字, 真假]' is not assignable to type '[数字, 数字]'.
  Types of property 'pop' are incompatible.
    Type '() => 文字 | 数字 | 真假' is not assignable to type '() => 数字'.
      Type '文字 | 数字 | 真假' is not assignable to type '数字'.
        Type '文字' is not assignable to type '数字'.
tests/cases/conformance/expressions/arrayLiterals/arrayLiterals3.ts(32,5): error TS2322: Type '(数字[] | 文字[])[]' is not assignable to type 'tup'.
  Property '0' is missing in type '(数字[] | 文字[])[]'.
tests/cases/conformance/expressions/arrayLiterals/arrayLiterals3.ts(33,5): error TS2322: Type '数字[]' is not assignable to type '[数字, 数字, 数字]'.
  Property '0' is missing in type '数字[]'.
tests/cases/conformance/expressions/arrayLiterals/arrayLiterals3.ts(34,5): error TS2322: Type '(文字 | 数字)[]' is not assignable to type 'myArray'.
  Types of property 'push' are incompatible.
    Type '(...items: (文字 | 数字)[]) => 数字' is not assignable to type '(...items: Number[]) => 数字'.
      Types of parameters 'items' and 'items' are incompatible.
        Type 'Number' is not assignable to type '文字 | 数字'.
          Type 'Number' is not assignable to type '数字'.
            '数字' is a primitive, but 'Number' is a wrapper object. Prefer using '数字' when possible.


==== tests/cases/conformance/expressions/arrayLiterals/arrayLiterals3.ts (6 errors) ====
    // Each element expression in a non-empty array literal is processed as follows:
    //    - If the array literal contains no spread elements, and if the array literal is contextually typed (section 4.19)
    //      by a type T and T has a property with the numeric name N, where N is the index of the element expression in the array literal,
    //      the element expression is contextually typed by the type of that property.
    
    // The resulting type an array literal expression is determined as follows:
    //     - If the array literal contains no spread elements and is contextually typed by a tuple-like type,
    //       the resulting type is a tuple type constructed from the types of the element expressions.
    
    var a0: [any, any, any] = [];                             // Error
        ~~
!!! error TS2322: Type '未定[]' is not assignable to type '[任意, 任意, 任意]'.
!!! error TS2322:   Property '0' is missing in type '未定[]'.
    var a1: [boolean, string, number] = ["string", 1, true];  // Error
        ~~
!!! error TS2322: Type '["string", 数字, 真假]' is not assignable to type '[真假, 文字, 数字]'.
!!! error TS2322:   Type '"string"' is not assignable to type '真假'.
    
    // The resulting type an array literal expression is determined as follows:
    //     - If the array literal contains no spread elements and is an array assignment pattern in a destructuring assignment (section 4.17.1),
    //       the resulting type is a tuple type constructed from the types of the element expressions.
    
    var [b1, b2]: [number, number] = [1, 2, "string", true];
        ~~~~~~~~
!!! error TS2322: Type '[数字, 数字, 文字, 真假]' is not assignable to type '[数字, 数字]'.
!!! error TS2322:   Types of property 'pop' are incompatible.
!!! error TS2322:     Type '() => 文字 | 数字 | 真假' is not assignable to type '() => 数字'.
!!! error TS2322:       Type '文字 | 数字 | 真假' is not assignable to type '数字'.
!!! error TS2322:         Type '文字' is not assignable to type '数字'.
    
    // The resulting type an array literal expression is determined as follows:
    //      - the resulting type is an array type with an element type that is the union of the types of the
    //        non - spread element expressions and the numeric index signature types of the spread element expressions
    var temp = ["s", "t", "r"];
    var temp1 = [1, 2, 3];
    var temp2: [number[], string[]] = [[1, 2, 3], ["hello", "string"]];
    
    interface tup {
        0: number[]|string[];
        1: number[]|string[];
    }
    interface myArray extends Array<Number> { }
    interface myArray2 extends Array<Number|String> { }
    var c0: tup = [...temp2];                         // Error
        ~~
!!! error TS2322: Type '(数字[] | 文字[])[]' is not assignable to type 'tup'.
!!! error TS2322:   Property '0' is missing in type '(数字[] | 文字[])[]'.
    var c1: [number, number, number] = [...temp1];    // Error cannot assign number[] to [number, number, number]
        ~~
!!! error TS2322: Type '数字[]' is not assignable to type '[数字, 数字, 数字]'.
!!! error TS2322:   Property '0' is missing in type '数字[]'.
    var c2: myArray = [...temp1, ...temp];            // Error cannot assign (number|string)[] to number[]
        ~~
!!! error TS2322: Type '(文字 | 数字)[]' is not assignable to type 'myArray'.
!!! error TS2322:   Types of property 'push' are incompatible.
!!! error TS2322:     Type '(...items: (文字 | 数字)[]) => 数字' is not assignable to type '(...items: Number[]) => 数字'.
!!! error TS2322:       Types of parameters 'items' and 'items' are incompatible.
!!! error TS2322:         Type 'Number' is not assignable to type '文字 | 数字'.
!!! error TS2322:           Type 'Number' is not assignable to type '数字'.
!!! error TS2322:             '数字' is a primitive, but 'Number' is a wrapper object. Prefer using '数字' when possible.
    