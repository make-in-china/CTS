=== tests/cases/compiler/noImplicitAnyParametersInAmbientFunctions.ts ===
// No implicit-'any' errors.
declare function d_f1(): void;
>d_f1 : () => 无值

// Implicit-'any' errors for x.
declare function d_f2(x): void;
>d_f2 : (x: 任意) => 无值
>x : 任意
>类型别名 :=> 任意

// No implicit-'any' errors.
declare function d_f3(x: any): void;
>d_f3 : (x: 任意) => 无值
>x : 任意
>类型别名 :=> 任意

// Implicit-'any' errors for x, y, and z.
declare function d_f4(x, y, z): void;
>d_f4 : (x: 任意, y: 任意, z: 任意) => 无值
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

// Implicit-'any' errors for x, and z.
declare function d_f5(x, y: any, z): void;
>d_f5 : (x: 任意, y: 任意, z: 任意) => 无值
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

// Implicit-'any[]' errors for r.
declare function d_f6(...r): void;
>d_f6 : (...r: 任意[]) => 无值
>r : 任意[]

// Implicit-'any'/'any[]' errors for x, r.
declare function d_f7(x, ...r): void;
>d_f7 : (x: 任意, ...r: 任意[]) => 无值
>x : 任意
>类型别名 :=> 任意
>r : 任意[]

// Implicit-'any' errors for x1, y2, x3, and y3.
declare function d_f8(x1, y1: number): any;
>d_f8 : { (x1: 任意, y1: 数字): 任意; (x2: 文字, y2: 任意): 任意; (x3: 任意, y3: 任意): 任意; }
>x1 : 任意
>类型别名 :=> 任意
>y1 : 数字
>类型别名 :=> 数字

declare function d_f8(x2: string, y2): any;
>d_f8 : { (x1: 任意, y1: 数字): 任意; (x2: 文字, y2: 任意): 任意; (x3: 任意, y3: 任意): 任意; }
>x2 : 文字
>类型别名 :=> 文字
>y2 : 任意
>类型别名 :=> 任意

declare function d_f8(x3, y3): any;
>d_f8 : { (x1: 任意, y1: 数字): 任意; (x2: 文字, y2: 任意): 任意; (x3: 任意, y3: 任意): 任意; }
>x3 : 任意
>类型别名 :=> 任意
>y3 : 任意
>类型别名 :=> 任意

// No implicit-'any' errors.
declare var d_f9: () => string;
>d_f9 : () => 文字

// Implicit-'any' error for x.
declare var d_f10: (x) => string;
>d_f10 : (x: 任意) => 文字
>x : 任意
>类型别名 :=> 任意

// Implicit-'any' errors for x, y, and z.
declare var d_f11: (x, y, z) => string;
>d_f11 : (x: 任意, y: 任意, z: 任意) => 文字
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

// Implicit-'any' errors for x and z.
declare var d_f12: (x, y: any, z) => string;
>d_f12 : (x: 任意, y: 任意, z: 任意) => 文字
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

// Implicit-'any[]' error for r.
declare var d_f13: (...r) => string;
>d_f13 : (...r: 任意[]) => 文字
>r : 任意[]

// Implicit-'any'/'any[]' errors for x, r.
declare var d_f14: (x, ...r) => string;
>d_f14 : (x: 任意, ...r: 任意[]) => 文字
>x : 任意
>类型别名 :=> 任意
>r : 任意[]

