=== tests/cases/conformance/expressions/identifiers/scopeResolutionIdentifiers.ts ===
// EveryType used in a nested scope of a different EveryType with the same name, type of the identifier is the one defined in the inner scope

var s: string;
>s : string
>类型别名 :=> 文字

module M1 {
>M1 : typeof M1

    export var s: number;
>s : number
>类型别名 :=> 数字

    var n = s;
>n : number
>类型别名 :=> 数字
>s : number
>类型别名 :=> 数字

    var n: number;
>n : number
>类型别名 :=> 数字
}

module M2 {
>M2 : typeof M2

    var s: number;
>s : number
>类型别名 :=> 数字

    var n = s;
>n : number
>类型别名 :=> 数字
>s : number
>类型别名 :=> 数字

    var n: number;
>n : number
>类型别名 :=> 数字
}

function fn() {
>fn : () => void

    var s: boolean;
>s : boolean
>类型别名 :=> 真假

    var n = s;
>n : boolean
>类型别名 :=> 真假
>s : boolean
>类型别名 :=> 真假

    var n: boolean;
>n : boolean
>类型别名 :=> 真假
}

class C {
>C : C

    s: Date;
>s : Date
>Date : Date

    n = this.s;
>n : Date
>this.s : Date
>this : this
>s : Date

    x() {
>x : () => void

        var p = this.n;
>p : Date
>this.n : Date
>this : this
>n : Date

        var p: Date;
>p : Date
>Date : Date
    }
}

module M3 {
>M3 : typeof M3

    var s: any;
>s : any
>类型别名 :=> 任意

    module M4 {
>M4 : typeof M4

        var n = s;
>n : any
>类型别名 :=> 任意
>s : any
>类型别名 :=> 任意

        var n: any;
>n : any
>类型别名 :=> 任意
    }
}

