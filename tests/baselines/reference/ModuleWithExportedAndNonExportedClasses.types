=== tests/cases/conformance/internalModules/exportDeclarations/ModuleWithExportedAndNonExportedClasses.ts ===
module A {
>A : 类为 A

    export class A {
>A : A

        id: number;
>id : 数字
>类型别名 :=> 数字

        name: string;
>name : 文字
>类型别名 :=> 文字
    }

    export class AG<T, U>{
>AG : AG<T, U>
>T : T
>U : U

        id: T;
>id : T
>T : T

        name: U;
>name : U
>U : U
    }

    class A2 {
>A2 : A2

        id: number;
>id : 数字
>类型别名 :=> 数字

        name: string;
>name : 文字
>类型别名 :=> 文字
    }

    class AG2<T, U>{
>AG2 : AG2<T, U>
>T : T
>U : U

        id: T;
>id : T
>T : T

        name: U;
>name : U
>U : U
    }
}

// no errors expected, these are all exported
var a: { id: number; name: string };
>a : { id: 数字; name: 文字; }
>id : 数字
>类型别名 :=> 数字
>name : 文字
>类型别名 :=> 文字

var a = new A.A();
>a : { id: 数字; name: 文字; }
>new A.A() : A.A
>A.A : 类为 A.A
>A : 类为 A
>A : 类为 A.A

var AG = new A.AG<number, string>()
>AG : A.AG<数字, 文字>
>new A.AG<number, string>() : A.AG<数字, 文字>
>A.AG : 类为 A.AG
>A : 类为 A
>AG : 类为 A.AG

// errors expected, these are not exported
var a2 = new A.A2();
>a2 : 任意
>类型别名 :=> 任意
>new A.A2() : 任意
>类型别名 :=> 任意
>A.A2 : 任意
>类型别名 :=> 任意
>A : 类为 A
>A2 : 任意
>类型别名 :=> 任意

var ag2 = new A.A2<string, number>();
>ag2 : 任意
>类型别名 :=> 任意
>new A.A2<string, number>() : 任意
>类型别名 :=> 任意
>A.A2 : 任意
>类型别名 :=> 任意
>A : 类为 A
>A2 : 任意
>类型别名 :=> 任意


