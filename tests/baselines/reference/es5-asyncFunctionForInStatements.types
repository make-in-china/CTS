=== tests/cases/compiler/es5-asyncFunctionForInStatements.ts ===
declare var x, y, z, a, b, c;
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意
>b : 任意
>类型别名 :=> 任意
>c : 任意
>类型别名 :=> 任意

async function forInStatement0() {
>forInStatement0 : () => Promise<无值>

    for (x in y) { z; }
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
}

async function forInStatement1() {
>forInStatement1 : () => Promise<无值>

    for (x in await y) { z; }
>x : 任意
>类型别名 :=> 任意
>await y : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
}

async function forInStatement2() {
>forInStatement2 : () => Promise<无值>

    for (x in y) { await z; }
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>await z : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
}

async function forInStatement3() {
>forInStatement3 : () => Promise<无值>

    for ((await x).a in y) { z; }
>(await x).a : 任意
>类型别名 :=> 任意
>(await x) : 任意
>类型别名 :=> 任意
>await x : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
}

async function forInStatement4() {
>forInStatement4 : () => Promise<无值>

    for (x.a in await y) { z; }
>x.a : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意
>await y : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
}

async function forInStatement5() {
>forInStatement5 : () => Promise<无值>

    for (x.a in y) { await z; }
>x.a : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>await z : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
}

async function forInStatement6() {
>forInStatement6 : () => Promise<无值>

    for (var a in y) { z; }
>a : 文字
>类型别名 :=> 文字
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
}

async function forInStatement7() {
>forInStatement7 : () => Promise<无值>

    for (var b in await y) { z; }
>b : 文字
>类型别名 :=> 文字
>await y : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
}

async function forInStatement8() {
>forInStatement8 : () => Promise<无值>

    for (var c in y) { await z; }
>c : 文字
>类型别名 :=> 文字
>y : 任意
>类型别名 :=> 任意
>await z : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
}
