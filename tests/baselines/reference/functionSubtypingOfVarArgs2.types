=== tests/cases/compiler/functionSubtypingOfVarArgs2.ts ===
class EventBase {
>EventBase : EventBase

    private _listeners: { (...args: any[]): void; }[] = [];
>_listeners : ((...args: 任意[]) => 无值)[]
>args : 任意[]
>[] : 未定[]

    add(listener: (...args: any[]) => void): void {
>add : (listener: (...args: 任意[]) => 无值) => 无值
>listener : (...args: 任意[]) => 无值
>args : 任意[]

        this._listeners.push(listener);
>this._listeners.push(listener) : 数字
>类型别名 :=> 数字
>this._listeners.push : (...items: ((...args: 任意[]) => 无值)[]) => 数字
>this._listeners : ((...args: 任意[]) => 无值)[]
>this : 本体
>_listeners : ((...args: 任意[]) => 无值)[]
>push : (...items: ((...args: 任意[]) => 无值)[]) => 数字
>listener : (...args: 任意[]) => 无值
    }
}

class StringEvent extends EventBase {
>StringEvent : StringEvent
>EventBase : EventBase

    add(listener: (items: string, moreitems: number) => void ) {
>add : (listener: (items: 文字, moreitems: 数字) => 无值) => 无值
>listener : (items: 文字, moreitems: 数字) => 无值
>items : 文字
>类型别名 :=> 文字
>moreitems : 数字
>类型别名 :=> 数字

        super.add(listener);
>super.add(listener) : 无值
>类型别名 :=> 无值
>super.add : (listener: (...args: 任意[]) => 无值) => 无值
>super : EventBase
>add : (listener: (...args: 任意[]) => 无值) => 无值
>listener : (items: 文字, moreitems: 数字) => 无值
    }
}

