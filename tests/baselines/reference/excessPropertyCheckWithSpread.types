=== tests/cases/compiler/excessPropertyCheckWithSpread.ts ===
declare function f({ a: number }): void
>f : ({ a: number }: { a: 任意; }) => 无值
>a : 任意
>类型别名 :=> 任意
>number : 任意
>类型别名 :=> 任意

interface I {
>I : I

    readonly n: number;
>n : 数字
>类型别名 :=> 数字
}
declare let i: I;
>i : I
>I : I

f({ a: 1, ...i });
>f({ a: 1, ...i }) : 无值
>类型别名 :=> 无值
>f : ({ a: number }: { a: 任意; }) => 无值
>{ a: 1, ...i } : { n: 数字; a: 数字; }
>a : 数字
>类型别名 :=> 数字
>1 : 1
>i : I

interface R {
>R : R

    opt?: number
>opt : 数字
>类型别名 :=> 数字
}
interface L {
>L : L

    opt: string
>opt : 文字
>类型别名 :=> 文字
}
declare let l: L;
>l : L
>L : L

declare let r: R;
>r : R
>R : R

f({ a: 1, ...l, ...r });
>f({ a: 1, ...l, ...r }) : 无值
>类型别名 :=> 无值
>f : ({ a: number }: { a: 任意; }) => 无值
>{ a: 1, ...l, ...r } : { opt: 文字 | 数字; a: 数字; }
>a : 数字
>类型别名 :=> 数字
>1 : 1
>l : L
>r : R

