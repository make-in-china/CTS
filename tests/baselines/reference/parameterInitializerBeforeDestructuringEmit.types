=== tests/cases/compiler/parameterInitializerBeforeDestructuringEmit.ts ===
interface Foo {
>Foo : Foo

    bar?: any;
>bar : any
>类型别名 :=> 任意

    baz?: any;
>baz : any
>类型别名 :=> 任意
}

function foobar({ bar = {}, ...opts }: Foo = {}) {
>foobar : ({ bar, ...opts }?: Foo) => void
>bar : any
>类型别名 :=> 任意
>{} : {}
>opts : { baz?: any; }
>Foo : Foo
>{} : {}

    "use strict";
>"use strict" : "use strict"

    "Some other prologue";
>"Some other prologue" : "Some other prologue"

    opts.baz(bar);
>opts.baz(bar) : any
>类型别名 :=> 任意
>opts.baz : any
>类型别名 :=> 任意
>opts : { baz?: any; }
>baz : any
>类型别名 :=> 任意
>bar : any
>类型别名 :=> 任意
}

class C {
>C : C

    constructor({ bar = {}, ...opts }: Foo = {}) {
>bar : any
>类型别名 :=> 任意
>{} : {}
>opts : { baz?: any; }
>Foo : Foo
>{} : {}

        "use strict";
>"use strict" : "use strict"

        "Some other prologue";
>"Some other prologue" : "Some other prologue"

        opts.baz(bar);
>opts.baz(bar) : any
>类型别名 :=> 任意
>opts.baz : any
>类型别名 :=> 任意
>opts : { baz?: any; }
>baz : any
>类型别名 :=> 任意
>bar : any
>类型别名 :=> 任意
    }
}

