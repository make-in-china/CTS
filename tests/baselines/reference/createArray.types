=== tests/cases/compiler/createArray.ts ===
var na=new number[];
>na : 任意
>类型别名 :=> 任意
>new number[] : 任意
>类型别名 :=> 任意
>number[] : 任意
>类型别名 :=> 任意
>number : 任意
>类型别名 :=> 任意

class C {
>C : C
}

new C[];
>new C[] : 任意
>类型别名 :=> 任意
>C[] : 任意
>类型别名 :=> 任意
>C : 类为 C

var ba=new boolean[];
>ba : 任意
>类型别名 :=> 任意
>new boolean[] : 任意
>类型别名 :=> 任意
>boolean[] : 任意
>类型别名 :=> 任意
>boolean : 任意
>类型别名 :=> 任意

var sa=new string[];
>sa : 任意
>类型别名 :=> 任意
>new string[] : 任意
>类型别名 :=> 任意
>string[] : 任意
>类型别名 :=> 任意
>string : 任意
>类型别名 :=> 任意

function f(s:string):number { return 0;
>f : (s: 文字) => 数字
>s : 文字
>类型别名 :=> 文字
>0 : 0
}
if (ba[14]) {
>ba[14] : 任意
>类型别名 :=> 任意
>ba : 任意
>类型别名 :=> 任意
>14 : 14

    na[2]=f(sa[3]);
>na[2]=f(sa[3]) : 数字
>类型别名 :=> 数字
>na[2] : 任意
>类型别名 :=> 任意
>na : 任意
>类型别名 :=> 任意
>2 : 2
>f(sa[3]) : 数字
>类型别名 :=> 数字
>f : (s: 文字) => 数字
>sa[3] : 任意
>类型别名 :=> 任意
>sa : 任意
>类型别名 :=> 任意
>3 : 3
}

new C[1]; // not an error
>new C[1] : 任意
>类型别名 :=> 任意
>C[1] : 任意
>类型别名 :=> 任意
>C : 类为 C
>1 : 1

