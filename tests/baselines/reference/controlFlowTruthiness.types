=== tests/cases/conformance/controlFlow/controlFlowTruthiness.ts ===
declare function foo(): string | undefined;
>foo : () => 文字 | 未定

function f1() {
>f1 : () => 无值

    let x = foo();
>x : 文字 | 未定
>foo() : 文字 | 未定
>foo : () => 文字 | 未定

    if (x) {
>x : 文字 | 未定

        x; // string
>x : 文字
>类型别名 :=> 文字
    }
    else {
        x; // string | undefined
>x : 文字 | 未定
    }
}

function f2() {
>f2 : () => 无值

    let x: string | undefined;
>x : 文字 | 未定

    x = foo();
>x = foo() : 文字 | 未定
>x : 文字 | 未定
>foo() : 文字 | 未定
>foo : () => 文字 | 未定

    if (x) {
>x : 文字 | 未定

        x; // string
>x : 文字
>类型别名 :=> 文字
    }
    else {
        x; // string | undefined
>x : 文字 | 未定
    }
}

function f3() {
>f3 : () => 无值

    let x: string | undefined;
>x : 文字 | 未定

    if (x = foo()) {
>x = foo() : 文字 | 未定
>x : 文字 | 未定
>foo() : 文字 | 未定
>foo : () => 文字 | 未定

        x; // string
>x : 文字
>类型别名 :=> 文字
    }
    else {
        x; // string | undefined
>x : 文字 | 未定
    }
}

function f4() {
>f4 : () => 无值

    let x: string | undefined;
>x : 文字 | 未定

    if (!(x = foo())) {
>!(x = foo()) : 真假
>类型别名 :=> 真假
>(x = foo()) : 文字 | 未定
>x = foo() : 文字 | 未定
>x : 文字 | 未定
>foo() : 文字 | 未定
>foo : () => 文字 | 未定

        x; // string | undefined
>x : 文字 | 未定
    }
    else {
        x; // string
>x : 文字
>类型别名 :=> 文字
    }
}

function f5() {
>f5 : () => 无值

    let x: string | undefined;
>x : 文字 | 未定

    let y: string | undefined;
>y : 文字 | 未定

    if (x = y = foo()) {
>x = y = foo() : 文字 | 未定
>x : 文字 | 未定
>y = foo() : 文字 | 未定
>y : 文字 | 未定
>foo() : 文字 | 未定
>foo : () => 文字 | 未定

        x; // string
>x : 文字
>类型别名 :=> 文字

        y; // string | undefined
>y : 文字 | 未定
    }
    else {
        x; // string | undefined
>x : 文字 | 未定

        y; // string | undefined
>y : 文字 | 未定
    }
}

function f6() {
>f6 : () => 无值

    let x: string | undefined;
>x : 文字 | 未定

    let y: string | undefined;
>y : 文字 | 未定

    if (x = foo(), y = foo()) {
>x = foo(), y = foo() : 文字 | 未定
>x = foo() : 文字 | 未定
>x : 文字 | 未定
>foo() : 文字 | 未定
>foo : () => 文字 | 未定
>y = foo() : 文字 | 未定
>y : 文字 | 未定
>foo() : 文字 | 未定
>foo : () => 文字 | 未定

        x; // string | undefined
>x : 文字 | 未定

        y; // string
>y : 文字
>类型别名 :=> 文字
    }
    else {
        x; // string | undefined
>x : 文字 | 未定

        y; // string | undefined
>y : 文字 | 未定
    }
}

