=== tests/cases/compiler/unusedLocalsAndParametersTypeAliases.ts ===
// used in a declaration
type handler1 = () => void;
>handler1 : () => 无值

export interface I1 {
>I1 : I1

    getHandler: handler1;
>getHandler : () => 无值
>handler1 : () => 无值
}

// exported
export type handler2 = () => void;
>handler2 : handler2

// used in extends clause
type handler3 = () => void;
>handler3 : () => 无值

export interface I3<T extends handler3> {
>I3 : I3<T>
>T : T
>handler3 : () => 无值

    getHandler: T;
>getHandler : T
>T : T
}

// used in another type alias declaration
type handler4 = () => void;
>handler4 : () => 无值

type handler5 = handler4 | (()=>number);
>handler5 : (() => 无值) | (() => 数字)
>handler4 : () => 无值

var x: handler5;
>x : (() => 无值) | (() => 数字)
>handler5 : (() => 无值) | (() => 数字)

x();
>x() : 数字 | 无值
>x : (() => 无值) | (() => 数字)

// used as type argument
type handler6 = () => void;
>handler6 : () => 无值

var y: Array<handler6>;
>y : (() => 无值)[]
>Array : T[]
>handler6 : () => 无值

y[0]();
>y[0]() : 无值
>类型别名 :=> 无值
>y[0] : () => 无值
>y : (() => 无值)[]
>0 : 0
    
