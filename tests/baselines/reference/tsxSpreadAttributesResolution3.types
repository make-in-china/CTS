=== tests/cases/conformance/jsx/file.tsx ===
import React = require('react');
>React : 类为 React

interface PoisonedProp {
>PoisonedProp : PoisonedProp

    x: string;
>x : 文字
>类型别名 :=> 文字

    y: number;
>y : 数字
>类型别名 :=> 数字
}

class Poisoned extends React.Component<PoisonedProp, {}> {
>Poisoned : Poisoned
>React.Component : React.Component<PoisonedProp, {}>
>React : 类为 React
>Component : 类为 React.Component
>PoisonedProp : PoisonedProp

    render() {
>render : () => JSX.Element

        return <div>Hello</div>;
><div>Hello</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意
    }
}

const obj = {
>obj : { x: 文字; y: 数字; }
>{    x: "hello world",    y: 2} : { x: 文字; y: 数字; }

    x: "hello world",
>x : 文字
>类型别名 :=> 文字
>"hello world" : "hello world"

    y: 2
>y : 数字
>类型别名 :=> 数字
>2 : 2

};

// OK
let p = <Poisoned {...obj} />;
>p : JSX.Element
><Poisoned {...obj} /> : JSX.Element
>Poisoned : 类为 Poisoned
>obj : { x: 文字; y: 数字; }

let y = <Poisoned x="hi" y={2} />;
>y : JSX.Element
><Poisoned x="hi" y={2} /> : JSX.Element
>Poisoned : 类为 Poisoned
>x : 文字
>类型别名 :=> 文字
>y : 数字
>类型别名 :=> 数字
>2 : 2

