=== tests/cases/conformance/expressions/typeGuards/typeGuardInClass.ts ===
let x: string | number;
>x : string | number

if (typeof x === "string") {
>typeof x === "string" : boolean
>类型别名 :=> 真假
>typeof x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x : string | number
>"string" : "string"

    let n = class {
>n : typeof n
>class {        constructor() {            let y: string = x;        }    } : typeof n

        constructor() {
            let y: string = x;
>y : string
>类型别名 :=> 文字
>x : string | number
        }
    }
}
else {
    let m = class {
>m : typeof m
>class {        constructor() {            let y: number = x;        }    } : typeof m

        constructor() {
            let y: number = x;
>y : number
>类型别名 :=> 数字
>x : string | number
        }
    }
}

