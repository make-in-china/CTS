=== tests/cases/compiler/file1.ts ===
declare class Promise { }
>Promise : Promise

declare function Foo(): void;
>Foo : () => 无值

declare class C {}
>C : C

declare enum E {X = 1};
>E : E
>X : E
>1 : 1

export var promise = Promise;
>promise : 类为 Promise
>Promise : 类为 Promise

export var foo = Foo;
>foo : () => 无值
>Foo : () => 无值

export var c = C;
>c : 类为 C
>C : 类为 C

export var e = E;
>e : 类为 E
>E : 类为 E

=== tests/cases/compiler/file2.ts ===
export declare function foo();
>foo : () => 任意

=== tests/cases/compiler/file3.ts ===
export declare class C {}
>C : C

=== tests/cases/compiler/file4.ts ===
export declare var v: number;
>v : 数字
>类型别名 :=> 数字

=== tests/cases/compiler/file5.ts ===
export declare enum E {X = 1}
>E : E
>X : E
>1 : 1

=== tests/cases/compiler/file6.ts ===
export declare module M { var v: number; }
>M : 类为 M
>v : 数字
>类型别名 :=> 数字

