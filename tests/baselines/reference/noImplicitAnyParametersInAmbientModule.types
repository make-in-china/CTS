=== tests/cases/compiler/noImplicitAnyParametersInAmbientModule.ts ===
declare module D_M {
>D_M : 类为 D_M

    // No implicit-'any' errors.
    function dm_f1(): void;
>dm_f1 : () => 无值

    // No implicit-'any' errors.
    function dm_f2(x): void;
>dm_f2 : (x: 任意) => 无值
>x : 任意
>类型别名 :=> 任意

    // No implicit-'any' errors.
    function dm_f3(x: any): void;
>dm_f3 : (x: 任意) => 无值
>x : 任意
>类型别名 :=> 任意

    // No implicit-'any' errors.
    function dm_f4(x, y, z): void;
>dm_f4 : (x: 任意, y: 任意, z: 任意) => 无值
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    // No implicit-'any' errors.
    function dm_f5(x, y: any, z): void;
>dm_f5 : (x: 任意, y: 任意, z: 任意) => 无值
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    // No implicit-'any' errors.
    function dm_f6(...r): void;
>dm_f6 : (...r: 任意[]) => 无值
>r : 任意[]

    // No implicit-'any' errors.
    function dm_f7(x, ...r): void;
>dm_f7 : (x: 任意, ...r: 任意[]) => 无值
>x : 任意
>类型别名 :=> 任意
>r : 任意[]

    // No implicit-'any' errors.
    function dm_f8(x1, y1: number): any;
>dm_f8 : { (x1: 任意, y1: 数字): 任意; (x2: 文字, y2: 任意): 任意; (x3: 任意, y3: 任意): 任意; }
>x1 : 任意
>类型别名 :=> 任意
>y1 : 数字
>类型别名 :=> 数字

    function dm_f8(x2: string, y2): any;
>dm_f8 : { (x1: 任意, y1: 数字): 任意; (x2: 文字, y2: 任意): 任意; (x3: 任意, y3: 任意): 任意; }
>x2 : 文字
>类型别名 :=> 文字
>y2 : 任意
>类型别名 :=> 任意

    function dm_f8(x3, y3): any;
>dm_f8 : { (x1: 任意, y1: 数字): 任意; (x2: 文字, y2: 任意): 任意; (x3: 任意, y3: 任意): 任意; }
>x3 : 任意
>类型别名 :=> 任意
>y3 : 任意
>类型别名 :=> 任意

    // No implicit-'any' errors.
    var dm_f9: () => string;
>dm_f9 : () => 文字

    // No implicit-'any' errors.
    var dm_f10: (x) => string;
>dm_f10 : (x: 任意) => 文字
>x : 任意
>类型别名 :=> 任意

    // No implicit-'any' errors.
    var dm_f11: (x, y, z) => string;
>dm_f11 : (x: 任意, y: 任意, z: 任意) => 文字
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    // No implicit-'any' errors.
    var dm_f12: (x, y: any, z) => string;
>dm_f12 : (x: 任意, y: 任意, z: 任意) => 文字
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意

    // No implicit-'any' errors.
    var dm_f13: (...r) => string;
>dm_f13 : (...r: 任意[]) => 文字
>r : 任意[]

    // No implicit-'any' errors.
    var dm_f14: (x, ...r) => string;
>dm_f14 : (x: 任意, ...r: 任意[]) => 文字
>x : 任意
>类型别名 :=> 任意
>r : 任意[]
}
