=== tests/cases/conformance/externalModules/a.ts ===
/// <reference path="foo.d.ts" />
import * as ff from './foo';
>ff : typeof ff

let y: Foo; // OK in type position
>y : ff
>Foo : ff

y.foo();
>y.foo() : number
>类型别名 :=> 数字
>y.foo : () => number
>y : ff
>foo : () => number

let z: Foo.SubThing; // OK in ns position
>z : ff.SubThing
>Foo : any
>类型别名 :=> 任意
>SubThing : ff.SubThing

let x: any = Foo; // Not OK in value position
>x : any
>类型别名 :=> 任意
>Foo : typeof ff

=== tests/cases/conformance/externalModules/foo.d.ts ===
declare class Thing {
>Thing : Thing

	foo(): number;
>foo : () => number
}
declare namespace Thing {
>Thing : typeof Thing

	interface SubThing { }
>SubThing : SubThing
}
export = Thing;
>Thing : Thing

export as namespace Foo;
>Foo : typeof Thing

