=== tests/cases/compiler/interfaceExtendsClassWithPrivate2.ts ===
class C {
>C : C

    public foo(x: any) { return x; }
>foo : (x: any) => any
>x : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意

    private x = 1;
>x : number
>类型别名 :=> 数字
>1 : 1
}

interface I extends C {
>I : I
>C : C

    other(x: any): any;
>other : (x: any) => any
>x : any
>类型别名 :=> 任意
}

class D extends C implements I { // error
>D : D
>C : C
>I : I

    public foo(x: any) { return x; }
>foo : (x: any) => any
>x : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意

    private x = 2;
>x : number
>类型别名 :=> 数字
>2 : 2

    private y = 3;
>y : number
>类型别名 :=> 数字
>3 : 3

    other(x: any) { return x; }
>other : (x: any) => any
>x : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意

    bar() {}
>bar : () => void
} 

class D2 extends C implements I { // error
>D2 : D2
>C : C
>I : I

    public foo(x: any) { return x; }
>foo : (x: any) => any
>x : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意

    private x = "";
>x : string
>类型别名 :=> 文字
>"" : ""

    other(x: any) { return x; }
>other : (x: any) => any
>x : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意

    bar() { }
>bar : () => void
} 
