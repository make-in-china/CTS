=== tests/cases/compiler/overloadCrash.ts ===
interface I1 {a:number; b:number;};
>I1 : I1
>a : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

interface I2 {c:number; d:number;};
>I2 : I2
>c : 数字
>类型别名 :=> 数字
>d : 数字
>类型别名 :=> 数字

interface I3 {a:number; b:number; c:number; d:number;};
>I3 : I3
>a : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>c : 数字
>类型别名 :=> 数字
>d : 数字
>类型别名 :=> 数字

declare function foo(...n:I1[]);
>foo : { (...n: I1[]): 任意; (n1: I2, n3: I2): 任意; }
>n : I1[]
>I1 : I1

declare function foo(n1:I2, n3:I2);
>foo : { (...n: I1[]): 任意; (n1: I2, n3: I2): 任意; }
>n1 : I2
>I2 : I2
>n3 : I2
>I2 : I2

var i3:I3;
>i3 : I3
>I3 : I3

foo(i3, i3); // should not crash the compiler :)
>foo(i3, i3) : 任意
>类型别名 :=> 任意
>foo : { (...n: I1[]): 任意; (n1: I2, n3: I2): 任意; }
>i3 : I3
>i3 : I3

