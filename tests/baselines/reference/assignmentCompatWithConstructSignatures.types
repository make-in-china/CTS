=== tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithConstructSignatures.ts ===
// void returning call signatures can be assigned a non-void returning call signature that otherwise matches

interface T {
>T : T

    new (x: number): void;
>x : number
>类型别名 :=> 数字
}
var t: T;
>t : T
>T : T

var a: { new (x: number): void };
>a : new (x: number) => void
>x : number
>类型别名 :=> 数字

t = a;
>t = a : new (x: number) => void
>t : T
>a : new (x: number) => void

a = t;
>a = t : T
>a : new (x: number) => void
>t : T

interface S {
>S : S

    new (x: number): string;
>x : number
>类型别名 :=> 数字
}
var s: S;
>s : S
>S : S

var a2: { new (x: number): string };
>a2 : new (x: number) => string
>x : number
>类型别名 :=> 数字

t = s;
>t = s : S
>t : T
>s : S

t = a2;
>t = a2 : new (x: number) => string
>t : T
>a2 : new (x: number) => string

a = s;
>a = s : S
>a : new (x: number) => void
>s : S

a = a2;
>a = a2 : new (x: number) => string
>a : new (x: number) => void
>a2 : new (x: number) => string

interface S2 {
>S2 : S2

    (x: string): void;
>x : string
>类型别名 :=> 文字
}
var s2: S2;
>s2 : S2
>S2 : S2

var a3: { (x: string): void };
>a3 : (x: string) => void
>x : string
>类型别名 :=> 文字

// these are errors
t = s2;
>t = s2 : S2
>t : T
>s2 : S2

t = a3;
>t = a3 : (x: string) => void
>t : T
>a3 : (x: string) => void

t = (x: string) => 1;
>t = (x: string) => 1 : (x: string) => number
>t : T
>(x: string) => 1 : (x: string) => number
>x : string
>类型别名 :=> 文字
>1 : 1

t = function (x: string) { return ''; }
>t = function (x: string) { return ''; } : (x: string) => string
>t : T
>function (x: string) { return ''; } : (x: string) => string
>x : string
>类型别名 :=> 文字
>'' : ""

a = s2;
>a = s2 : S2
>a : new (x: number) => void
>s2 : S2

a = a3;
>a = a3 : (x: string) => void
>a : new (x: number) => void
>a3 : (x: string) => void

a = (x: string) => 1;
>a = (x: string) => 1 : (x: string) => number
>a : new (x: number) => void
>(x: string) => 1 : (x: string) => number
>x : string
>类型别名 :=> 文字
>1 : 1

a = function (x: string) { return ''; }
>a = function (x: string) { return ''; } : (x: string) => string
>a : new (x: number) => void
>function (x: string) { return ''; } : (x: string) => string
>x : string
>类型别名 :=> 文字
>'' : ""

