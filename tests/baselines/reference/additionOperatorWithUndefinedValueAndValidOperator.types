=== tests/cases/conformance/expressions/binaryOperators/additionOperator/additionOperatorWithUndefinedValueAndValidOperator.ts ===
// If one operand is the null or undefined value, it is treated as having the type of the other operand.

enum E { a, b, c }
>E : E
>a : E.a
>b : E.b
>c : E.c

var a: any;
>a : any
>类型别名 :=> 任意

var b: number;
>b : number
>类型别名 :=> 数字

var c: E;
>c : E
>E : E

var d: string;
>d : string
>类型别名 :=> 文字

// undefined + any
var r1: any = undefined + a;
>r1 : any
>类型别名 :=> 任意
>undefined + a : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>a : any
>类型别名 :=> 任意

var r2: any = a + undefined;
>r2 : any
>类型别名 :=> 任意
>a + undefined : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定

// undefined + number/enum
var r3 = undefined + b;
>r3 : any
>类型别名 :=> 任意
>undefined + b : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>b : number
>类型别名 :=> 数字

var r4 = undefined + 1;
>r4 : any
>类型别名 :=> 任意
>undefined + 1 : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>1 : 1

var r5 = undefined + c;
>r5 : any
>类型别名 :=> 任意
>undefined + c : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>c : E

var r6 = undefined + E.a;
>r6 : any
>类型别名 :=> 任意
>undefined + E.a : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>E.a : E.a
>E : typeof E
>a : E.a

var r7 = undefined + E['a'];
>r7 : any
>类型别名 :=> 任意
>undefined + E['a'] : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>E['a'] : E.a
>E : typeof E
>'a' : "a"

var r8 = b + undefined;
>r8 : any
>类型别名 :=> 任意
>b + undefined : any
>类型别名 :=> 任意
>b : number
>类型别名 :=> 数字
>undefined : undefined
>类型别名 :=> 未定

var r9 = 1 + undefined;
>r9 : any
>类型别名 :=> 任意
>1 + undefined : any
>类型别名 :=> 任意
>1 : 1
>undefined : undefined
>类型别名 :=> 未定

var r10 = c + undefined
>r10 : any
>类型别名 :=> 任意
>c + undefined : any
>类型别名 :=> 任意
>c : E
>undefined : undefined
>类型别名 :=> 未定

var r11 = E.a + undefined;
>r11 : any
>类型别名 :=> 任意
>E.a + undefined : any
>类型别名 :=> 任意
>E.a : E.a
>E : typeof E
>a : E.a
>undefined : undefined
>类型别名 :=> 未定

var r12 = E['a'] + undefined;
>r12 : any
>类型别名 :=> 任意
>E['a'] + undefined : any
>类型别名 :=> 任意
>E['a'] : E.a
>E : typeof E
>'a' : "a"
>undefined : undefined
>类型别名 :=> 未定

// undefined + string
var r13 = undefined + d;
>r13 : string
>类型别名 :=> 文字
>undefined + d : string
>类型别名 :=> 文字
>undefined : undefined
>类型别名 :=> 未定
>d : string
>类型别名 :=> 文字

var r14 = undefined + '';
>r14 : string
>类型别名 :=> 文字
>undefined + '' : string
>类型别名 :=> 文字
>undefined : undefined
>类型别名 :=> 未定
>'' : ""

var r15 = d + undefined;
>r15 : string
>类型别名 :=> 文字
>d + undefined : string
>类型别名 :=> 文字
>d : string
>类型别名 :=> 文字
>undefined : undefined
>类型别名 :=> 未定

var r16 = '' + undefined;
>r16 : string
>类型别名 :=> 文字
>'' + undefined : string
>类型别名 :=> 文字
>'' : ""
>undefined : undefined
>类型别名 :=> 未定

