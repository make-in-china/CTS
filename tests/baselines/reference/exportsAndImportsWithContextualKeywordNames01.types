=== tests/cases/conformance/es6/modules/t1.ts ===
let set = {
>set : { foo: 数字; }
>{    set foo(x: number) {    }} : { foo: 数字; }

    set foo(x: number) {
>foo : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
    }
}
let get = 10;
>get : 数字
>类型别名 :=> 数字
>10 : 10

export { set, get };
>set : { foo: 数字; }
>get : 数字
>类型别名 :=> 数字

=== tests/cases/conformance/es6/modules/t2.ts ===
import * as set from "./t1";
>set : 类为 set

=== tests/cases/conformance/es6/modules/t3.ts ===
import { set as yield } from "./t1";
>set : { foo: 数字; }
>yield : { foo: 数字; }

=== tests/cases/conformance/es6/modules/t4.ts ===
import { get } from "./t1";
>get : 数字
>类型别名 :=> 数字

