=== tests/cases/conformance/parser/ecmascript5/VariableDeclarations/parserVariableDeclaration3.ts ===
function runTests() {
>runTests : () => 无值

    var outfile = new Harness.Compiler.WriterAggregator()
>outfile : 任意
>类型别名 :=> 任意
>new Harness.Compiler.WriterAggregator() : 任意
>类型别名 :=> 任意
>Harness.Compiler.WriterAggregator : 任意
>类型别名 :=> 任意
>Harness.Compiler : 任意
>类型别名 :=> 任意
>Harness : 任意
>类型别名 :=> 任意
>Compiler : 任意
>类型别名 :=> 任意
>WriterAggregator : 任意
>类型别名 :=> 任意

      , outerr = new Harness.Compiler.WriterAggregator()
>outerr : 任意
>类型别名 :=> 任意
>new Harness.Compiler.WriterAggregator() : 任意
>类型别名 :=> 任意
>Harness.Compiler.WriterAggregator : 任意
>类型别名 :=> 任意
>Harness.Compiler : 任意
>类型别名 :=> 任意
>Harness : 任意
>类型别名 :=> 任意
>Compiler : 任意
>类型别名 :=> 任意
>WriterAggregator : 任意
>类型别名 :=> 任意

      , compiler = <TypeScript.TypeScriptCompiler>new TypeScript.TypeScriptCompiler(outerr)
>compiler : 任意
>类型别名 :=> 任意
><TypeScript.TypeScriptCompiler>new TypeScript.TypeScriptCompiler(outerr) : 任意
>类型别名 :=> 任意
>TypeScript : 任意
>类型别名 :=> 任意
>TypeScriptCompiler : No type information available!
>new TypeScript.TypeScriptCompiler(outerr) : 任意
>类型别名 :=> 任意
>TypeScript.TypeScriptCompiler : 任意
>类型别名 :=> 任意
>TypeScript : 任意
>类型别名 :=> 任意
>TypeScriptCompiler : 任意
>类型别名 :=> 任意
>outerr : 任意
>类型别名 :=> 任意

      , code;
>code : 任意
>类型别名 :=> 任意
}
