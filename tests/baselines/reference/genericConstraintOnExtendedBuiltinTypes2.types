=== tests/cases/compiler/genericConstraintOnExtendedBuiltinTypes2.ts ===
module EndGate {
>EndGate : 类为 EndGate

    export interface ICloneable {
>ICloneable : ICloneable

        Clone(): any;
>Clone : () => 任意
    }
}

interface Number extends EndGate.ICloneable { }
>Number : Number
>EndGate.ICloneable : 任意
>类型别名 :=> 任意
>EndGate : 类为 EndGate
>ICloneable : EndGate.ICloneable

module EndGate.Tweening {
>EndGate : 类为 EndGate
>Tweening : 类为 Tweening

    export class Tween<T extends ICloneable>{
>Tween : Tween<T>
>T : T
>ICloneable : ICloneable

        private _from: T;
>_from : T
>T : T

        constructor(from: T) {
>from : T
>T : T

            this._from = from.Clone();
>this._from = from.Clone() : 任意
>类型别名 :=> 任意
>this._from : T
>this : 本体
>_from : T
>from.Clone() : 任意
>类型别名 :=> 任意
>from.Clone : () => 任意
>from : T
>Clone : () => 任意
        }
    }
}

module EndGate.Tweening {
>EndGate : 类为 EndGate
>Tweening : 类为 Tweening

    export class NumberTween extends Tween<Number>{
>NumberTween : NumberTween
>Tween : Tween<Number>
>Number : Number

        constructor(from: number) {
>from : 数字
>类型别名 :=> 数字

            super(from);
>super(from) : 无值
>类型别名 :=> 无值
>super : 类为 Tween
>from : 数字
>类型别名 :=> 数字
        }
    }
}
