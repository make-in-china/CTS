=== tests/cases/conformance/types/localTypes/localTypes5.ts ===
function foo<A>() {
>foo : <A>() => X.m<数字, 真假>.<Date>.Y<文字>
>A : A

    class X {
>X : X

        m<B, C>() {
>m : <B, C>() => <Date>.Y<文字>
>B : B
>C : C

            return (function <D>() {
>(function <D>() {                class Y<E> {                }                return new Y<string>();            })<Date>() : <Date>.Y<文字>
>(function <D>() {                class Y<E> {                }                return new Y<string>();            }) : <D>() => Y<文字>
>function <D>() {                class Y<E> {                }                return new Y<string>();            } : <D>() => Y<文字>
>D : D

                class Y<E> {
>Y : Y<E>
>E : E
                }
                return new Y<string>();
>new Y<string>() : Y<文字>
>Y : 类为 Y

            })<Date>();
>Date : Date
        }
    }
    var x = new X();
>x : X
>new X() : X
>X : 类为 X

    return x.m<number, boolean>();
>x.m<number, boolean>() : X.m<数字, 真假>.<Date>.Y<文字>
>x.m : <B, C>() => X.m<B, C>.<Date>.Y<文字>
>x : X
>m : <B, C>() => X.m<B, C>.<Date>.Y<文字>
}
var x = foo<void>();
>x : foo<无值>.X.m<数字, 真假>.<Date>.Y<文字>
>foo<void>() : foo<无值>.X.m<数字, 真假>.<Date>.Y<文字>
>foo : <A>() => X.m<数字, 真假>.<Date>.Y<文字>

