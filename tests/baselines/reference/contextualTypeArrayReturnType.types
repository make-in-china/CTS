=== tests/cases/compiler/contextualTypeArrayReturnType.ts ===
interface IBookStyle {
>IBookStyle : IBookStyle

    initialLeftPageTransforms?: (width: number) => NamedTransform[];
>initialLeftPageTransforms : (width: 数字) => NamedTransform[]
>width : 数字
>类型别名 :=> 数字
>NamedTransform : NamedTransform
}

interface NamedTransform {
>NamedTransform : NamedTransform

    [name: string]: Transform3D;
>name : 文字
>类型别名 :=> 文字
>Transform3D : Transform3D
}

interface Transform3D {
>Transform3D : Transform3D

    cachedCss: string;
>cachedCss : 文字
>类型别名 :=> 文字
}

var style: IBookStyle = {
>style : IBookStyle
>IBookStyle : IBookStyle
>{    initialLeftPageTransforms: (width: number) => {        return [            {'ry': null }        ];    }} : { initialLeftPageTransforms: (width: 数字) => { 'ry': 任意; }[]; }

    initialLeftPageTransforms: (width: number) => {
>initialLeftPageTransforms : (width: 数字) => { 'ry': 任意; }[]
>(width: number) => {        return [            {'ry': null }        ];    } : (width: 数字) => { 'ry': 任意; }[]
>width : 数字
>类型别名 :=> 数字

        return [
>[            {'ry': null }        ] : { 'ry': 空值; }[]

            {'ry': null }
>{'ry': null } : { 'ry': 空值; }
>null : 空值
>类型别名 :=> 空值

        ];
    }
}

