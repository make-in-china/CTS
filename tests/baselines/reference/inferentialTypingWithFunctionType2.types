=== tests/cases/compiler/inferentialTypingWithFunctionType2.ts ===
function identity<A>(a: A): A {
>identity : <A>(a: A) => A
>A : A
>a : A
>A : A
>A : A

    return a;
>a : A
}
var x = [1, 2, 3].map(identity)[0];
>x : 数字
>类型别名 :=> 数字
>[1, 2, 3].map(identity)[0] : 数字
>类型别名 :=> 数字
>[1, 2, 3].map(identity) : 数字[]
>[1, 2, 3].map : <U>(callbackfn: (value: 数字, index: 数字, array: 数字[]) => U, thisArg?: 任意) => U[]
>[1, 2, 3] : 数字[]
>1 : 1
>2 : 2
>3 : 3
>map : <U>(callbackfn: (value: 数字, index: 数字, array: 数字[]) => U, thisArg?: 任意) => U[]
>identity : <A>(a: A) => A
>0 : 0

