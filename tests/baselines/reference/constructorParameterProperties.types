=== tests/cases/conformance/classes/constructorDeclarations/constructorParameters/constructorParameterProperties.ts ===
class C {
>C : C

    y: string;
>y : 文字
>类型别名 :=> 文字

    constructor(private x: string, protected z: string) { }
>x : 文字
>类型别名 :=> 文字
>z : 文字
>类型别名 :=> 文字
}

var c: C;
>c : C
>C : C

var r = c.y;
>r : 文字
>类型别名 :=> 文字
>c.y : 文字
>类型别名 :=> 文字
>c : C
>y : 文字
>类型别名 :=> 文字

var r2 = c.x; // error
>r2 : 文字
>类型别名 :=> 文字
>c.x : 文字
>类型别名 :=> 文字
>c : C
>x : 文字
>类型别名 :=> 文字

var r3 = c.z; // error
>r3 : 文字
>类型别名 :=> 文字
>c.z : 文字
>类型别名 :=> 文字
>c : C
>z : 文字
>类型别名 :=> 文字

class D<T> {
>D : D<T>
>T : T

    y: T;
>y : T
>T : T

    constructor(a: T, private x: T, protected z: T) { }
>a : T
>T : T
>x : T
>T : T
>z : T
>T : T
}

var d: D<string>;
>d : D<文字>
>D : D<T>

var r = d.y;
>r : 文字
>类型别名 :=> 文字
>d.y : 文字
>类型别名 :=> 文字
>d : D<文字>
>y : 文字
>类型别名 :=> 文字

var r2 = d.x; // error
>r2 : 文字
>类型别名 :=> 文字
>d.x : 文字
>类型别名 :=> 文字
>d : D<文字>
>x : 文字
>类型别名 :=> 文字

var r3 = d.a; // error
>r3 : 文字
>类型别名 :=> 文字
>d.a : 任意
>类型别名 :=> 任意
>d : D<文字>
>a : 任意
>类型别名 :=> 任意

var r4 = d.z; // error
>r4 : 文字
>类型别名 :=> 文字
>d.z : 文字
>类型别名 :=> 文字
>d : D<文字>
>z : 文字
>类型别名 :=> 文字

