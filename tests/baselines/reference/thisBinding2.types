=== tests/cases/compiler/thisBinding2.ts ===
class C {
>C : C

 x: number;
>x : 数字
>类型别名 :=> 数字

    constructor() {
        this.x = (() => {
>this.x = (() => {   var x = 1;   return this.x;  })() : 数字
>类型别名 :=> 数字
>this.x : 数字
>类型别名 :=> 数字
>this : 本体
>x : 数字
>类型别名 :=> 数字
>(() => {   var x = 1;   return this.x;  })() : 数字
>类型别名 :=> 数字
>(() => {   var x = 1;   return this.x;  }) : () => 数字
>() => {   var x = 1;   return this.x;  } : () => 数字

   var x = 1;
>x : 数字
>类型别名 :=> 数字
>1 : 1

   return this.x;
>this.x : 数字
>类型别名 :=> 数字
>this : 本体
>x : 数字
>类型别名 :=> 数字

  })();
  this.x = function() {
>this.x = function() {   var x = 1;   return this.x;  }() : 任意
>类型别名 :=> 任意
>this.x : 数字
>类型别名 :=> 数字
>this : 本体
>x : 数字
>类型别名 :=> 数字
>function() {   var x = 1;   return this.x;  }() : 任意
>类型别名 :=> 任意
>function() {   var x = 1;   return this.x;  } : () => 任意

   var x = 1;
>x : 数字
>类型别名 :=> 数字
>1 : 1

   return this.x;
>this.x : 任意
>类型别名 :=> 任意
>this : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意

  }();
    }  
}
declare function setTimeout(expression: any, msec?: number, language?: any): number;
>setTimeout : (expression: 任意, msec?: 数字, language?: 任意) => 数字
>expression : 任意
>类型别名 :=> 任意
>msec : 数字
>类型别名 :=> 数字
>language : 任意
>类型别名 :=> 任意

var messenger = {
>messenger : { message: 文字; start: () => 数字; }
>{    message: "Hello World",    start: function () {        return setTimeout(() => { var x = this.message; }, 3000);    }} : { message: 文字; start: () => 数字; }

    message: "Hello World",
>message : 文字
>类型别名 :=> 文字
>"Hello World" : "Hello World"

    start: function () {
>start : () => 数字
>function () {        return setTimeout(() => { var x = this.message; }, 3000);    } : () => 数字

        return setTimeout(() => { var x = this.message; }, 3000);
>setTimeout(() => { var x = this.message; }, 3000) : 数字
>类型别名 :=> 数字
>setTimeout : (expression: 任意, msec?: 数字, language?: 任意) => 数字
>() => { var x = this.message; } : () => 无值
>x : 文字
>类型别名 :=> 文字
>this.message : 文字
>类型别名 :=> 文字
>this : { message: 文字; start: () => 数字; }
>message : 文字
>类型别名 :=> 文字
>3000 : 3000
    }
};

