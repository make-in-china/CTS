=== tests/cases/conformance/types/specifyingTypes/typeLiterals/parenthesizedTypes.ts ===
var a: string;
>a : 文字
>类型别名 :=> 文字

var a: (string);
>a : 文字
>类型别名 :=> 文字

var a: ((string) | string | (((string))));
>a : 文字
>类型别名 :=> 文字

var a: ((((((((((((((((((((((((((((((((((((((((string))))))))))))))))))))))))))))))))))))))));
>a : 文字
>类型别名 :=> 文字

var b: (x: string) => string;
>b : (x: 文字) => 文字
>x : 文字
>类型别名 :=> 文字

var b: ((x: (string)) => (string));
>b : (x: 文字) => 文字
>x : 文字
>类型别名 :=> 文字

var c: string[] | number[];
>c : 文字[] | 数字[]

var c: (string)[] | (number)[];
>c : 文字[] | 数字[]

var c: ((string)[]) | ((number)[]);
>c : 文字[] | 数字[]

var d: (((x: string) => string) | ((x: number) => number))[];
>d : (((x: 文字) => 文字) | ((x: 数字) => 数字))[]
>x : 文字
>类型别名 :=> 文字
>x : 数字
>类型别名 :=> 数字

var d: ({ (x: string): string } | { (x: number): number })[];
>d : (((x: 文字) => 文字) | ((x: 数字) => 数字))[]
>x : 文字
>类型别名 :=> 文字
>x : 数字
>类型别名 :=> 数字

var d: Array<((x: string) => string) | ((x: number) => number)>;
>d : (((x: 文字) => 文字) | ((x: 数字) => 数字))[]
>Array : T[]
>x : 文字
>类型别名 :=> 文字
>x : 数字
>类型别名 :=> 数字

var d: Array<{ (x: string): string } | { (x: number): number }>;
>d : (((x: 文字) => 文字) | ((x: 数字) => 数字))[]
>Array : T[]
>x : 文字
>类型别名 :=> 文字
>x : 数字
>类型别名 :=> 数字

var d: (Array<{ (x: string): string } | { (x: number): number }>);
>d : (((x: 文字) => 文字) | ((x: 数字) => 数字))[]
>Array : T[]
>x : 文字
>类型别名 :=> 文字
>x : 数字
>类型别名 :=> 数字

var e: typeof a[];
>e : 文字[]
>a : 文字
>类型别名 :=> 文字

var e: (typeof a)[];
>e : 文字[]
>a : 文字
>类型别名 :=> 文字

var f: (string) => string;
>f : (string: 任意) => 文字
>string : 任意
>类型别名 :=> 任意

var f: (string: any) => string;
>f : (string: 任意) => 文字
>string : 任意
>类型别名 :=> 任意

var g: [string, string];
>g : [文字, 文字]

var g: [(string), string];
>g : [文字, 文字]

var g: [(string), (((typeof a)))];
>g : [文字, 文字]
>a : 文字
>类型别名 :=> 文字

