=== tests/cases/compiler/derivedInterfaceCallSignature.ts ===
interface D3SvgPath {
>D3SvgPath : D3SvgPath

    (data: any, index?: number): string;
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字

    x(): (data: any, index?: number) => number;
>x : () => (data: 任意, index?: 数字) => 数字
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字

    y(): (data: any, index?: number) => number;
>y : () => (data: 任意, index?: 数字) => 数字
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字

    interpolate(): string;
>interpolate : () => 文字

    tension(): number;
>tension : () => 数字

    defined(): (data: any, index?: number) => boolean;
>defined : () => (data: 任意, index?: 数字) => 真假
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字
}

interface D3SvgArea extends D3SvgPath {
>D3SvgArea : D3SvgArea
>D3SvgPath : D3SvgPath

    x(x: (data: any, index?: number) => number): D3SvgArea;
>x : (x: (data: 任意, index?: 数字) => 数字) => D3SvgArea
>x : (data: 任意, index?: 数字) => 数字
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字
>D3SvgArea : D3SvgArea

    y(y: (data: any, index?: number) => number): D3SvgArea;
>y : (y: (data: 任意, index?: 数字) => 数字) => D3SvgArea
>y : (data: 任意, index?: 数字) => 数字
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字
>D3SvgArea : D3SvgArea

    y0(): (data: any, index?: number) => number;
>y0 : { (): (data: 任意, index?: 数字) => 数字; (y: 数字): D3SvgArea; (y: (data: 任意, index?: 数字) => 数字): D3SvgArea; }
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字

    y0(y: number): D3SvgArea;
>y0 : { (): (data: 任意, index?: 数字) => 数字; (y: 数字): D3SvgArea; (y: (data: 任意, index?: 数字) => 数字): D3SvgArea; }
>y : 数字
>类型别名 :=> 数字
>D3SvgArea : D3SvgArea

    y0(y: (data: any, index?: number) => number): D3SvgArea;
>y0 : { (): (data: 任意, index?: 数字) => 数字; (y: 数字): D3SvgArea; (y: (data: 任意, index?: 数字) => 数字): D3SvgArea; }
>y : (data: 任意, index?: 数字) => 数字
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字
>D3SvgArea : D3SvgArea

    y1(): (data: any, index?: number) => number;
>y1 : { (): (data: 任意, index?: 数字) => 数字; (y: 数字): D3SvgArea; (y: (data: 任意, index?: 数字) => 数字): D3SvgArea; }
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字

    y1(y: number): D3SvgArea;
>y1 : { (): (data: 任意, index?: 数字) => 数字; (y: 数字): D3SvgArea; (y: (data: 任意, index?: 数字) => 数字): D3SvgArea; }
>y : 数字
>类型别名 :=> 数字
>D3SvgArea : D3SvgArea

    y1(y: (data: any, index?: number) => number): D3SvgArea;
>y1 : { (): (data: 任意, index?: 数字) => 数字; (y: 数字): D3SvgArea; (y: (data: 任意, index?: 数字) => 数字): D3SvgArea; }
>y : (data: 任意, index?: 数字) => 数字
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字
>D3SvgArea : D3SvgArea

    interpolate(interpolator: string): D3SvgArea;
>interpolate : (interpolator: 文字) => D3SvgArea
>interpolator : 文字
>类型别名 :=> 文字
>D3SvgArea : D3SvgArea

    tension(tension: number): D3SvgArea;
>tension : (tension: 数字) => D3SvgArea
>tension : 数字
>类型别名 :=> 数字
>D3SvgArea : D3SvgArea

    defined(defined: (data: any, index?: number) => boolean): D3SvgArea;
>defined : (defined: (data: 任意, index?: 数字) => 真假) => D3SvgArea
>defined : (data: 任意, index?: 数字) => 真假
>data : 任意
>类型别名 :=> 任意
>index : 数字
>类型别名 :=> 数字
>D3SvgArea : D3SvgArea
}

var area: D3SvgArea;
>area : D3SvgArea
>D3SvgArea : D3SvgArea

area.interpolate('two')('one');
>area.interpolate('two')('one') : 文字
>类型别名 :=> 文字
>area.interpolate('two') : D3SvgArea
>area.interpolate : (interpolator: 文字) => D3SvgArea
>area : D3SvgArea
>interpolate : (interpolator: 文字) => D3SvgArea
>'two' : "two"
>'one' : "one"

