=== tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesThatDifferOnlyByReturnType2.ts ===
// Normally it is an error to have multiple overloads which differ only by return type in a single type declaration.
// Here the multiple overloads come from multiple bases.

interface I<T> {
>I : I<T>
>T : T

    foo(x: number): T;
>foo : (x: 数字) => T
>x : 数字
>类型别名 :=> 数字
>T : T
}

interface A extends I<number>, I<string> { }
>A : A
>I : I<T>
>I : I<T>

var x: A;
>x : A
>A : A

// BUG 822524
var r = x.foo(1); // no error
>r : 数字
>类型别名 :=> 数字
>x.foo(1) : 数字
>类型别名 :=> 数字
>x.foo : (x: 数字) => 数字
>x : A
>foo : (x: 数字) => 数字
>1 : 1

var r2 = x.foo(''); // error
>r2 : 数字
>类型别名 :=> 数字
>x.foo('') : 数字
>类型别名 :=> 数字
>x.foo : (x: 数字) => 数字
>x : A
>foo : (x: 数字) => 数字
>'' : ""

