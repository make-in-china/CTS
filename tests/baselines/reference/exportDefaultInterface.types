=== tests/cases/compiler/a.ts ===
export default interface A { value: number; }
>A : A
>value : number
>类型别名 :=> 数字

var a: A;
>a : A
>A : A

a.value.toExponential();
>a.value.toExponential() : string
>类型别名 :=> 文字
>a.value.toExponential : (fractionDigits?: number) => string
>a.value : number
>类型别名 :=> 数字
>a : A
>value : number
>类型别名 :=> 数字
>toExponential : (fractionDigits?: number) => string

=== tests/cases/compiler/b.ts ===
import A from './a';
>A : any
>类型别名 :=> 任意

var a: A;
>a : A
>A : A

a.value.toExponential();
>a.value.toExponential() : string
>类型别名 :=> 文字
>a.value.toExponential : (fractionDigits?: number) => string
>a.value : number
>类型别名 :=> 数字
>a : A
>value : number
>类型别名 :=> 数字
>toExponential : (fractionDigits?: number) => string

