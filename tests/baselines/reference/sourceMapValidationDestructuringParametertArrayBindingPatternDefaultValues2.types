=== tests/cases/compiler/sourceMapValidationDestructuringParametertArrayBindingPatternDefaultValues2.ts ===
declare var console: {
>console : { log(msg: 任意): 无值; }

    log(msg: any): void;
>log : (msg: 任意) => 无值
>msg : 任意
>类型别名 :=> 任意
}
type Robot = [string, string[]];
>Robot : [文字, 文字[]]

var robotA: Robot = ["trimmer", ["trimming", "edging"]];
>robotA : [文字, 文字[]]
>Robot : [文字, 文字[]]
>["trimmer", ["trimming", "edging"]] : [文字, 文字[]]
>"trimmer" : "trimmer"
>["trimming", "edging"] : 文字[]
>"trimming" : "trimming"
>"edging" : "edging"

function foo1([, skillA = ["noSkill", "noSkill"]]: Robot= ["name", ["skill1", "skill2"]]) {
>foo1 : ([, skillA]?: [文字, 文字[]]) => 无值
> : 未定
>类型别名 :=> 未定
>skillA : 文字[]
>["noSkill", "noSkill"] : 文字[]
>"noSkill" : "noSkill"
>"noSkill" : "noSkill"
>Robot : [文字, 文字[]]
>["name", ["skill1", "skill2"]] : [文字, 文字[]]
>"name" : "name"
>["skill1", "skill2"] : 文字[]
>"skill1" : "skill1"
>"skill2" : "skill2"

    console.log(skillA);
>console.log(skillA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>skillA : 文字[]
}

function foo2([nameMB = "noName"]: Robot = ["name", ["skill1", "skill2"]]) {
>foo2 : ([nameMB]?: [文字, 文字[]]) => 无值
>nameMB : 文字
>类型别名 :=> 文字
>"noName" : "noName"
>Robot : [文字, 文字[]]
>["name", ["skill1", "skill2"]] : [文字, 文字[]]
>"name" : "name"
>["skill1", "skill2"] : 文字[]
>"skill1" : "skill1"
>"skill2" : "skill2"

    console.log(nameMB);
>console.log(nameMB) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameMB : 文字
>类型别名 :=> 文字
}

function foo3([nameMA = "noName", [
>foo3 : ([nameMA, [primarySkillA, secondarySkillA]]: [文字, 文字[]]) => 无值
>nameMA : 文字
>类型别名 :=> 文字
>"noName" : "noName"

    primarySkillA = "primary",
>primarySkillA : 文字
>类型别名 :=> 文字
>"primary" : "primary"

    secondarySkillA = "secondary"
>secondarySkillA : 文字
>类型别名 :=> 文字
>"secondary" : "secondary"

] = ["noSkill", "noSkill"]]: Robot) {
>["noSkill", "noSkill"] : [文字, 文字]
>"noSkill" : "noSkill"
>"noSkill" : "noSkill"
>Robot : [文字, 文字[]]

    console.log(nameMA);
>console.log(nameMA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameMA : 文字
>类型别名 :=> 文字
}

foo1(robotA);
>foo1(robotA) : 无值
>类型别名 :=> 无值
>foo1 : ([, skillA]?: [文字, 文字[]]) => 无值
>robotA : [文字, 文字[]]

foo1(["roomba", ["vaccum", "mopping"]]);
>foo1(["roomba", ["vaccum", "mopping"]]) : 无值
>类型别名 :=> 无值
>foo1 : ([, skillA]?: [文字, 文字[]]) => 无值
>["roomba", ["vaccum", "mopping"]] : [文字, 文字[]]
>"roomba" : "roomba"
>["vaccum", "mopping"] : 文字[]
>"vaccum" : "vaccum"
>"mopping" : "mopping"

foo2(robotA);
>foo2(robotA) : 无值
>类型别名 :=> 无值
>foo2 : ([nameMB]?: [文字, 文字[]]) => 无值
>robotA : [文字, 文字[]]

foo2(["roomba", ["vaccum", "mopping"]]);
>foo2(["roomba", ["vaccum", "mopping"]]) : 无值
>类型别名 :=> 无值
>foo2 : ([nameMB]?: [文字, 文字[]]) => 无值
>["roomba", ["vaccum", "mopping"]] : [文字, 文字[]]
>"roomba" : "roomba"
>["vaccum", "mopping"] : 文字[]
>"vaccum" : "vaccum"
>"mopping" : "mopping"

foo3(robotA);
>foo3(robotA) : 无值
>类型别名 :=> 无值
>foo3 : ([nameMA, [primarySkillA, secondarySkillA]]: [文字, 文字[]]) => 无值
>robotA : [文字, 文字[]]

foo3(["roomba", ["vaccum", "mopping"]]);
>foo3(["roomba", ["vaccum", "mopping"]]) : 无值
>类型别名 :=> 无值
>foo3 : ([nameMA, [primarySkillA, secondarySkillA]]: [文字, 文字[]]) => 无值
>["roomba", ["vaccum", "mopping"]] : [文字, 文字[]]
>"roomba" : "roomba"
>["vaccum", "mopping"] : 文字[]
>"vaccum" : "vaccum"
>"mopping" : "mopping"

