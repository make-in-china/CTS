=== tests/cases/compiler/genericPrototypeProperty2.ts ===
interface EventTarget { x } 
>EventTarget : EventTarget
>x : 任意
>类型别名 :=> 任意

class BaseEvent {
>BaseEvent : BaseEvent

    target: EventTarget;
>target : EventTarget
>EventTarget : EventTarget
}

class MyEvent<T extends EventTarget> extends BaseEvent {
>MyEvent : MyEvent<T>
>T : T
>EventTarget : EventTarget
>BaseEvent : BaseEvent

    target: T;
>target : T
>T : T
}
class BaseEventWrapper {
>BaseEventWrapper : BaseEventWrapper

    t: BaseEvent;
>t : BaseEvent
>BaseEvent : BaseEvent
}

class MyEventWrapper extends BaseEventWrapper {
>MyEventWrapper : MyEventWrapper
>BaseEventWrapper : BaseEventWrapper

    t: MyEvent<any>; // any satisfies constraint and passes assignability check between 'target' properties
>t : MyEvent<任意>
>MyEvent : MyEvent<T>
}
