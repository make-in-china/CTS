=== tests/cases/compiler/parseTypes.ts ===
var x = <() => number>null;
>x : () => number
><() => number>null : () => number
>null : null
>类型别名 :=> 空值

var y = <{(): number; }>null;
>y : () => number
><{(): number; }>null : () => number
>null : null
>类型别名 :=> 空值

var z = <{new(): number; }>null
>z : new () => number
><{new(): number; }>null : new () => number
>null : null
>类型别名 :=> 空值

var w = <{[x:number]: number; }>null
>w : { [x: number]: number; }
><{[x:number]: number; }>null : { [x: number]: number; }
>x : number
>类型别名 :=> 数字
>null : null
>类型别名 :=> 空值

function f() { return 3 };
>f : () => number
>3 : 3

function g(s: string) { true };
>g : (s: string) => void
>s : string
>类型别名 :=> 文字
>true : true
>类型别名 :=> 为真

y=f;
>y=f : () => number
>y : () => number
>f : () => number

y=g;
>y=g : (s: string) => void
>y : () => number
>g : (s: string) => void

x=g;
>x=g : (s: string) => void
>x : () => number
>g : (s: string) => void

w=g;
>w=g : (s: string) => void
>w : { [x: number]: number; }
>g : (s: string) => void

z=g;
>z=g : (s: string) => void
>z : new () => number
>g : (s: string) => void

