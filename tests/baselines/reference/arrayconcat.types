=== tests/cases/compiler/arrayconcat.ts ===
interface IOptions {
>IOptions : IOptions

    name?: string;
>name : string
>类型别名 :=> 文字

    flag?: boolean;
>flag : boolean
>类型别名 :=> 真假

    short?: string;
>short : string
>类型别名 :=> 文字

    usage?: string;
>usage : string
>类型别名 :=> 文字

    set?: (s: string) => void;
>set : (s: string) => void
>s : string
>类型别名 :=> 文字

    type?: string;
>type : string
>类型别名 :=> 文字

    experimental?: boolean;
>experimental : boolean
>类型别名 :=> 真假
}

class parser {
>parser : parser

	public options: IOptions[];
>options : IOptions[]
>IOptions : IOptions

	public m() {
>m : () => void

		this.options = this.options.sort(function(a, b) {
>this.options = this.options.sort(function(a, b) {            var aName = a.name.toLowerCase();            var bName = b.name.toLowerCase();            if (aName > bName) {                return 1;            } else if (aName < bName) {                return -1;            } else {                return 0;            }        }) : IOptions[]
>this.options : IOptions[]
>this : this
>options : IOptions[]
>this.options.sort(function(a, b) {            var aName = a.name.toLowerCase();            var bName = b.name.toLowerCase();            if (aName > bName) {                return 1;            } else if (aName < bName) {                return -1;            } else {                return 0;            }        }) : IOptions[]
>this.options.sort : (compareFn?: (a: IOptions, b: IOptions) => number) => IOptions[]
>this.options : IOptions[]
>this : this
>options : IOptions[]
>sort : (compareFn?: (a: IOptions, b: IOptions) => number) => IOptions[]
>function(a, b) {            var aName = a.name.toLowerCase();            var bName = b.name.toLowerCase();            if (aName > bName) {                return 1;            } else if (aName < bName) {                return -1;            } else {                return 0;            }        } : (a: IOptions, b: IOptions) => 1 | -1 | 0
>a : IOptions
>b : IOptions

            var aName = a.name.toLowerCase();
>aName : string
>类型别名 :=> 文字
>a.name.toLowerCase() : string
>类型别名 :=> 文字
>a.name.toLowerCase : () => string
>a.name : string
>类型别名 :=> 文字
>a : IOptions
>name : string
>类型别名 :=> 文字
>toLowerCase : () => string

            var bName = b.name.toLowerCase();
>bName : string
>类型别名 :=> 文字
>b.name.toLowerCase() : string
>类型别名 :=> 文字
>b.name.toLowerCase : () => string
>b.name : string
>类型别名 :=> 文字
>b : IOptions
>name : string
>类型别名 :=> 文字
>toLowerCase : () => string

            if (aName > bName) {
>aName > bName : boolean
>类型别名 :=> 真假
>aName : string
>类型别名 :=> 文字
>bName : string
>类型别名 :=> 文字

                return 1;
>1 : 1

            } else if (aName < bName) {
>aName < bName : boolean
>类型别名 :=> 真假
>aName : string
>类型别名 :=> 文字
>bName : string
>类型别名 :=> 文字

                return -1;
>-1 : -1
>1 : 1

            } else {
                return 0;
>0 : 0
            }
        });
	}
}
