=== tests/cases/compiler/f1.ts ===
export class A {}
>A : A

export interface I {}
>I : I

=== tests/cases/compiler/f2.ts ===
var x = 1;
>x : number
>类型别名 :=> 数字
>1 : 1

interface I { }
>I : I

namespace N {
>N : typeof N

	export var x = 1;
>x : number
>类型别名 :=> 数字
>1 : 1

	export interface I { }	
>I : I
}

import IX = N.x;
>IX : number
>类型别名 :=> 数字
>N : typeof N
>x : number
>类型别名 :=> 数字

import II = N.I;
>II : any
>类型别名 :=> 任意
>N : typeof N
>I : II

import { A, A as EA, I as EI } from "f1";
>A : typeof A
>A : typeof A
>EA : typeof A
>I : any
>类型别名 :=> 任意
>EI : any
>类型别名 :=> 任意

export {x};
>x : number
>类型别名 :=> 数字

export {x as x1};
>x : number
>类型别名 :=> 数字
>x1 : number
>类型别名 :=> 数字

export {I};
>I : any
>类型别名 :=> 任意

export {I as I1};
>I : any
>类型别名 :=> 任意
>I1 : any
>类型别名 :=> 任意

export {A};
>A : typeof A

export {A as A1};
>A : typeof A
>A1 : typeof A

export {EA};
>EA : typeof A

export {EA as EA1};
>EA : typeof A
>EA1 : typeof A

export {EI };
>EI : any
>类型别名 :=> 任意

export {EI as EI1};
>EI : any
>类型别名 :=> 任意
>EI1 : any
>类型别名 :=> 任意

export {IX};
>IX : number
>类型别名 :=> 数字

export {IX as IX1};
>IX : number
>类型别名 :=> 数字
>IX1 : number
>类型别名 :=> 数字

export {II};
>II : any
>类型别名 :=> 任意

export {II as II1};
>II : any
>类型别名 :=> 任意
>II1 : any
>类型别名 :=> 任意

