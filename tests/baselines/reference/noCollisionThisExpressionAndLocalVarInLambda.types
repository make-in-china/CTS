=== tests/cases/compiler/noCollisionThisExpressionAndLocalVarInLambda.ts ===
declare function alert(message?: any): void;
>alert : (message?: 任意) => 无值
>message : 任意
>类型别名 :=> 任意

var x = {
>x : { doStuff: (callback: 任意) => () => 任意; }
>{    doStuff: (callback) => () => {        var _this = 2;        return callback(_this);    }} : { doStuff: (callback: 任意) => () => 任意; }

    doStuff: (callback) => () => {
>doStuff : (callback: 任意) => () => 任意
>(callback) => () => {        var _this = 2;        return callback(_this);    } : (callback: 任意) => () => 任意
>callback : 任意
>类型别名 :=> 任意
>() => {        var _this = 2;        return callback(_this);    } : () => 任意

        var _this = 2;
>_this : 数字
>类型别名 :=> 数字
>2 : 2

        return callback(_this);
>callback(_this) : 任意
>类型别名 :=> 任意
>callback : 任意
>类型别名 :=> 任意
>_this : 数字
>类型别名 :=> 数字
    }
}
alert(x.doStuff(x => alert(x)));
>alert(x.doStuff(x => alert(x))) : 无值
>类型别名 :=> 无值
>alert : (message?: 任意) => 无值
>x.doStuff(x => alert(x)) : () => 任意
>x.doStuff : (callback: 任意) => () => 任意
>x : { doStuff: (callback: 任意) => () => 任意; }
>doStuff : (callback: 任意) => () => 任意
>x => alert(x) : (x: 任意) => 无值
>x : 任意
>类型别名 :=> 任意
>alert(x) : 无值
>类型别名 :=> 无值
>alert : (message?: 任意) => 无值
>x : 任意
>类型别名 :=> 任意

