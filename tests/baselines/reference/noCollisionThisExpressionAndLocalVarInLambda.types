=== tests/cases/compiler/noCollisionThisExpressionAndLocalVarInLambda.ts ===
declare function alert(message?: any): void;
>alert : (message?: any) => void
>message : any
>类型别名 :=> 任意

var x = {
>x : { doStuff: (callback: any) => () => any; }
>{    doStuff: (callback) => () => {        var _this = 2;        return callback(_this);    }} : { doStuff: (callback: any) => () => any; }

    doStuff: (callback) => () => {
>doStuff : (callback: any) => () => any
>(callback) => () => {        var _this = 2;        return callback(_this);    } : (callback: any) => () => any
>callback : any
>类型别名 :=> 任意
>() => {        var _this = 2;        return callback(_this);    } : () => any

        var _this = 2;
>_this : number
>类型别名 :=> 数字
>2 : 2

        return callback(_this);
>callback(_this) : any
>类型别名 :=> 任意
>callback : any
>类型别名 :=> 任意
>_this : number
>类型别名 :=> 数字
    }
}
alert(x.doStuff(x => alert(x)));
>alert(x.doStuff(x => alert(x))) : void
>类型别名 :=> 无值
>alert : (message?: any) => void
>x.doStuff(x => alert(x)) : () => any
>x.doStuff : (callback: any) => () => any
>x : { doStuff: (callback: any) => () => any; }
>doStuff : (callback: any) => () => any
>x => alert(x) : (x: any) => void
>x : any
>类型别名 :=> 任意
>alert(x) : void
>类型别名 :=> 无值
>alert : (message?: any) => void
>x : any
>类型别名 :=> 任意

