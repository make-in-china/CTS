=== tests/cases/compiler/ambiguousOverload.ts ===
function foof(bar: string, y): number;
>foof : { (bar: 文字, y: 任意): 数字; (bar: 文字, x: 任意): 文字; }
>bar : 文字
>类型别名 :=> 文字
>y : 任意
>类型别名 :=> 任意

function foof(bar: string, x): string;
>foof : { (bar: 文字, y: 任意): 数字; (bar: 文字, x: 任意): 文字; }
>bar : 文字
>类型别名 :=> 文字
>x : 任意
>类型别名 :=> 任意

function foof(bar: any): any { return bar };
>foof : { (bar: 文字, y: 任意): 数字; (bar: 文字, x: 任意): 文字; }
>bar : 任意
>类型别名 :=> 任意
>bar : 任意
>类型别名 :=> 任意

var x: number = foof("s", null);
>x : 数字
>类型别名 :=> 数字
>foof("s", null) : 数字
>类型别名 :=> 数字
>foof : { (bar: 文字, y: 任意): 数字; (bar: 文字, x: 任意): 文字; }
>"s" : "s"
>null : 空值
>类型别名 :=> 空值

var y: string = foof("s", null);
>y : 文字
>类型别名 :=> 文字
>foof("s", null) : 数字
>类型别名 :=> 数字
>foof : { (bar: 文字, y: 任意): 数字; (bar: 文字, x: 任意): 文字; }
>"s" : "s"
>null : 空值
>类型别名 :=> 空值

function foof2(bar: string, x): string;
>foof2 : { (bar: 文字, x: 任意): 文字; (bar: 文字, y: 任意): 数字; }
>bar : 文字
>类型别名 :=> 文字
>x : 任意
>类型别名 :=> 任意

function foof2(bar: string, y): number;
>foof2 : { (bar: 文字, x: 任意): 文字; (bar: 文字, y: 任意): 数字; }
>bar : 文字
>类型别名 :=> 文字
>y : 任意
>类型别名 :=> 任意

function foof2(bar: any): any { return bar };
>foof2 : { (bar: 文字, x: 任意): 文字; (bar: 文字, y: 任意): 数字; }
>bar : 任意
>类型别名 :=> 任意
>bar : 任意
>类型别名 :=> 任意

var x2: string = foof2("s", null);
>x2 : 文字
>类型别名 :=> 文字
>foof2("s", null) : 文字
>类型别名 :=> 文字
>foof2 : { (bar: 文字, x: 任意): 文字; (bar: 文字, y: 任意): 数字; }
>"s" : "s"
>null : 空值
>类型别名 :=> 空值

var y2: number = foof2("s", null);
>y2 : 数字
>类型别名 :=> 数字
>foof2("s", null) : 文字
>类型别名 :=> 文字
>foof2 : { (bar: 文字, x: 任意): 文字; (bar: 文字, y: 任意): 数字; }
>"s" : "s"
>null : 空值
>类型别名 :=> 空值

