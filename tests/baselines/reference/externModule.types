=== tests/cases/compiler/externModule.ts ===
declare module {
>declare : 任意
>类型别名 :=> 任意
>module : 任意
>类型别名 :=> 任意

    export class XDate {
>XDate : XDate

		public getDay():number;
>getDay : () => 数字

		public getXDate():number;
>getXDate : () => 数字

		// etc.

	    // Called as a function
	    // Not supported anymore? public (): string;
	    
	    // Called as a constructor
	    constructor(year: number, month: number);
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字

	    constructor(year: number, month: number, date: number);
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字
>date : 数字
>类型别名 :=> 数字

	    constructor(year: number, month: number, date: number, hours: number);
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字
>date : 数字
>类型别名 :=> 数字
>hours : 数字
>类型别名 :=> 数字

	    constructor(year: number, month: number, date: number, hours: number, minutes: number);
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字
>date : 数字
>类型别名 :=> 数字
>hours : 数字
>类型别名 :=> 数字
>minutes : 数字
>类型别名 :=> 数字

	    constructor(year: number, month: number, date: number, hours: number, minutes: number, seconds: number);
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字
>date : 数字
>类型别名 :=> 数字
>hours : 数字
>类型别名 :=> 数字
>minutes : 数字
>类型别名 :=> 数字
>seconds : 数字
>类型别名 :=> 数字

	    constructor(year: number, month: number, date: number, hours: number, minutes: number, seconds: number, ms: number);
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字
>date : 数字
>类型别名 :=> 数字
>hours : 数字
>类型别名 :=> 数字
>minutes : 数字
>类型别名 :=> 数字
>seconds : 数字
>类型别名 :=> 数字
>ms : 数字
>类型别名 :=> 数字

	    constructor(value: number);
>value : 数字
>类型别名 :=> 数字

	    constructor();
	    
	    static parse(string: string): number;
>parse : (string: 文字) => 数字
>string : 文字
>类型别名 :=> 文字

	    static UTC(year: number, month: number): number;
>UTC : { (year: 数字, month: 数字): 数字; (year: 数字, month: 数字, date: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字, ms: 数字): 数字; }
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字

	    static UTC(year: number, month: number, date: number): number;
>UTC : { (year: 数字, month: 数字): 数字; (year: 数字, month: 数字, date: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字, ms: 数字): 数字; }
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字
>date : 数字
>类型别名 :=> 数字

	    static UTC(year: number, month: number, date: number, hours: number): number;
>UTC : { (year: 数字, month: 数字): 数字; (year: 数字, month: 数字, date: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字, ms: 数字): 数字; }
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字
>date : 数字
>类型别名 :=> 数字
>hours : 数字
>类型别名 :=> 数字

	    static UTC(year: number, month: number, date: number, hours: number, minutes: number): number;
>UTC : { (year: 数字, month: 数字): 数字; (year: 数字, month: 数字, date: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字, ms: 数字): 数字; }
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字
>date : 数字
>类型别名 :=> 数字
>hours : 数字
>类型别名 :=> 数字
>minutes : 数字
>类型别名 :=> 数字

	    static UTC(year: number, month: number, date: number, hours: number, minutes: number, seconds: number): number;
>UTC : { (year: 数字, month: 数字): 数字; (year: 数字, month: 数字, date: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字, ms: 数字): 数字; }
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字
>date : 数字
>类型别名 :=> 数字
>hours : 数字
>类型别名 :=> 数字
>minutes : 数字
>类型别名 :=> 数字
>seconds : 数字
>类型别名 :=> 数字

	    static UTC(year: number, month: number, date: number, hours: number, minutes: number, seconds: number,
>UTC : { (year: 数字, month: 数字): 数字; (year: 数字, month: 数字, date: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字): 数字; (year: 数字, month: 数字, date: 数字, hours: 数字, minutes: 数字, seconds: 数字, ms: 数字): 数字; }
>year : 数字
>类型别名 :=> 数字
>month : 数字
>类型别名 :=> 数字
>date : 数字
>类型别名 :=> 数字
>hours : 数字
>类型别名 :=> 数字
>minutes : 数字
>类型别名 :=> 数字
>seconds : 数字
>类型别名 :=> 数字

		         ms: number): number;
>ms : 数字
>类型别名 :=> 数字

	    static now(): number;
>now : () => 数字
    }
}

var d=new XDate();
>d : 任意
>类型别名 :=> 任意
>new XDate() : 任意
>类型别名 :=> 任意
>XDate : 任意
>类型别名 :=> 任意

d.getDay();
>d.getDay() : 任意
>类型别名 :=> 任意
>d.getDay : 任意
>类型别名 :=> 任意
>d : 任意
>类型别名 :=> 任意
>getDay : 任意
>类型别名 :=> 任意

d=new XDate(1978,2);
>d=new XDate(1978,2) : 任意
>类型别名 :=> 任意
>d : 任意
>类型别名 :=> 任意
>new XDate(1978,2) : 任意
>类型别名 :=> 任意
>XDate : 任意
>类型别名 :=> 任意
>1978 : 1978
>2 : 2

d.getXDate();
>d.getXDate() : 任意
>类型别名 :=> 任意
>d.getXDate : 任意
>类型别名 :=> 任意
>d : 任意
>类型别名 :=> 任意
>getXDate : 任意
>类型别名 :=> 任意

var n=XDate.parse("3/2/2004");
>n : 任意
>类型别名 :=> 任意
>XDate.parse("3/2/2004") : 任意
>类型别名 :=> 任意
>XDate.parse : 任意
>类型别名 :=> 任意
>XDate : 任意
>类型别名 :=> 任意
>parse : 任意
>类型别名 :=> 任意
>"3/2/2004" : "3/2/2004"

n=XDate.UTC(1964,2,1);
>n=XDate.UTC(1964,2,1) : 任意
>类型别名 :=> 任意
>n : 任意
>类型别名 :=> 任意
>XDate.UTC(1964,2,1) : 任意
>类型别名 :=> 任意
>XDate.UTC : 任意
>类型别名 :=> 任意
>XDate : 任意
>类型别名 :=> 任意
>UTC : 任意
>类型别名 :=> 任意
>1964 : 1964
>2 : 2
>1 : 1


