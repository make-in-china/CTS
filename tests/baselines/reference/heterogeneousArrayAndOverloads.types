=== tests/cases/compiler/heterogeneousArrayAndOverloads.ts ===
class arrTest {
>arrTest : arrTest

    test(arg1: number[]);
>test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>arg1 : 数字[]

    test(arg1: string[]);
>test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>arg1 : 文字[]

    test(arg1: any[]) { }
>test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>arg1 : 任意[]

    callTest() {
>callTest : () => 无值

        this.test([1, 2, 3, 5]);
>this.test([1, 2, 3, 5]) : 任意
>类型别名 :=> 任意
>this.test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>this : 本体
>test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>[1, 2, 3, 5] : 数字[]
>1 : 1
>2 : 2
>3 : 3
>5 : 5

        this.test(["hi"]);
>this.test(["hi"]) : 任意
>类型别名 :=> 任意
>this.test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>this : 本体
>test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>["hi"] : 文字[]
>"hi" : "hi"

        this.test([]);
>this.test([]) : 任意
>类型别名 :=> 任意
>this.test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>this : 本体
>test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>[] : 未定[]

        this.test([1, 2, "hi", 5]); // Error
>this.test([1, 2, "hi", 5]) : 任意
>类型别名 :=> 任意
>this.test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>this : 本体
>test : { (arg1: 数字[]): 任意; (arg1: 文字[]): 任意; }
>[1, 2, "hi", 5] : (文字 | 数字)[]
>1 : 1
>2 : 2
>"hi" : "hi"
>5 : 5
    }
}
