=== tests/cases/compiler/es6ModuleConst.ts ===
export const a = "hello";
>a : "hello"
>"hello" : "hello"

export const x: string = a, y = x;
>x : 文字
>类型别名 :=> 文字
>a : "hello"
>y : 文字
>类型别名 :=> 文字
>x : 文字
>类型别名 :=> 文字

const b = y;
>b : 文字
>类型别名 :=> 文字
>y : 文字
>类型别名 :=> 文字

const c: string = b, d = c;
>c : 文字
>类型别名 :=> 文字
>b : 文字
>类型别名 :=> 文字
>d : 文字
>类型别名 :=> 文字
>c : 文字
>类型别名 :=> 文字

export module m1 {
>m1 : 类为 m1

    export const k = a;
>k : "hello"
>a : "hello"

    export const l: string = b, m = k;
>l : 文字
>类型别名 :=> 文字
>b : 文字
>类型别名 :=> 文字
>m : "hello"
>k : "hello"

    const n = m1.k;
>n : "hello"
>m1.k : "hello"
>m1 : 类为 m1
>k : "hello"

    const o: string = n, p = k;
>o : 文字
>类型别名 :=> 文字
>n : "hello"
>p : "hello"
>k : "hello"
}
module m2 {
>m2 : 类为 m2

    export const k = a;
>k : "hello"
>a : "hello"

    export const l: string = b, m = k;
>l : 文字
>类型别名 :=> 文字
>b : 文字
>类型别名 :=> 文字
>m : "hello"
>k : "hello"

    const n = m1.k;
>n : "hello"
>m1.k : "hello"
>m1 : 类为 m1
>k : "hello"

    const o: string = n, p = k;
>o : 文字
>类型别名 :=> 文字
>n : "hello"
>p : "hello"
>k : "hello"
}
