=== tests/cases/compiler/arrowFunctionWithObjectLiteralBody6.ts ===
var a = () => <Error>{ name: "foo", message: "bar" };      
>a : () => Error
>() => <Error>{ name: "foo", message: "bar" } : () => Error
><Error>{ name: "foo", message: "bar" } : Error
>Error : Error
>{ name: "foo", message: "bar" } : { name: 文字; message: 文字; }
>name : 文字
>类型别名 :=> 文字
>"foo" : "foo"
>message : 文字
>类型别名 :=> 文字
>"bar" : "bar"

var b = () => (<Error>{ name: "foo", message: "bar" });    
>b : () => Error
>() => (<Error>{ name: "foo", message: "bar" }) : () => Error
>(<Error>{ name: "foo", message: "bar" }) : Error
><Error>{ name: "foo", message: "bar" } : Error
>Error : Error
>{ name: "foo", message: "bar" } : { name: 文字; message: 文字; }
>name : 文字
>类型别名 :=> 文字
>"foo" : "foo"
>message : 文字
>类型别名 :=> 文字
>"bar" : "bar"

var c = () => ({ name: "foo", message: "bar" });           
>c : () => { name: 文字; message: 文字; }
>() => ({ name: "foo", message: "bar" }) : () => { name: 文字; message: 文字; }
>({ name: "foo", message: "bar" }) : { name: 文字; message: 文字; }
>{ name: "foo", message: "bar" } : { name: 文字; message: 文字; }
>name : 文字
>类型别名 :=> 文字
>"foo" : "foo"
>message : 文字
>类型别名 :=> 文字
>"bar" : "bar"

var d = () => ((<Error>({ name: "foo", message: "bar" })));
>d : () => Error
>() => ((<Error>({ name: "foo", message: "bar" }))) : () => Error
>((<Error>({ name: "foo", message: "bar" }))) : Error
>(<Error>({ name: "foo", message: "bar" })) : Error
><Error>({ name: "foo", message: "bar" }) : Error
>Error : Error
>({ name: "foo", message: "bar" }) : { name: 文字; message: 文字; }
>{ name: "foo", message: "bar" } : { name: 文字; message: 文字; }
>name : 文字
>类型别名 :=> 文字
>"foo" : "foo"
>message : 文字
>类型别名 :=> 文字
>"bar" : "bar"

