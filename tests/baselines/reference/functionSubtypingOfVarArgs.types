=== tests/cases/compiler/functionSubtypingOfVarArgs.ts ===
class EventBase {
>EventBase : EventBase

    private _listeners = [];
>_listeners : any[]
>[] : undefined[]

    add(listener: (...args: any[]) => void): void {
>add : (listener: (...args: any[]) => void) => void
>listener : (...args: any[]) => void
>args : any[]

        this._listeners.push(listener);
>this._listeners.push(listener) : number
>类型别名 :=> 数字
>this._listeners.push : (...items: any[]) => number
>this._listeners : any[]
>this : this
>_listeners : any[]
>push : (...items: any[]) => number
>listener : (...args: any[]) => void
    }
}

class StringEvent extends EventBase { // should work
>StringEvent : StringEvent
>EventBase : EventBase

    add(listener: (items: string) => void ) { // valid, items is subtype of args
>add : (listener: (items: string) => void) => void
>listener : (items: string) => void
>items : string
>类型别名 :=> 文字

        super.add(listener);
>super.add(listener) : void
>类型别名 :=> 无值
>super.add : (listener: (...args: any[]) => void) => void
>super : EventBase
>add : (listener: (...args: any[]) => void) => void
>listener : (items: string) => void
    }
}

