=== tests/cases/compiler/lift.ts ===
class B {
>B : B

    constructor(public y:number) {
>y : number
>类型别名 :=> 数字
    }
    public ll:number;  // to be shadowed
>ll : number
>类型别名 :=> 数字
}

class C extends B {
>C : C
>B : B

    constructor(y:number,z:number,w:number) {
>y : number
>类型别名 :=> 数字
>z : number
>类型别名 :=> 数字
>w : number
>类型别名 :=> 数字

        super(y)
>super(y) : void
>类型别名 :=> 无值
>super : typeof B
>y : number
>类型别名 :=> 数字

        var x=10+w;
>x : number
>类型别名 :=> 数字
>10+w : number
>类型别名 :=> 数字
>10 : 10
>w : number
>类型别名 :=> 数字

        var ll=x*w;
>ll : number
>类型别名 :=> 数字
>x*w : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>w : number
>类型别名 :=> 数字
    }

    public liftxyz () { return x+z+this.y; }
>liftxyz : () => any
>x+z+this.y : any
>类型别名 :=> 任意
>x+z : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>this.y : number
>类型别名 :=> 数字
>this : this
>y : number
>类型别名 :=> 数字

    public liftxylocllz () { return x+z+this.y+this.ll; }
>liftxylocllz : () => any
>x+z+this.y+this.ll : any
>类型别名 :=> 任意
>x+z+this.y : any
>类型别名 :=> 任意
>x+z : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>this.y : number
>类型别名 :=> 数字
>this : this
>y : number
>类型别名 :=> 数字
>this.ll : number
>类型别名 :=> 数字
>this : this
>ll : number
>类型别名 :=> 数字
}

