=== tests/cases/conformance/jsx/file.tsx ===
import React = require('react');
>React : 类为 React

class BigGreeter extends React.Component<{ }, {}> {
>BigGreeter : BigGreeter
>React.Component : React.Component<{}, {}>
>React : 类为 React
>Component : 类为 React.Component

    render() {
>render : () => JSX.Element

        return <div>Default hi</div>;
><div>Default hi</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意
    }
    greeting: string;
>greeting : 文字
>类型别名 :=> 文字
}

// Error
let a = <BigGreeter prop1="hello" />
>a : JSX.Element
><BigGreeter prop1="hello" /> : JSX.Element
>BigGreeter : 类为 BigGreeter
>prop1 : 文字
>类型别名 :=> 文字

// OK
let b = <BigGreeter ref={(input) => { this.textInput = input; }} />
>b : JSX.Element
><BigGreeter ref={(input) => { this.textInput = input; }} /> : JSX.Element
>BigGreeter : 类为 BigGreeter
>ref : (input: BigGreeter) => 无值
>(input) => { this.textInput = input; } : (input: BigGreeter) => 无值
>input : BigGreeter
>this.textInput = input : BigGreeter
>this.textInput : 任意
>类型别名 :=> 任意
>this : 任意
>类型别名 :=> 任意
>textInput : 任意
>类型别名 :=> 任意
>input : BigGreeter

let c = <BigGreeter data-extra="hi" />
>c : JSX.Element
><BigGreeter data-extra="hi" /> : JSX.Element
>BigGreeter : 类为 BigGreeter
>data-extra : 文字
>类型别名 :=> 文字

