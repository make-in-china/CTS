=== tests/cases/compiler/sourceMap-LineBreaks.ts ===
var endsWithlineSeparator = 10; 
>endsWithlineSeparator : number
>类型别名 :=> 数字
>10 : 10

var endsWithParagraphSeparator = 10; 
>endsWithParagraphSeparator : number
>类型别名 :=> 数字
>10 : 10

var endsWithNextLine = 1;var endsWithLineFeed = 1;
>endsWithNextLine : number
>类型别名 :=> 数字
>1 : 1
>endsWithLineFeed : number
>类型别名 :=> 数字
>1 : 1

var endsWithCarriageReturnLineFeed = 1;
>endsWithCarriageReturnLineFeed : number
>类型别名 :=> 数字
>1 : 1

var endsWithCarriageReturn = 1;
>endsWithCarriageReturn : number
>类型别名 :=> 数字
>1 : 1

var endsWithLineFeedCarriageReturn = 1;
>endsWithLineFeedCarriageReturn : number
>类型别名 :=> 数字
>1 : 1

var endsWithLineFeedCarriageReturnLineFeed = 1;
>endsWithLineFeedCarriageReturnLineFeed : number
>类型别名 :=> 数字
>1 : 1

var stringLiteralWithLineFeed = "line 1\
>stringLiteralWithLineFeed : string
>类型别名 :=> 文字
>"line 1\line 2" : "line 1line 2"

line 2";
var stringLiteralWithCarriageReturnLineFeed = "line 1\
>stringLiteralWithCarriageReturnLineFeed : string
>类型别名 :=> 文字
>"line 1\line 2" : "line 1line 2"

line 2";
var stringLiteralWithCarriageReturn = "line 1\
>stringLiteralWithCarriageReturn : string
>类型别名 :=> 文字
>"line 1\line 2" : "line 1line 2"

line 2";

var stringLiteralWithLineSeparator = "line 1\
>stringLiteralWithLineSeparator : string
>类型别名 :=> 文字
>"line 1\ line 2" : "line 1line 2"

line 2";
var stringLiteralWithParagraphSeparator = "line 1\
>stringLiteralWithParagraphSeparator : string
>类型别名 :=> 文字
>"line 1\ line 2" : "line 1line 2"

line 2";
var stringLiteralWithNextLine = "line 1\line 2";
>stringLiteralWithNextLine : string
>类型别名 :=> 文字
>"line 1\line 2" : "line 1\u0085line 2"

