=== tests/cases/conformance/es6/templates/taggedTemplateStringsWithManyCallAndMemberExpressionsES6.ts ===
interface I {
>I : I

    (strs: TemplateStringsArray, ...subs: number[]): I;
>strs : TemplateStringsArray
>TemplateStringsArray : TemplateStringsArray
>subs : number[]
>I : I

    member: {
>member : new (s: string) => new (n: number) => new () => boolean

        new (s: string): {
>s : string
>类型别名 :=> 文字

            new (n: number): {
>n : number
>类型别名 :=> 数字

                new (): boolean;
            }
        }
    };
}
var f: I;
>f : I
>I : I

var x = new new new f `abc${ 0 }def`.member("hello")(42) === true;
>x : boolean
>类型别名 :=> 真假
>new new new f `abc${ 0 }def`.member("hello")(42) === true : boolean
>类型别名 :=> 真假
>new new new f `abc${ 0 }def`.member("hello")(42) : boolean
>类型别名 :=> 真假
>new new f `abc${ 0 }def`.member("hello")(42) : new () => boolean
>new f `abc${ 0 }def`.member("hello") : new (n: number) => new () => boolean
>f `abc${ 0 }def`.member : new (s: string) => new (n: number) => new () => boolean
>f `abc${ 0 }def` : I
>f : I
>`abc${ 0 }def` : string
>类型别名 :=> 文字
>0 : 0
>member : new (s: string) => new (n: number) => new () => boolean
>"hello" : "hello"
>42 : 42
>true : true
>类型别名 :=> 为真


