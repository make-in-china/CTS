=== tests/cases/compiler/indexTypeCheck.ts ===
interface Red {
>Red : Red

	[n:number]; // ok
>n : number
>类型别名 :=> 数字

	[s:string]; // ok
>s : string
>类型别名 :=> 文字
}

interface Blue {
>Blue : Blue

	[n:number]: any; // ok
>n : number
>类型别名 :=> 数字

	[s:string]: any; // ok
>s : string
>类型别名 :=> 文字
}

interface Yellow {
>Yellow : Yellow

	[n:number]: Red; // ok
>n : number
>类型别名 :=> 数字
>Red : Red

	[s:string]: Red; // ok
>s : string
>类型别名 :=> 文字
>Red : Red
}

interface Orange {
>Orange : Orange

	[n:number]: number; // ok
>n : number
>类型别名 :=> 数字

	[s:string]: string; // error
>s : string
>类型别名 :=> 文字
}

interface Green {
>Green : Green

	[n:number]: Orange; // error
>n : number
>类型别名 :=> 数字
>Orange : Orange

	[s:string]: Yellow; // ok
>s : string
>类型别名 :=> 文字
>Yellow : Yellow
}

interface Cyan {
>Cyan : Cyan

	[n:number]: number; // error
>n : number
>类型别名 :=> 数字

	[s:string]: string; // ok
>s : string
>类型别名 :=> 文字
}

interface Purple {
>Purple : Purple

	[n:number, s:string]; // error
>n : number
>类型别名 :=> 数字
>s : string
>类型别名 :=> 文字
}

interface Magenta {
>Magenta : Magenta

	[p:Purple]; // error
>p : Purple
>Purple : Purple
}

var yellow: Yellow;
>yellow : Yellow
>Yellow : Yellow

var blue: Blue;
>blue : Blue
>Blue : Blue

var s = "some string";
>s : string
>类型别名 :=> 文字
>"some string" : "some string"

yellow[5]; // ok
>yellow[5] : Red
>yellow : Yellow
>5 : 5

yellow["hue"]; // ok
>yellow["hue"] : Red
>yellow : Yellow
>"hue" : "hue"

yellow[<any>{}]; // ok
>yellow[<any>{}] : Red
>yellow : Yellow
><any>{} : any
>类型别名 :=> 任意
>{} : {}

s[0]; // error
>s[0] : string
>类型别名 :=> 文字
>s : string
>类型别名 :=> 文字
>0 : 0

s["s"]; // ok
>s["s"] : any
>类型别名 :=> 任意
>s : string
>类型别名 :=> 文字
>"s" : "s"

s[<any>{}]; // ok
>s[<any>{}] : string
>类型别名 :=> 文字
>s : string
>类型别名 :=> 文字
><any>{} : any
>类型别名 :=> 任意
>{} : {}

yellow[blue]; // error
>yellow[blue] : any
>类型别名 :=> 任意
>yellow : Yellow
>blue : Blue

var x:number[];
>x : number[]

x[0];
>x[0] : number
>类型别名 :=> 数字
>x : number[]
>0 : 0

class Benchmark {
>Benchmark : Benchmark

    public results: { [x:string]: any; } = <{ [x:string]: any; }>{};
>results : { [x: string]: any; }
>x : string
>类型别名 :=> 文字
><{ [x:string]: any; }>{} : { [x: string]: any; }
>x : string
>类型别名 :=> 文字
>{} : {}

    public addTimingFor(name: string, timing: number) {
>addTimingFor : (name: string, timing: number) => void
>name : string
>类型别名 :=> 文字
>timing : number
>类型别名 :=> 数字

        this.results[name] = this.results[name];
>this.results[name] = this.results[name] : any
>类型别名 :=> 任意
>this.results[name] : any
>类型别名 :=> 任意
>this.results : { [x: string]: any; }
>this : this
>results : { [x: string]: any; }
>name : string
>类型别名 :=> 文字
>this.results[name] : any
>类型别名 :=> 任意
>this.results : { [x: string]: any; }
>this : this
>results : { [x: string]: any; }
>name : string
>类型别名 :=> 文字
    }
}
