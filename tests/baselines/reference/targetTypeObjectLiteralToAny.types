=== tests/cases/compiler/targetTypeObjectLiteralToAny.ts ===
function suggest(){ 
>suggest : () => void

	var TypeScriptKeywords:string[];  
>TypeScriptKeywords : string[]

	var result:any;	
>result : any
>类型别名 :=> 任意
					
	TypeScriptKeywords.forEach(function(keyword) {						
>TypeScriptKeywords.forEach(function(keyword) {								result.push({text:keyword, type:"keyword"}); // this should not cause a crash - push should be typed to any	}) : void
>类型别名 :=> 无值
>TypeScriptKeywords.forEach : (callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void
>TypeScriptKeywords : string[]
>forEach : (callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void
>function(keyword) {								result.push({text:keyword, type:"keyword"}); // this should not cause a crash - push should be typed to any	} : (keyword: string) => void
>keyword : string
>类型别名 :=> 文字

		result.push({text:keyword, type:"keyword"}); // this should not cause a crash - push should be typed to any
>result.push({text:keyword, type:"keyword"}) : any
>类型别名 :=> 任意
>result.push : any
>类型别名 :=> 任意
>result : any
>类型别名 :=> 任意
>push : any
>类型别名 :=> 任意
>{text:keyword, type:"keyword"} : { text: string; type: string; }
>text : string
>类型别名 :=> 文字
>keyword : string
>类型别名 :=> 文字
>type : string
>类型别名 :=> 文字
>"keyword" : "keyword"

	});			
}


