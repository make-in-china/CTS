=== tests/cases/compiler/targetTypeObjectLiteralToAny.ts ===
function suggest(){ 
>suggest : () => 无值

	var TypeScriptKeywords:string[];  
>TypeScriptKeywords : 文字[]

	var result:any;	
>result : 任意
>类型别名 :=> 任意
					
	TypeScriptKeywords.forEach(function(keyword) {						
>TypeScriptKeywords.forEach(function(keyword) {								result.push({text:keyword, type:"keyword"}); // this should not cause a crash - push should be typed to any	}) : 无值
>类型别名 :=> 无值
>TypeScriptKeywords.forEach : (callbackfn: (value: 文字, index: 数字, array: 文字[]) => 无值, thisArg?: 任意) => 无值
>TypeScriptKeywords : 文字[]
>forEach : (callbackfn: (value: 文字, index: 数字, array: 文字[]) => 无值, thisArg?: 任意) => 无值
>function(keyword) {								result.push({text:keyword, type:"keyword"}); // this should not cause a crash - push should be typed to any	} : (keyword: 文字) => 无值
>keyword : 文字
>类型别名 :=> 文字

		result.push({text:keyword, type:"keyword"}); // this should not cause a crash - push should be typed to any
>result.push({text:keyword, type:"keyword"}) : 任意
>类型别名 :=> 任意
>result.push : 任意
>类型别名 :=> 任意
>result : 任意
>类型别名 :=> 任意
>push : 任意
>类型别名 :=> 任意
>{text:keyword, type:"keyword"} : { text: 文字; type: 文字; }
>text : 文字
>类型别名 :=> 文字
>keyword : 文字
>类型别名 :=> 文字
>type : 文字
>类型别名 :=> 文字
>"keyword" : "keyword"

	});			
}


