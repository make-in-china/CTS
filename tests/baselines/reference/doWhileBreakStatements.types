=== tests/cases/conformance/statements/breakStatements/doWhileBreakStatements.ts ===
do {
    break;
} while(true)
>true : true
>类型别名 :=> 为真

ONE:
>ONE : any
>类型别名 :=> 任意

do {
    break ONE;
>ONE : any
>类型别名 :=> 任意
}
while (true)
>true : true
>类型别名 :=> 为真

TWO:
>TWO : any
>类型别名 :=> 任意

THREE:
>THREE : any
>类型别名 :=> 任意

do {
    break THREE;
>THREE : any
>类型别名 :=> 任意

}while (true)
>true : true
>类型别名 :=> 为真

FOUR:
>FOUR : any
>类型别名 :=> 任意

do {
    FIVE:
>FIVE : any
>类型别名 :=> 任意

    do {
        break FOUR;
>FOUR : any
>类型别名 :=> 任意

    }while (true)
>true : true
>类型别名 :=> 为真

}while (true)
>true : true
>类型别名 :=> 为真

do {
    SIX:
>SIX : any
>类型别名 :=> 任意

    do break SIX; while(true)
>SIX : any
>类型别名 :=> 任意
>true : true
>类型别名 :=> 为真

}while (true)
>true : true
>类型别名 :=> 为真

SEVEN:
>SEVEN : any
>类型别名 :=> 任意

do do do break SEVEN; while (true) while (true)  while (true)
>SEVEN : any
>类型别名 :=> 任意
>true : true
>类型别名 :=> 为真
>true : true
>类型别名 :=> 为真
>true : true
>类型别名 :=> 为真

EIGHT:
>EIGHT : any
>类型别名 :=> 任意

do{
    var fn = function () { }
>fn : () => void
>function () { } : () => void

    break EIGHT;
>EIGHT : any
>类型别名 :=> 任意

}while(true)
>true : true
>类型别名 :=> 为真

