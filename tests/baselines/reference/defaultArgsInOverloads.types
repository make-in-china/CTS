=== tests/cases/compiler/defaultArgsInOverloads.ts ===
function fun(a: string);
>fun : { (a: string): any; (a?: number): any; }
>a : string
>类型别名 :=> 文字

function fun(a = 3);
>fun : { (a: string): any; (a?: number): any; }
>a : number
>类型别名 :=> 数字
>3 : 3

function fun(a = null) { }
>fun : { (a: string): any; (a?: number): any; }
>a : any
>类型别名 :=> 任意
>null : null
>类型别名 :=> 空值

class C {
>C : C

	fun(a: string);
>fun : { (a: string): any; (a?: number): any; }
>a : string
>类型别名 :=> 文字

	fun(a = 3);
>fun : { (a: string): any; (a?: number): any; }
>a : number
>类型别名 :=> 数字
>3 : 3

	fun(a = null) { }
>fun : { (a: string): any; (a?: number): any; }
>a : any
>类型别名 :=> 任意
>null : null
>类型别名 :=> 空值

	static fun(a: string);
>fun : { (a: string): any; (a?: number): any; }
>a : string
>类型别名 :=> 文字

	static fun(a = 3);
>fun : { (a: string): any; (a?: number): any; }
>a : number
>类型别名 :=> 数字
>3 : 3

	static fun(a = null) { }
>fun : { (a: string): any; (a?: number): any; }
>a : any
>类型别名 :=> 任意
>null : null
>类型别名 :=> 空值
}

interface I {
>I : I

    fun(a: string);
>fun : { (a: string): any; (a?: number): any; }
>a : string
>类型别名 :=> 文字

    fun(a = 3);
>fun : { (a: string): any; (a?: number): any; }
>a : number
>类型别名 :=> 数字
>3 : 3
}

var f: (a = 3) => number;
>f : (a?: number) => number
>a : number
>类型别名 :=> 数字
>3 : 3

