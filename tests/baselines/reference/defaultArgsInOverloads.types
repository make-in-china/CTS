=== tests/cases/compiler/defaultArgsInOverloads.ts ===
function fun(a: string);
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 文字
>类型别名 :=> 文字

function fun(a = 3);
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 数字
>类型别名 :=> 数字
>3 : 3

function fun(a = null) { }
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 任意
>类型别名 :=> 任意
>null : 空值
>类型别名 :=> 空值

class C {
>C : C

	fun(a: string);
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 文字
>类型别名 :=> 文字

	fun(a = 3);
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 数字
>类型别名 :=> 数字
>3 : 3

	fun(a = null) { }
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 任意
>类型别名 :=> 任意
>null : 空值
>类型别名 :=> 空值

	static fun(a: string);
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 文字
>类型别名 :=> 文字

	static fun(a = 3);
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 数字
>类型别名 :=> 数字
>3 : 3

	static fun(a = null) { }
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 任意
>类型别名 :=> 任意
>null : 空值
>类型别名 :=> 空值
}

interface I {
>I : I

    fun(a: string);
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 文字
>类型别名 :=> 文字

    fun(a = 3);
>fun : { (a: 文字): 任意; (a?: 数字): 任意; }
>a : 数字
>类型别名 :=> 数字
>3 : 3
}

var f: (a = 3) => number;
>f : (a?: 数字) => 数字
>a : 数字
>类型别名 :=> 数字
>3 : 3

