=== tests/cases/conformance/es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesErrorFromNotUsingIdentifier.ts ===
// errors
var y = {
>y : { "stringLiteral": 任意; 42: 任意; 只读 e: 无值; f: 任意; this: 任意; super: 任意; var: 任意; class: 任意; typeof: 任意; }
>{    "stringLiteral",    42,    get e,    set f,    this,    super,    var,    class,    typeof} : { "stringLiteral": 任意; 42: 任意; 只读 e: 无值; f: 任意; this: 任意; super: 任意; var: 任意; class: 任意; typeof: 任意; }

    "stringLiteral",
> : 任意
>类型别名 :=> 任意

    42,
> : 任意
>类型别名 :=> 任意

    get e,
>e : 无值
>类型别名 :=> 无值

    set f,
>f : 任意
>类型别名 :=> 任意

    this,
>this : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意

    super,
>super : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意

    var,
>var : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意

    class,
>class : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意

    typeof
>typeof : 任意
>类型别名 :=> 任意

};
> : 任意
>类型别名 :=> 任意

var x = {
>x : { a: 数字[]; }
>{    a.b,    a["ss"],    a[1],} : { a: 数字[]; }

    a.b,
>a : 任意
>类型别名 :=> 任意
>.b : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意
>b : 任意
>类型别名 :=> 任意

    a["ss"],
>a : 任意
>类型别名 :=> 任意
>["ss"] : 文字[]
>"ss" : "ss"

    a[1],
>a : 任意
>类型别名 :=> 任意
>[1] : 数字[]
>1 : 1

};

var v = { class };  // error
>v : { class: 任意; }
>{ class } : { class: 任意; }
>class : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意

