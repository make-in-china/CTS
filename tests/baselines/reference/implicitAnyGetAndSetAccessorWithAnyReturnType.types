=== tests/cases/compiler/implicitAnyGetAndSetAccessorWithAnyReturnType.ts ===
// these should be errors
class GetAndSet {
>GetAndSet : GetAndSet

    getAndSet = null;             // error at "getAndSet"
>getAndSet : any
>类型别名 :=> 任意
>null : null
>类型别名 :=> 空值

    public get haveGetAndSet() {  // this should not be an error
>haveGetAndSet : any
>类型别名 :=> 任意

        return this.getAndSet;
>this.getAndSet : any
>类型别名 :=> 任意
>this : this
>getAndSet : any
>类型别名 :=> 任意
    }
    
    // this shouldn't be an error
    public set haveGetAndSet(value) {  // error at "value"
>haveGetAndSet : any
>类型别名 :=> 任意
>value : any
>类型别名 :=> 任意

        this.getAndSet = value;
>this.getAndSet = value : any
>类型别名 :=> 任意
>this.getAndSet : any
>类型别名 :=> 任意
>this : this
>getAndSet : any
>类型别名 :=> 任意
>value : any
>类型别名 :=> 任意
    }
}

class SetterOnly {
>SetterOnly : SetterOnly

    public set haveOnlySet(newXValue) {  // error at "haveOnlySet, newXValue"
>haveOnlySet : any
>类型别名 :=> 任意
>newXValue : any
>类型别名 :=> 任意
    }
}

class GetterOnly {
>GetterOnly : GetterOnly

    public get haveOnlyGet() {  // error at "haveOnlyGet"
>haveOnlyGet : any
>类型别名 :=> 任意

        return null;
>null : null
>类型别名 :=> 空值
    }
}
