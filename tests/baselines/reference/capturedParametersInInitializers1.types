=== tests/cases/compiler/capturedParametersInInitializers1.ts ===
// ok - usage is deferred
function foo1(y = class {c = x}, x = 1) {
>foo1 : (y?: 类为 (Anonymous class), x?: 数字) => 无值
>y : 类为 (Anonymous class)
>class {c = x} : 类为 (Anonymous class)
>c : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>1 : 1

    new y().c;
>new y().c : 数字
>类型别名 :=> 数字
>new y() : (Anonymous class)
>y : 类为 (Anonymous class)
>c : 数字
>类型别名 :=> 数字
}

// ok - used in file
function foo2(y = function(x: typeof z) {}, z = 1) {
>foo2 : (y?: (x: 数字) => 无值, z?: 数字) => 无值
>y : (x: 数字) => 无值
>function(x: typeof z) {} : (x: 数字) => 无值
>x : 数字
>类型别名 :=> 数字
>z : 数字
>类型别名 :=> 数字
>z : 数字
>类型别名 :=> 数字
>1 : 1
    
}

// ok -used in type
let a;
>a : 任意
>类型别名 :=> 任意

function foo3(y = { x: <typeof z>a }, z = 1) {
>foo3 : (y?: { x: 数字; }, z?: 数字) => 无值
>y : { x: 数字; }
>{ x: <typeof z>a } : { x: 数字; }
>x : 数字
>类型别名 :=> 数字
><typeof z>a : 数字
>类型别名 :=> 数字
>z : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>z : 数字
>类型别名 :=> 数字
>1 : 1
    
}
