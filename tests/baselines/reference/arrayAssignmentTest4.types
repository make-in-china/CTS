=== tests/cases/compiler/arrayAssignmentTest4.ts ===
class C3 {
>C3 : C3

    CM3M1() { return 3;}
>CM3M1 : () => 数字
>3 : 3
}


/*

This behaves unexpectedly with teh following types:

Type 1 of any[]:

* Type 2 of the following throws an error but shouldn't: () => void[], SomeClass[], and {one: 1}[].

* Type 2 of the following doesn't throw an error but should: {one: 1}, new() => SomeClass, SomeClass.

*/
var c3 : C3 = new C3();
>c3 : C3
>C3 : C3
>new C3() : C3
>C3 : 类为 C3

var o1 = {one : 1};
>o1 : { one: 数字; }
>{one : 1} : { one: 数字; }
>one : 数字
>类型别名 :=> 数字
>1 : 1

var arr_any: any[] = [];
>arr_any : 任意[]
>[] : 未定[]

arr_any = function () { return null;} // should be an error - is
>arr_any = function () { return null;} : () => 任意
>arr_any : 任意[]
>function () { return null;} : () => 任意
>null : 空值
>类型别名 :=> 空值

arr_any = c3; // should be an error - is
>arr_any = c3 : C3
>arr_any : 任意[]
>c3 : C3

