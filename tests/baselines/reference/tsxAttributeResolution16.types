=== tests/cases/conformance/jsx/file.tsx ===
import React = require('react');
>React : 类为 React

interface Address {
>Address : Address

  street: string;
>street : 文字
>类型别名 :=> 文字

  country: string;
>country : 文字
>类型别名 :=> 文字
}

interface CanadianAddress extends Address {
>CanadianAddress : CanadianAddress
>Address : Address

    postalCode: string;
>postalCode : 文字
>类型别名 :=> 文字
}

interface AmericanAddress extends Address {
>AmericanAddress : AmericanAddress
>Address : Address

    zipCode: string;
>zipCode : 文字
>类型别名 :=> 文字
}

type Properties = CanadianAddress | AmericanAddress;
>Properties : CanadianAddress | AmericanAddress
>CanadianAddress : CanadianAddress
>AmericanAddress : AmericanAddress

export class AddressComp extends React.Component<Properties, void> {
>AddressComp : AddressComp
>React.Component : React.Component<CanadianAddress | AmericanAddress, 无值>
>React : 类为 React
>Component : 类为 React.Component
>Properties : CanadianAddress | AmericanAddress

  public render() {
>render : () => 任意

    return null;
>null : 空值
>类型别名 :=> 空值
  }
}

let a = <AddressComp postalCode='T1B 0L3' street="vancouver" country="CA" />
>a : JSX.Element
><AddressComp postalCode='T1B 0L3' street="vancouver" country="CA" /> : JSX.Element
>AddressComp : 类为 AddressComp
>postalCode : 文字
>类型别名 :=> 文字
>street : 文字
>类型别名 :=> 文字
>country : 文字
>类型别名 :=> 文字

