=== tests/cases/conformance/dynamicImport/test.ts ===
export async function fn() {
>fn : () => Promise<无值>

    const req = await import('./test') // ONE
>req : 类为 "tests/cases/conformance/dynamicImport/test"
>await import('./test') : 类为 "tests/cases/conformance/dynamicImport/test"
>import('./test') : Promise<类为 "tests/cases/conformance/dynamicImport/test">
>'./test' : "./test"
}

export class cl1 {
>cl1 : cl1

    public async m() {
>m : () => Promise<无值>

        const req = await import('./test') // TWO
>req : 类为 "tests/cases/conformance/dynamicImport/test"
>await import('./test') : 类为 "tests/cases/conformance/dynamicImport/test"
>import('./test') : Promise<类为 "tests/cases/conformance/dynamicImport/test">
>'./test' : "./test"
    }
}

export const obj = {
>obj : { m: () => Promise<无值>; }
>{    m: async () => {        const req = await import('./test') // THREE    }} : { m: () => Promise<无值>; }

    m: async () => {
>m : () => Promise<无值>
>async () => {        const req = await import('./test') // THREE    } : () => Promise<无值>

        const req = await import('./test') // THREE
>req : 类为 "tests/cases/conformance/dynamicImport/test"
>await import('./test') : 类为 "tests/cases/conformance/dynamicImport/test"
>import('./test') : Promise<类为 "tests/cases/conformance/dynamicImport/test">
>'./test' : "./test"
    }
}

export class cl2 {
>cl2 : cl2

    public p = {
>p : { m: () => Promise<无值>; }
>{        m: async () => {            const req = await import('./test') // FOUR        }    } : { m: () => Promise<无值>; }

        m: async () => {
>m : () => Promise<无值>
>async () => {            const req = await import('./test') // FOUR        } : () => Promise<无值>

            const req = await import('./test') // FOUR
>req : 类为 "tests/cases/conformance/dynamicImport/test"
>await import('./test') : 类为 "tests/cases/conformance/dynamicImport/test"
>import('./test') : Promise<类为 "tests/cases/conformance/dynamicImport/test">
>'./test' : "./test"
        }
    }
}

export const l = async () => {
>l : () => Promise<无值>
>async () => {    const req = await import('./test') // FIVE} : () => Promise<无值>

    const req = await import('./test') // FIVE
>req : 类为 "tests/cases/conformance/dynamicImport/test"
>await import('./test') : 类为 "tests/cases/conformance/dynamicImport/test"
>import('./test') : Promise<类为 "tests/cases/conformance/dynamicImport/test">
>'./test' : "./test"
}

