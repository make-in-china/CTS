=== tests/cases/conformance/expressions/unaryOperators/negateOperator/negateOperatorInvalidOperations.ts ===
// Unary operator -

// operand before -
var NUMBER1 = var NUMBER-;  //expect error
>NUMBER1 : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意
>NUMBER : 数字
>类型别名 :=> 数字
>- : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

// invalid expressions
var NUMBER2 = -(null - undefined);
>NUMBER2 : 数字
>类型别名 :=> 数字
>-(null - undefined) : 数字
>类型别名 :=> 数字
>(null - undefined) : 数字
>类型别名 :=> 数字
>null - undefined : 数字
>类型别名 :=> 数字
>null : 空值
>类型别名 :=> 空值
>undefined : 未定
>类型别名 :=> 未定

var NUMBER3 = -(null - null);
>NUMBER3 : 数字
>类型别名 :=> 数字
>-(null - null) : 数字
>类型别名 :=> 数字
>(null - null) : 数字
>类型别名 :=> 数字
>null - null : 数字
>类型别名 :=> 数字
>null : 空值
>类型别名 :=> 空值
>null : 空值
>类型别名 :=> 空值

var NUMBER4 = -(undefined - undefined);
>NUMBER4 : 数字
>类型别名 :=> 数字
>-(undefined - undefined) : 数字
>类型别名 :=> 数字
>(undefined - undefined) : 数字
>类型别名 :=> 数字
>undefined - undefined : 数字
>类型别名 :=> 数字
>undefined : 未定
>类型别名 :=> 未定
>undefined : 未定
>类型别名 :=> 未定

// miss operand
var NUMBER =-;
>NUMBER : 数字
>类型别名 :=> 数字
>- : 数字
>类型别名 :=> 数字
> : 任意
>类型别名 :=> 任意

