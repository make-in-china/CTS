=== tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeObjectOnOptionalProperty.ts ===
interface I {
>I : I

    a: string;
>a : 文字
>类型别名 :=> 文字

    b?: number;
>b : 数字
>类型别名 :=> 数字
}

interface J {
>J : J

    a: string;
>a : 文字
>类型别名 :=> 文字
}

var a: I;
>a : I
>I : I

var b: J;
>b : J
>J : J

// operator <
var ra1 = a < b;
>ra1 : 真假
>类型别名 :=> 真假
>a < b : 真假
>类型别名 :=> 真假
>a : I
>b : J

var ra2 = b < a;
>ra2 : 真假
>类型别名 :=> 真假
>b < a : 真假
>类型别名 :=> 真假
>b : J
>a : I

// operator >
var rb1 = a > b;
>rb1 : 真假
>类型别名 :=> 真假
>a > b : 真假
>类型别名 :=> 真假
>a : I
>b : J

var rb2 = b > a;
>rb2 : 真假
>类型别名 :=> 真假
>b > a : 真假
>类型别名 :=> 真假
>b : J
>a : I

// operator <=
var rc1 = a <= b;
>rc1 : 真假
>类型别名 :=> 真假
>a <= b : 真假
>类型别名 :=> 真假
>a : I
>b : J

var rc2 = b <= a;
>rc2 : 真假
>类型别名 :=> 真假
>b <= a : 真假
>类型别名 :=> 真假
>b : J
>a : I

// operator >=
var rd1 = a >= b;
>rd1 : 真假
>类型别名 :=> 真假
>a >= b : 真假
>类型别名 :=> 真假
>a : I
>b : J

var rd2 = b >= a;
>rd2 : 真假
>类型别名 :=> 真假
>b >= a : 真假
>类型别名 :=> 真假
>b : J
>a : I

// operator ==
var re1 = a == b;
>re1 : 真假
>类型别名 :=> 真假
>a == b : 真假
>类型别名 :=> 真假
>a : I
>b : J

var re2 = b == a;
>re2 : 真假
>类型别名 :=> 真假
>b == a : 真假
>类型别名 :=> 真假
>b : J
>a : I

// operator !=
var rf1 = a != b;
>rf1 : 真假
>类型别名 :=> 真假
>a != b : 真假
>类型别名 :=> 真假
>a : I
>b : J

var rf2 = b != a;
>rf2 : 真假
>类型别名 :=> 真假
>b != a : 真假
>类型别名 :=> 真假
>b : J
>a : I

// operator ===
var rg1 = a === b;
>rg1 : 真假
>类型别名 :=> 真假
>a === b : 真假
>类型别名 :=> 真假
>a : I
>b : J

var rg2 = b === a;
>rg2 : 真假
>类型别名 :=> 真假
>b === a : 真假
>类型别名 :=> 真假
>b : J
>a : I

// operator !==
var rh1 = a !== b;
>rh1 : 真假
>类型别名 :=> 真假
>a !== b : 真假
>类型别名 :=> 真假
>a : I
>b : J

var rh2 = b !== a;
>rh2 : 真假
>类型别名 :=> 真假
>b !== a : 真假
>类型别名 :=> 真假
>b : J
>a : I

