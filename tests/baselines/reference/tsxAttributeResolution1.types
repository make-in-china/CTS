=== tests/cases/conformance/jsx/file.tsx ===
declare module JSX {
>JSX : any
>类型别名 :=> 任意

	interface Element { }
>Element : Element

	interface IntrinsicElements {
>IntrinsicElements : IntrinsicElements

		test1: Attribs1;
>test1 : Attribs1
>Attribs1 : Attribs1

		test2: { reqd: string };
>test2 : { reqd: string; }
>reqd : string
>类型别名 :=> 文字

		var: { var: string };
>var : { var: string; }
>var : string
>类型别名 :=> 文字
	}
}
interface Attribs1 {
>Attribs1 : Attribs1

	x?: number;
>x : number
>类型别名 :=> 数字

	s?: string;
>s : string
>类型别名 :=> 文字
}

// OK
<test1 x={0} />; // OK
><test1 x={0} /> : JSX.Element
>test1 : any
>类型别名 :=> 任意
>x : number
>类型别名 :=> 数字
>0 : 0

<test1 />; // OK
><test1 /> : JSX.Element
>test1 : any
>类型别名 :=> 任意

<test1 data-x={true} />; // OK
><test1 data-x={true} /> : JSX.Element
>test1 : any
>类型别名 :=> 任意
>data-x : boolean
>类型别名 :=> 真假
>true : true
>类型别名 :=> 为真

<test2 reqd='true' />; // OK
><test2 reqd='true' /> : JSX.Element
>test2 : any
>类型别名 :=> 任意
>reqd : string
>类型别名 :=> 文字

<test2 reqd={'true'} />; // OK
><test2 reqd={'true'} /> : JSX.Element
>test2 : any
>类型别名 :=> 任意
>reqd : string
>类型别名 :=> 文字
>'true' : "true"

// Errors
<test1 x={'0'} />; // Error, '0' is not number
><test1 x={'0'} /> : JSX.Element
>test1 : any
>类型别名 :=> 任意
>x : string
>类型别名 :=> 文字
>'0' : "0"

<test1 y={0} />; // Error, no property "y"
><test1 y={0} /> : JSX.Element
>test1 : any
>类型别名 :=> 任意
>y : number
>类型别名 :=> 数字
>0 : 0

<test1 y="foo" />; // Error, no property "y"
><test1 y="foo" /> : JSX.Element
>test1 : any
>类型别名 :=> 任意
>y : string
>类型别名 :=> 文字

<test1 x="32" />; // Error, "32" is not number
><test1 x="32" /> : JSX.Element
>test1 : any
>类型别名 :=> 任意
>x : string
>类型别名 :=> 文字

<test1 var="10" />; // Error, no 'var' property
><test1 var="10" /> : JSX.Element
>test1 : any
>类型别名 :=> 任意
>var : string
>类型别名 :=> 文字

<test2 />; // Error, missing reqd
><test2 /> : JSX.Element
>test2 : any
>类型别名 :=> 任意

<test2 reqd={10} />; // Error, reqd is not string
><test2 reqd={10} /> : JSX.Element
>test2 : any
>类型别名 :=> 任意
>reqd : number
>类型别名 :=> 数字
>10 : 10

// Should be OK
<var var='var' />;
><var var='var' /> : JSX.Element
>var : any
>类型别名 :=> 任意
>var : string
>类型别名 :=> 文字

