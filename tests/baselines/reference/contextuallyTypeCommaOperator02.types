=== tests/cases/conformance/types/contextualTypes/commaOperator/contextuallyTypeCommaOperator02.ts ===
let x: (a: string) => string;
>x : (a: 文字) => 文字
>a : 文字
>类型别名 :=> 文字

x = (100, a => {
>x = (100, a => {    const b: number = a;    return b;}) : (a: 文字) => 数字
>x : (a: 文字) => 文字
>(100, a => {    const b: number = a;    return b;}) : (a: 文字) => 数字
>100, a => {    const b: number = a;    return b;} : (a: 文字) => 数字
>100 : 100
>a => {    const b: number = a;    return b;} : (a: 文字) => 数字
>a : 文字
>类型别名 :=> 文字

    const b: number = a;
>b : 数字
>类型别名 :=> 数字
>a : 文字
>类型别名 :=> 文字

    return b;
>b : 数字
>类型别名 :=> 数字

});
