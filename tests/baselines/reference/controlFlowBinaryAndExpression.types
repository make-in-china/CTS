=== tests/cases/conformance/controlFlow/controlFlowBinaryAndExpression.ts ===
let x: string | number | boolean;
>x : 文字 | 数字 | 真假

let cond: boolean;
>cond : 真假
>类型别名 :=> 真假

(x = "") && (x = 0);
>(x = "") && (x = 0) : ""
>(x = "") : ""
>x = "" : ""
>x : 文字 | 数字 | 真假
>"" : ""
>(x = 0) : 0
>x = 0 : 0
>x : 文字 | 数字 | 真假
>0 : 0

x; // string | number
>x : 文字 | 数字

x = "";
>x = "" : ""
>x : 文字 | 数字 | 真假
>"" : ""

cond && (x = 0);
>cond && (x = 0) : 0
>cond : 真假
>类型别名 :=> 真假
>(x = 0) : 0
>x = 0 : 0
>x : 文字 | 数字 | 真假
>0 : 0

x; // string | number
>x : 文字 | 数字

