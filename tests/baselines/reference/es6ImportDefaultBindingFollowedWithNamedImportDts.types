=== tests/cases/compiler/server.ts ===
export class a { }
>a : a

export class x { }
>x : x

export class m { }
>m : m

export class a11 { }
>a11 : a11

export class a12 { }
>a12 : a12

export class x11 { }
>x11 : x11

=== tests/cases/compiler/client.ts ===
import defaultBinding1, { } from "./server";
>defaultBinding1 : 任意
>类型别名 :=> 任意

import defaultBinding2, { a } from "./server";
>defaultBinding2 : 任意
>类型别名 :=> 任意
>a : 类为 a

export var x1 = new a();
>x1 : a
>new a() : a
>a : 类为 a

import defaultBinding3, { a11 as b } from "./server";
>defaultBinding3 : 任意
>类型别名 :=> 任意
>a11 : 类为 b
>b : 类为 b

export var x2 = new b();
>x2 : b
>new b() : b
>b : 类为 b

import defaultBinding4, { x, a12 as y } from "./server";
>defaultBinding4 : 任意
>类型别名 :=> 任意
>x : 类为 x
>a12 : 类为 y
>y : 类为 y

export var x4 = new x();
>x4 : x
>new x() : x
>x : 类为 x

export var x5 = new y();
>x5 : y
>new y() : y
>y : 类为 y

import defaultBinding5, { x11 as z,  } from "./server";
>defaultBinding5 : 任意
>类型别名 :=> 任意
>x11 : 类为 z
>z : 类为 z

export var x3 = new z();
>x3 : z
>new z() : z
>z : 类为 z

import defaultBinding6, { m,  } from "./server";
>defaultBinding6 : 任意
>类型别名 :=> 任意
>m : 类为 m

export var x6 = new m();
>x6 : m
>new m() : m
>m : 类为 m

