=== tests/cases/compiler/primaryExpressionMods.ts ===
module M
>M : typeof M
{
    export interface P { x: number; y: number; }
>P : P
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

    export var a = 1;
>a : number
>类型别名 :=> 数字
>1 : 1
}
var p: M.P;             // Used as ModuleName
>p : M.P
>M : any
>类型别名 :=> 任意
>P : M.P

var m: M = M;           // Used as TypeName and PrimaryExpression (error on TypeName)
>m : any
>类型别名 :=> 任意
>M : No type information available!
>M : typeof M

var m2: typeof M = M;   // Used as PrimaryExpression in TypeQuery
>m2 : typeof M
>M : typeof M
>M : typeof M

var x1 = M.a;           // Used as PrimaryExpression
>x1 : number
>类型别名 :=> 数字
>M.a : number
>类型别名 :=> 数字
>M : typeof M
>a : number
>类型别名 :=> 数字

var x2 = m.a;           // Same as M.a
>x2 : any
>类型别名 :=> 任意
>m.a : any
>类型别名 :=> 任意
>m : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意

var q: m.P;             // Error
>q : any
>类型别名 :=> 任意
>m : any
>类型别名 :=> 任意
>P : No type information available!

