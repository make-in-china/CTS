=== tests/cases/compiler/overloadResolutionOverNonCTObjectLit.ts ===
module Bugs {
>Bugs : 类为 Bugs

                export interface IToken {
>IToken : IToken

                                startIndex:number;
>startIndex : 数字
>类型别名 :=> 数字

                                type:string;
>type : 文字
>类型别名 :=> 文字

                                bracket:number;
>bracket : 数字
>类型别名 :=> 数字
                }
                
                export interface IState {
>IState : IState
                }

                export interface IStateToken extends IToken {
>IStateToken : IStateToken
>IToken : IToken

                                state: IState;
>state : IState
>IState : IState

                                length: number;
>length : 数字
>类型别名 :=> 数字
                }
                
                function bug3() {
>bug3 : () => 无值

                                var tokens:IToken[]= [];
>tokens : IToken[]
>IToken : IToken
>[] : 未定[]

                                tokens.push({ startIndex: 1, type: '', bracket: 3 });
>tokens.push({ startIndex: 1, type: '', bracket: 3 }) : 数字
>类型别名 :=> 数字
>tokens.push : (...items: IToken[]) => 数字
>tokens : IToken[]
>push : (...items: IToken[]) => 数字
>{ startIndex: 1, type: '', bracket: 3 } : { startIndex: 数字; type: 文字; bracket: 数字; }
>startIndex : 数字
>类型别名 :=> 数字
>1 : 1
>type : 文字
>类型别名 :=> 文字
>'' : ""
>bracket : 数字
>类型别名 :=> 数字
>3 : 3

                                tokens.push(<IToken>({ startIndex: 1, type: '', bracket: 3, state: null, length: 10 }));
>tokens.push(<IToken>({ startIndex: 1, type: '', bracket: 3, state: null, length: 10 })) : 数字
>类型别名 :=> 数字
>tokens.push : (...items: IToken[]) => 数字
>tokens : IToken[]
>push : (...items: IToken[]) => 数字
><IToken>({ startIndex: 1, type: '', bracket: 3, state: null, length: 10 }) : IToken
>IToken : IToken
>({ startIndex: 1, type: '', bracket: 3, state: null, length: 10 }) : { startIndex: 数字; type: 文字; bracket: 数字; state: 空值; length: 数字; }
>{ startIndex: 1, type: '', bracket: 3, state: null, length: 10 } : { startIndex: 数字; type: 文字; bracket: 数字; state: 空值; length: 数字; }
>startIndex : 数字
>类型别名 :=> 数字
>1 : 1
>type : 文字
>类型别名 :=> 文字
>'' : ""
>bracket : 数字
>类型别名 :=> 数字
>3 : 3
>state : 空值
>类型别名 :=> 空值
>null : 空值
>类型别名 :=> 空值
>length : 数字
>类型别名 :=> 数字
>10 : 10
                }
}
