=== tests/cases/conformance/classes/members/accessibility/protectedInstanceMemberAccessibility.ts ===
class A {
>A : A

    protected x: string;
>x : string
>类型别名 :=> 文字

    protected f(): string {
>f : () => string

        return "hello";
>"hello" : "hello"
    }
}

class B extends A {
>B : B
>A : A

    protected y: string;
>y : string
>类型别名 :=> 文字

    g() {
>g : () => void

        var t1 = this.x;
>t1 : string
>类型别名 :=> 文字
>this.x : string
>类型别名 :=> 文字
>this : this
>x : string
>类型别名 :=> 文字

        var t2 = this.f();
>t2 : string
>类型别名 :=> 文字
>this.f() : string
>类型别名 :=> 文字
>this.f : () => string
>this : this
>f : () => string

        var t3 = this.y;
>t3 : string
>类型别名 :=> 文字
>this.y : string
>类型别名 :=> 文字
>this : this
>y : string
>类型别名 :=> 文字

        var t4 = this.z;     // error
>t4 : any
>类型别名 :=> 任意
>this.z : any
>类型别名 :=> 任意
>this : this
>z : any
>类型别名 :=> 任意

        var s1 = super.x;    // error
>s1 : string
>类型别名 :=> 文字
>super.x : string
>类型别名 :=> 文字
>super : A
>x : string
>类型别名 :=> 文字

        var s2 = super.f();
>s2 : string
>类型别名 :=> 文字
>super.f() : string
>类型别名 :=> 文字
>super.f : () => string
>super : A
>f : () => string

        var s3 = super.y;    // error
>s3 : any
>类型别名 :=> 任意
>super.y : any
>类型别名 :=> 任意
>super : A
>y : any
>类型别名 :=> 任意

        var s4 = super.z;    // error
>s4 : any
>类型别名 :=> 任意
>super.z : any
>类型别名 :=> 任意
>super : A
>z : any
>类型别名 :=> 任意

        var a: A;
>a : A
>A : A

        var a1 = a.x;    // error
>a1 : string
>类型别名 :=> 文字
>a.x : string
>类型别名 :=> 文字
>a : A
>x : string
>类型别名 :=> 文字

        var a2 = a.f();  // error
>a2 : string
>类型别名 :=> 文字
>a.f() : string
>类型别名 :=> 文字
>a.f : () => string
>a : A
>f : () => string

        var a3 = a.y;    // error
>a3 : any
>类型别名 :=> 任意
>a.y : any
>类型别名 :=> 任意
>a : A
>y : any
>类型别名 :=> 任意

        var a4 = a.z;    // error
>a4 : any
>类型别名 :=> 任意
>a.z : any
>类型别名 :=> 任意
>a : A
>z : any
>类型别名 :=> 任意

        var b: B;
>b : B
>B : B

        var b1 = b.x;
>b1 : string
>类型别名 :=> 文字
>b.x : string
>类型别名 :=> 文字
>b : B
>x : string
>类型别名 :=> 文字

        var b2 = b.f();
>b2 : string
>类型别名 :=> 文字
>b.f() : string
>类型别名 :=> 文字
>b.f : () => string
>b : B
>f : () => string

        var b3 = b.y;
>b3 : string
>类型别名 :=> 文字
>b.y : string
>类型别名 :=> 文字
>b : B
>y : string
>类型别名 :=> 文字

        var b4 = b.z;    // error
>b4 : any
>类型别名 :=> 任意
>b.z : any
>类型别名 :=> 任意
>b : B
>z : any
>类型别名 :=> 任意

        var c: C;
>c : C
>C : C

        var c1 = c.x;    // error
>c1 : string
>类型别名 :=> 文字
>c.x : string
>类型别名 :=> 文字
>c : C
>x : string
>类型别名 :=> 文字

        var c2 = c.f();  // error
>c2 : string
>类型别名 :=> 文字
>c.f() : string
>类型别名 :=> 文字
>c.f : () => string
>c : C
>f : () => string

        var c3 = c.y;    // error
>c3 : any
>类型别名 :=> 任意
>c.y : any
>类型别名 :=> 任意
>c : C
>y : any
>类型别名 :=> 任意

        var c4 = c.z;    // error
>c4 : string
>类型别名 :=> 文字
>c.z : string
>类型别名 :=> 文字
>c : C
>z : string
>类型别名 :=> 文字
    }
}

class C extends A {
>C : C
>A : A

    protected z: string;
>z : string
>类型别名 :=> 文字
}

