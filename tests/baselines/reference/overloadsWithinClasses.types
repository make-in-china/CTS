=== tests/cases/compiler/overloadsWithinClasses.ts ===
class foo {
>foo : foo
 
    static fnOverload( ) {}
>fnOverload : () => void
 
    static fnOverload(foo: string){ } // error
>fnOverload : () => void
>foo : string
>类型别名 :=> 文字
 
}

class bar {
>bar : bar
 
    static fnOverload( );
>fnOverload : () => any
 
    static fnOverload(foo?: string){ } // no error
>fnOverload : () => any
>foo : string
>类型别名 :=> 文字
 
}

class X {
>X : X

   public attr(name:string):string;
>attr : { (name: string): string; (name: string, value: string): X; }
>name : string
>类型别名 :=> 文字

   public attr(name:string, value:string):X;
>attr : { (name: string): string; (name: string, value: string): X; }
>name : string
>类型别名 :=> 文字
>value : string
>类型别名 :=> 文字
>X : X

   public attr(first:any, second?:any):any {
>attr : { (name: string): string; (name: string, value: string): X; }
>first : any
>类型别名 :=> 任意
>second : any
>类型别名 :=> 任意
   }
}

