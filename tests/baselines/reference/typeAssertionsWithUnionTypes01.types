=== tests/cases/conformance/types/typeRelationships/comparable/typeAssertionsWithUnionTypes01.ts ===
interface I1 {
>I1 : I1

    p1: number
>p1 : 数字
>类型别名 :=> 数字
}

interface I2 extends I1 {
>I2 : I2
>I1 : I1

    p2: number;
>p2 : 数字
>类型别名 :=> 数字
}

var x = { p1: 10, p2: 20 };
>x : { p1: 数字; p2: 数字; }
>{ p1: 10, p2: 20 } : { p1: 数字; p2: 数字; }
>p1 : 数字
>类型别名 :=> 数字
>10 : 10
>p2 : 数字
>类型别名 :=> 数字
>20 : 20

var y: number | I2 = x;
>y : 数字 | I2
>I2 : I2
>x : { p1: 数字; p2: 数字; }

var z: I1 = x;
>z : I1
>I1 : I1
>x : { p1: 数字; p2: 数字; }

var a = <number | I2>z;
>a : 数字 | I2
><number | I2>z : 数字 | I2
>I2 : I2
>z : I1

var b = <number>z;
>b : 数字
>类型别名 :=> 数字
><number>z : 数字
>类型别名 :=> 数字
>z : I1

var c = <I2>z;
>c : I2
><I2>z : I2
>I2 : I2
>z : I1

var d = <I1>y;
>d : I1
><I1>y : I1
>I1 : I1
>y : I2

