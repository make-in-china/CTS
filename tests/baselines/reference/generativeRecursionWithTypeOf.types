=== tests/cases/compiler/generativeRecursionWithTypeOf.ts ===
class C<T> {
>C : C<T>
>T : T

    static foo(x: number) { }
>foo : (x: 数字) => 无值
>x : 数字
>类型别名 :=> 数字

    type: T;
>type : T
>T : T
}

module M {
>M : 类为 M

    export function f(x: typeof C) {   
>f : (x: 类为 C) => C<类为 C>
>x : 类为 C
>C : 类为 C

        return new x<typeof x>();     
>new x<typeof x>() : C<类为 C>
>x : 类为 C
>x : 类为 C
    }
}
