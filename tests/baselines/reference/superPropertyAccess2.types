=== tests/cases/compiler/superPropertyAccess2.ts ===
class C {
>C : C

    public static foo() { }
>foo : () => 无值

    public get x() {
>x : 数字
>类型别名 :=> 数字

        return 1;
>1 : 1
    }

    public static bar() { }
>bar : () => 无值
}

class D extends C {
>D : D
>C : C

    public static foo() {
>foo : () => 无值

        super.bar(); // OK
>super.bar() : 无值
>类型别名 :=> 无值
>super.bar : () => 无值
>super : 类为 C
>bar : () => 无值

        super.x;  // error
>super.x : 任意
>类型别名 :=> 任意
>super : 类为 C
>x : 任意
>类型别名 :=> 任意
    }

    constructor() {
        super();
>super() : 无值
>类型别名 :=> 无值
>super : 类为 C

        super.bar(); // error
>super.bar() : 任意
>类型别名 :=> 任意
>super.bar : 任意
>类型别名 :=> 任意
>super : C
>bar : 任意
>类型别名 :=> 任意

        super.x;  // error
>super.x : 数字
>类型别名 :=> 数字
>super : C
>x : 数字
>类型别名 :=> 数字
    }

    public static get y() {
>y : 数字
>类型别名 :=> 数字

        super.bar(); // OK
>super.bar() : 无值
>类型别名 :=> 无值
>super.bar : () => 无值
>super : 类为 C
>bar : () => 无值

        super.x; // error
>super.x : 任意
>类型别名 :=> 任意
>super : 类为 C
>x : 任意
>类型别名 :=> 任意

        return 1;
>1 : 1
    }
}
