=== tests/cases/compiler/metadataOfUnionWithNull.ts ===
function PropDeco(target: Object, propKey: string | symbol) { }
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值
>target : Object
>Object : Object
>propKey : 文字 | 符号

class A {
>A : A
}

class B {
>B : B

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    x: "foo" | null;
>x : "foo"
>null : 空值
>类型别名 :=> 空值

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    y: true | never;
>y : 为真
>类型别名 :=> 为真
>true : 为真
>类型别名 :=> 为真

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    z: "foo" | undefined;
>z : "foo"

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    a: null;
>a : 空值
>类型别名 :=> 空值
>null : 空值
>类型别名 :=> 空值

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    b: never;
>b : 不及
>类型别名 :=> 不及

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    c: undefined;
>c : 未定
>类型别名 :=> 未定

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    d: undefined | null;
>d : 空值
>类型别名 :=> 空值
>null : 空值
>类型别名 :=> 空值

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    e: symbol | null;
>e : 符号
>类型别名 :=> 符号
>null : 空值
>类型别名 :=> 空值

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    f: symbol | A;
>f : 符号 | A
>A : A

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    g: A | null;
>g : A
>A : A
>null : 空值
>类型别名 :=> 空值

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    h: null | B;
>h : B
>null : 空值
>类型别名 :=> 空值
>B : B

    @PropDeco
>PropDeco : (target: Object, propKey: 文字 | 符号) => 无值

    j: null | symbol;
>j : 符号
>类型别名 :=> 符号
>null : 空值
>类型别名 :=> 空值
}
