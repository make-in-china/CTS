=== tests/cases/compiler/metadataOfUnionWithNull.ts ===
function PropDeco(target: Object, propKey: string | symbol) { }
>PropDeco : (target: Object, propKey: string | symbol) => void
>target : Object
>Object : Object
>propKey : string | symbol

class A {
>A : A
}

class B {
>B : B

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    x: "foo" | null;
>x : "foo"
>null : null
>类型别名 :=> 空值

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    y: true | never;
>y : true
>类型别名 :=> 为真
>true : true
>类型别名 :=> 为真

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    z: "foo" | undefined;
>z : "foo"

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    a: null;
>a : null
>类型别名 :=> 空值
>null : null
>类型别名 :=> 空值

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    b: never;
>b : never
>类型别名 :=> 不及

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    c: undefined;
>c : undefined
>类型别名 :=> 未定

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    d: undefined | null;
>d : null
>类型别名 :=> 空值
>null : null
>类型别名 :=> 空值

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    e: symbol | null;
>e : symbol
>类型别名 :=> 符号
>null : null
>类型别名 :=> 空值

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    f: symbol | A;
>f : symbol | A
>A : A

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    g: A | null;
>g : A
>A : A
>null : null
>类型别名 :=> 空值

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    h: null | B;
>h : B
>null : null
>类型别名 :=> 空值
>B : B

    @PropDeco
>PropDeco : (target: Object, propKey: string | symbol) => void

    j: null | symbol;
>j : symbol
>类型别名 :=> 符号
>null : null
>类型别名 :=> 空值
}
