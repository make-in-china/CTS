=== /a.js ===
exports.x = 0;
>exports.x = 0 : 0
>exports.x : number
>类型别名 :=> 数字
>exports : typeof "/a"
>x : number
>类型别名 :=> 数字
>0 : 0

exports.x;
>exports.x : number
>类型别名 :=> 数字
>exports : typeof "/a"
>x : number
>类型别名 :=> 数字

// Works nested
{
    // 'exports' does not provide a contextual type to a function-class
    exports.Cls = function() {
>exports.Cls = function() {        this.x = 0;    } : () => void
>exports.Cls : () => void
>exports : typeof "/a"
>Cls : () => void
>function() {        this.x = 0;    } : () => void

        this.x = 0;
>this.x = 0 : 0
>this.x : any
>类型别名 :=> 任意
>this : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>0 : 0
    }
}

const instance = new exports.Cls();
>instance : { x: number; }
>new exports.Cls() : { x: number; }
>exports.Cls : () => void
>exports : typeof "/a"
>Cls : () => void

