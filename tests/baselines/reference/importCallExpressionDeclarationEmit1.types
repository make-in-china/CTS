=== tests/cases/conformance/dynamicImport/importCallExpressionDeclarationEmit1.ts ===
declare function getSpecifier(): string;
>getSpecifier : () => 文字

declare var whatToLoad: boolean;
>whatToLoad : 真假
>类型别名 :=> 真假

declare const directory: string;
>directory : 文字
>类型别名 :=> 文字

declare const moduleFile: number;
>moduleFile : 数字
>类型别名 :=> 数字

import(getSpecifier());
>import(getSpecifier()) : Promise<任意>
>getSpecifier() : 文字
>类型别名 :=> 文字
>getSpecifier : () => 文字

var p0 = import(`${directory}\${moduleFile}`);
>p0 : Promise<任意>
>import(`${directory}\${moduleFile}`) : Promise<任意>
>`${directory}\${moduleFile}` : 文字
>类型别名 :=> 文字
>directory : 文字
>类型别名 :=> 文字

var p1 = import(getSpecifier());
>p1 : Promise<任意>
>import(getSpecifier()) : Promise<任意>
>getSpecifier() : 文字
>类型别名 :=> 文字
>getSpecifier : () => 文字

const p2 = import(whatToLoad ? getSpecifier() : "defaulPath")
>p2 : Promise<任意>
>import(whatToLoad ? getSpecifier() : "defaulPath") : Promise<任意>
>whatToLoad ? getSpecifier() : "defaulPath" : 文字
>类型别名 :=> 文字
>whatToLoad : 真假
>类型别名 :=> 真假
>getSpecifier() : 文字
>类型别名 :=> 文字
>getSpecifier : () => 文字
>"defaulPath" : "defaulPath"

function returnDynamicLoad(path: string) {
>returnDynamicLoad : (path: 文字) => Promise<任意>
>path : 文字
>类型别名 :=> 文字

    return import(path);
>import(path) : Promise<任意>
>path : 文字
>类型别名 :=> 文字
}
