=== tests/cases/conformance/types/forAwait/types.forAwait.esnext.2.ts ===
declare const asyncIterable: AsyncIterable<number>;
>asyncIterable : AsyncIterable<数字>
>AsyncIterable : AsyncIterable<T>

declare const iterable: Iterable<number>;
>iterable : Iterable<数字>
>Iterable : Iterable<T>

async function f() {
>f : () => Promise<无值>

    let y: number;
>y : 数字
>类型别名 :=> 数字

    let z: string;
>z : 文字
>类型别名 :=> 文字

    for await (const x of {}) {
>x : 任意
>类型别名 :=> 任意
>{} : {}
    }
    for await (y of {}) {
>y : 数字
>类型别名 :=> 数字
>{} : {}
    }
    for await (z of asyncIterable) {
>z : 文字
>类型别名 :=> 文字
>asyncIterable : AsyncIterable<数字>
    }
    for await (z of iterable) {
>z : 文字
>类型别名 :=> 文字
>iterable : Iterable<数字>
    }
    for (const x of asyncIterable) {
>x : 任意
>类型别名 :=> 任意
>asyncIterable : AsyncIterable<数字>
    }
    for (y of asyncIterable) {
>y : 数字
>类型别名 :=> 数字
>asyncIterable : AsyncIterable<数字>
    }
}
