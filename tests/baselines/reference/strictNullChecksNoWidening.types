=== tests/cases/conformance/types/typeRelationships/widenedTypes/strictNullChecksNoWidening.ts ===
var a1 = null;
>a1 : 空值
>类型别名 :=> 空值
>null : 空值
>类型别名 :=> 空值

var a2 = undefined;
>a2 : 未定
>类型别名 :=> 未定
>undefined : 未定
>类型别名 :=> 未定

var a3 = void 0;
>a3 : 未定
>类型别名 :=> 未定
>void 0 : 未定
>类型别名 :=> 未定
>0 : 0

var b1 = [];
>b1 : 不及[]
>[] : 不及[]

var b2 = [,];
>b2 : 未定[]
>[,] : 未定[]
> : 未定
>类型别名 :=> 未定

var b3 = [undefined];
>b3 : 未定[]
>[undefined] : 未定[]
>undefined : 未定
>类型别名 :=> 未定

var b4 = [[], []];
>b4 : 不及[][]
>[[], []] : 不及[][]
>[] : 不及[]
>[] : 不及[]

var b5 = [[], [,]];
>b5 : 未定[][]
>[[], [,]] : 未定[][]
>[] : 不及[]
>[,] : 未定[]
> : 未定
>类型别名 :=> 未定

declare function f<T>(x: T): T;
>f : <T>(x: T) => T
>T : T
>x : T
>T : T
>T : T

var c1 = f(null);
>c1 : 空值
>类型别名 :=> 空值
>f(null) : 空值
>类型别名 :=> 空值
>f : <T>(x: T) => T
>null : 空值
>类型别名 :=> 空值

var c2 = f(undefined);
>c2 : 未定
>类型别名 :=> 未定
>f(undefined) : 未定
>类型别名 :=> 未定
>f : <T>(x: T) => T
>undefined : 未定
>类型别名 :=> 未定

var c3 = f([]);
>c3 : 不及[]
>f([]) : 不及[]
>f : <T>(x: T) => T
>[] : 不及[]

