=== tests/cases/compiler/recursiveInference1.ts ===
function fib(x:number) { return x <= 1 ? x : fib(x - 1) + fib(x - 2); }
>fib : (x: 数字) => 任意
>x : 数字
>类型别名 :=> 数字
>x <= 1 ? x : fib(x - 1) + fib(x - 2) : 任意
>类型别名 :=> 任意
>x <= 1 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>1 : 1
>x : 数字
>类型别名 :=> 数字
>fib(x - 1) + fib(x - 2) : 任意
>类型别名 :=> 任意
>fib(x - 1) : 任意
>类型别名 :=> 任意
>fib : (x: 数字) => 任意
>x - 1 : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>1 : 1
>fib(x - 2) : 任意
>类型别名 :=> 任意
>fib : (x: 数字) => 任意
>x - 2 : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>2 : 2

var result = fib(5);
>result : 任意
>类型别名 :=> 任意
>fib(5) : 任意
>类型别名 :=> 任意
>fib : (x: 数字) => 任意
>5 : 5

