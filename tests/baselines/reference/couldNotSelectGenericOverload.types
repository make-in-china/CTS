=== tests/cases/compiler/couldNotSelectGenericOverload.ts ===
function makeArray<T>(items: T[]): T[] { return items; }
>makeArray : <T>(items: T[]) => T[]
>T : T
>items : T[]
>T : T
>T : T
>items : T[]

var b = [1, ""];
>b : (文字 | 数字)[]
>[1, ""] : (文字 | 数字)[]
>1 : 1
>"" : ""

var b1G = makeArray(1, ""); // any, no error
>b1G : 任意
>类型别名 :=> 任意
>makeArray(1, "") : 任意
>类型别名 :=> 任意
>makeArray : <T>(items: T[]) => T[]
>1 : 1
>"" : ""

var b2G = makeArray(b); // any[]
>b2G : (文字 | 数字)[]
>makeArray(b) : (文字 | 数字)[]
>makeArray : <T>(items: T[]) => T[]
>b : (文字 | 数字)[]

function makeArray2(items: any[]): any[] { return items; }
>makeArray2 : (items: 任意[]) => 任意[]
>items : 任意[]
>items : 任意[]

var b3G = makeArray2(1, ""); // error
>b3G : 任意[]
>makeArray2(1, "") : 任意[]
>makeArray2 : (items: 任意[]) => 任意[]
>1 : 1
>"" : ""

