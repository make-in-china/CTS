=== tests/cases/conformance/expressions/typeGuards/typeGuardsInExternalModule.ts ===
// Note that type guards affect types of variables and parameters only and 
// have no effect on members of objects such as properties. 

// local variable in external module
var num: number;
>num : 数字
>类型别名 :=> 数字

var var1: string | number;
>var1 : 文字 | 数字

if (typeof var1 === "string") {
>typeof var1 === "string" : 真假
>类型别名 :=> 真假
>typeof var1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var1 : 文字 | 数字
>"string" : "string"

    num = var1.length; // string
>num = var1.length : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>var1.length : 数字
>类型别名 :=> 数字
>var1 : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
}
else {
    num = var1; // number
>num = var1 : 数字
>类型别名 :=> 数字
>num : 数字
>类型别名 :=> 数字
>var1 : 数字
>类型别名 :=> 数字
}

// exported variable in external module
var strOrNum: string | number;
>strOrNum : 文字 | 数字

export var var2: string | number;
>var2 : 文字 | 数字

if (typeof var2 === "string") {
>typeof var2 === "string" : 真假
>类型别名 :=> 真假
>typeof var2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>var2 : 文字 | 数字
>"string" : "string"

    // export makes the var property and not variable
    strOrNum = var2; // string | number
>strOrNum = var2 : 文字
>类型别名 :=> 文字
>strOrNum : 文字 | 数字
>var2 : 文字
>类型别名 :=> 文字
}
else {
    strOrNum = var2; // number | string
>strOrNum = var2 : 数字
>类型别名 :=> 数字
>strOrNum : 文字 | 数字
>var2 : 数字
>类型别名 :=> 数字
}
