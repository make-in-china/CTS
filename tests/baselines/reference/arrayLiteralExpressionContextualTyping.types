=== tests/cases/conformance/expressions/contextualTyping/arrayLiteralExpressionContextualTyping.ts ===
// In a contextually typed array literal expression containing no spread elements, an element expression at index N is contextually typed by
//      the type of the property with the numeric name N in the contextual type, if any, or otherwise
//      the numeric index type of the contextual type, if any.
var array = [1, 2, 3];
>array : 数字[]
>[1, 2, 3] : 数字[]
>1 : 1
>2 : 2
>3 : 3

var array1 = [true, 2, 3];  // Contextual type by the numeric index type of the contextual type
>array1 : (数字 | 真假)[]
>[true, 2, 3] : (数字 | 真假)[]
>true : 为真
>类型别名 :=> 为真
>2 : 2
>3 : 3

var tup: [number, number, number] = [1, 2, 3, 4];
>tup : [数字, 数字, 数字]
>[1, 2, 3, 4] : [数字, 数字, 数字, 数字]
>1 : 1
>2 : 2
>3 : 3
>4 : 4

var tup1: [number|string, number|string, number|string] = [1, 2, 3, "string"];
>tup1 : [文字 | 数字, 文字 | 数字, 文字 | 数字]
>[1, 2, 3, "string"] : [数字, 数字, 数字, 文字]
>1 : 1
>2 : 2
>3 : 3
>"string" : "string"

var tup2: [number, number, number] = [1, 2, 3, "string"];  // Error
>tup2 : [数字, 数字, 数字]
>[1, 2, 3, "string"] : [数字, 数字, 数字, 文字]
>1 : 1
>2 : 2
>3 : 3
>"string" : "string"

// In a contextually typed array literal expression containing one or more spread elements,
// an element expression at index N is contextually typed by the numeric index type of the contextual type, if any.
var spr = [1, 2, 3, ...array];
>spr : 数字[]
>[1, 2, 3, ...array] : 数字[]
>1 : 1
>2 : 2
>3 : 3
>...array : 数字
>类型别名 :=> 数字
>array : 数字[]

var spr1 = [1, 2, 3, ...tup];
>spr1 : 数字[]
>[1, 2, 3, ...tup] : 数字[]
>1 : 1
>2 : 2
>3 : 3
>...tup : 数字
>类型别名 :=> 数字
>tup : [数字, 数字, 数字]

var spr2:[number, number, number] = [1, 2, 3, ...tup];  // Error
>spr2 : [数字, 数字, 数字]
>[1, 2, 3, ...tup] : 数字[]
>1 : 1
>2 : 2
>3 : 3
>...tup : 数字
>类型别名 :=> 数字
>tup : [数字, 数字, 数字]

