tests/cases/conformance/es6/destructuring/iterableArrayPattern19.ts(16,14): error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
tests/cases/conformance/es6/destructuring/iterableArrayPattern19.ts(17,5): error TS2345: Argument of type 'FooArrayIterator' is not assignable to parameter of type 'Bar[][]'.
  Property 'length' is missing in type 'FooArrayIterator'.


==== tests/cases/conformance/es6/destructuring/iterableArrayPattern19.ts (2 errors) ====
    class Bar { x }
    class Foo extends Bar { y }
    class FooArrayIterator {
        next() {
            return {
                value: [new Foo],
                done: false
            };
        }
    
        [Symbol.iterator]() {
            return this;
        }
    }
    
    function fun([[a], b]: Bar[][]) { }
                 ~~~~~~~~
!!! error TS2488: Type must have a '[Symbol.iterator]()' method that returns an iterator.
    fun(new FooArrayIterator);
        ~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type 'FooArrayIterator' is not assignable to parameter of type 'Bar[][]'.
!!! error TS2345:   Property 'length' is missing in type 'FooArrayIterator'.