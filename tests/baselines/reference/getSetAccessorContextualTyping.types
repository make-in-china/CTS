=== tests/cases/conformance/expressions/contextualTyping/getSetAccessorContextualTyping.ts ===
// In the body of a get accessor with no return type annotation,
// if a matching set accessor exists and that set accessor has a parameter type annotation,
// return expressions are contextually typed by the type given in the set accessor's parameter type annotation.

class C {
>C : C

    set X(x: number) { }
>X : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字

    get X() {
>X : number
>类型别名 :=> 数字

        return "string";  // Error; get contextual type by set accessor parameter type annotation
>"string" : "string"
    }

    set Y(y) { }
>Y : boolean
>类型别名 :=> 真假
>y : boolean
>类型别名 :=> 真假

    get Y() {
>Y : boolean
>类型别名 :=> 真假

        return true;
>true : true
>类型别名 :=> 为真
    }

    set W(w) { }
>W : boolean
>类型别名 :=> 真假
>w : boolean
>类型别名 :=> 真假

    get W(): boolean {
>W : boolean
>类型别名 :=> 真假

        return true;
>true : true
>类型别名 :=> 为真
    }

    set Z(z: number) { }
>Z : number
>类型别名 :=> 数字
>z : number
>类型别名 :=> 数字

    get Z() {
>Z : number
>类型别名 :=> 数字

        return 1;
>1 : 1
    }
}
