=== tests/cases/conformance/es6/Symbols/symbolProperty19.ts ===
var i = {
>i : { [Symbol.iterator]: { p: 任意; }; [Symbol.toStringTag](): { p: 任意; }; }
>{    [Symbol.iterator]: { p: null },    [Symbol.toStringTag]() { return { p: undefined }; }} : { [Symbol.iterator]: { p: 空值; }; [Symbol.toStringTag](): { p: 任意; }; }

    [Symbol.iterator]: { p: null },
>Symbol.iterator : 符号
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>iterator : 符号
>类型别名 :=> 符号
>{ p: null } : { p: 空值; }
>p : 空值
>类型别名 :=> 空值
>null : 空值
>类型别名 :=> 空值

    [Symbol.toStringTag]() { return { p: undefined }; }
>Symbol.toStringTag : 符号
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>toStringTag : 符号
>类型别名 :=> 符号
>{ p: undefined } : { p: 未定; }
>p : 未定
>类型别名 :=> 未定
>undefined : 未定
>类型别名 :=> 未定
}

var it = i[Symbol.iterator];
>it : { p: 任意; }
>i[Symbol.iterator] : { p: 任意; }
>i : { [Symbol.iterator]: { p: 任意; }; [Symbol.toStringTag](): { p: 任意; }; }
>Symbol.iterator : 符号
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>iterator : 符号
>类型别名 :=> 符号

var str = i[Symbol.toStringTag]();
>str : { p: 任意; }
>i[Symbol.toStringTag]() : { p: 任意; }
>i[Symbol.toStringTag] : () => { p: 任意; }
>i : { [Symbol.iterator]: { p: 任意; }; [Symbol.toStringTag](): { p: 任意; }; }
>Symbol.toStringTag : 符号
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>toStringTag : 符号
>类型别名 :=> 符号

