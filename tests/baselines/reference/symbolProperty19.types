=== tests/cases/conformance/es6/Symbols/symbolProperty19.ts ===
var i = {
>i : { [Symbol.iterator]: { p: any; }; [Symbol.toStringTag](): { p: any; }; }
>{    [Symbol.iterator]: { p: null },    [Symbol.toStringTag]() { return { p: undefined }; }} : { [Symbol.iterator]: { p: null; }; [Symbol.toStringTag](): { p: any; }; }

    [Symbol.iterator]: { p: null },
>Symbol.iterator : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>iterator : symbol
>类型别名 :=> 符号
>{ p: null } : { p: null; }
>p : null
>类型别名 :=> 空值
>null : null
>类型别名 :=> 空值

    [Symbol.toStringTag]() { return { p: undefined }; }
>Symbol.toStringTag : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>toStringTag : symbol
>类型别名 :=> 符号
>{ p: undefined } : { p: undefined; }
>p : undefined
>类型别名 :=> 未定
>undefined : undefined
>类型别名 :=> 未定
}

var it = i[Symbol.iterator];
>it : { p: any; }
>i[Symbol.iterator] : { p: any; }
>i : { [Symbol.iterator]: { p: any; }; [Symbol.toStringTag](): { p: any; }; }
>Symbol.iterator : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>iterator : symbol
>类型别名 :=> 符号

var str = i[Symbol.toStringTag]();
>str : { p: any; }
>i[Symbol.toStringTag]() : { p: any; }
>i[Symbol.toStringTag] : () => { p: any; }
>i : { [Symbol.iterator]: { p: any; }; [Symbol.toStringTag](): { p: any; }; }
>Symbol.toStringTag : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>toStringTag : symbol
>类型别名 :=> 符号

