=== tests/cases/compiler/defaultBestCommonTypesHaveDecls.ts ===
var obj1: {};
>obj1 : {}

obj1.length;
>obj1.length : 任意
>类型别名 :=> 任意
>obj1 : {}
>length : 任意
>类型别名 :=> 任意

var obj2: Object;
>obj2 : Object
>Object : Object

obj2.length;
>obj2.length : 任意
>类型别名 :=> 任意
>obj2 : Object
>length : 任意
>类型别名 :=> 任意

function concat<T>(x: T, y: T): T { return null; }
>concat : <T>(x: T, y: T) => T
>T : T
>x : T
>T : T
>y : T
>T : T
>T : T
>null : 空值
>类型别名 :=> 空值

var result = concat(1, ""); // error
>result : 任意
>类型别名 :=> 任意
>concat(1, "") : 任意
>类型别名 :=> 任意
>concat : <T>(x: T, y: T) => T
>1 : 1
>"" : ""

var elementCount = result.length; 
>elementCount : 任意
>类型别名 :=> 任意
>result.length : 任意
>类型别名 :=> 任意
>result : 任意
>类型别名 :=> 任意
>length : 任意
>类型别名 :=> 任意

function concat2<T, U>(x: T, y: U) { return null; }
>concat2 : <T, U>(x: T, y: U) => 任意
>T : T
>U : U
>x : T
>T : T
>y : U
>U : U
>null : 空值
>类型别名 :=> 空值

var result2 = concat2(1, ""); // result2 will be number|string
>result2 : 任意
>类型别名 :=> 任意
>concat2(1, "") : 任意
>类型别名 :=> 任意
>concat2 : <T, U>(x: T, y: U) => 任意
>1 : 1
>"" : ""

var elementCount2 = result.length; 
>elementCount2 : 任意
>类型别名 :=> 任意
>result.length : 任意
>类型别名 :=> 任意
>result : 任意
>类型别名 :=> 任意
>length : 任意
>类型别名 :=> 任意


