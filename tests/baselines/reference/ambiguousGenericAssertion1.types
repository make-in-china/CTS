=== tests/cases/compiler/ambiguousGenericAssertion1.ts ===
function f<T>(x: T): T { return null; }
>f : <T>(x: T) => T
>T : T
>x : T
>T : T
>T : T
>null : null
>类型别名 :=> 空值

var r = <T>(x: T) => x;
>r : <T>(x: T) => T
><T>(x: T) => x : <T>(x: T) => T
>T : T
>x : T
>T : T
>x : T

var r2 = < <T>(x: T) => T>f; // valid
>r2 : <T>(x: T) => T
>< <T>(x: T) => T>f : <T>(x: T) => T
>T : T
>x : T
>T : T
>T : T
>f : <T>(x: T) => T

var r3 = <<T>(x: T) => T>f; // ambiguous, appears to the parser as a << operation
>r3 : boolean
>类型别名 :=> 真假
><<T>(x : boolean
>类型别名 :=> 真假
><<T : number
>类型别名 :=> 数字
> : any
>类型别名 :=> 任意
>T : any
>类型别名 :=> 任意
>(x : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>T : any
>类型别名 :=> 任意
>T>f : boolean
>类型别名 :=> 真假
>T : any
>类型别名 :=> 任意
>f : <T>(x: T) => T

