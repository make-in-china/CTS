=== tests/cases/conformance/jsx/file.tsx ===
import React = require('react')
>React : 类为 React

declare function OverloadComponent<U>(): JSX.Element;
>OverloadComponent : { <U>(): JSX.Element; <U>(attr: { b: U; a: 文字; "ignore-prop": 真假; }): JSX.Element; <T, U>(attr: { b: U; a: T; }): JSX.Element; }
>U : U
>JSX : 任意
>类型别名 :=> 任意
>Element : JSX.Element

declare function OverloadComponent<U>(attr: {b: U, a: string, "ignore-prop": boolean}): JSX.Element;
>OverloadComponent : { <U>(): JSX.Element; <U>(attr: { b: U; a: 文字; "ignore-prop": 真假; }): JSX.Element; <T, U>(attr: { b: U; a: T; }): JSX.Element; }
>U : U
>attr : { b: U; a: 文字; "ignore-prop": 真假; }
>b : U
>U : U
>a : 文字
>类型别名 :=> 文字
>JSX : 任意
>类型别名 :=> 任意
>Element : JSX.Element

declare function OverloadComponent<T, U>(attr: {b: U, a: T}): JSX.Element;
>OverloadComponent : { <U>(): JSX.Element; <U>(attr: { b: U; a: 文字; "ignore-prop": 真假; }): JSX.Element; <T, U>(attr: { b: U; a: T; }): JSX.Element; }
>T : T
>U : U
>attr : { b: U; a: T; }
>b : U
>U : U
>a : T
>T : T
>JSX : 任意
>类型别名 :=> 任意
>Element : JSX.Element

// Error
function Baz<T extends {b: number}, U extends {a: boolean, b:string}>(arg1: T, arg2: U) {
>Baz : <T 扩展 { b: 数字; }, U 扩展 { a: 真假; b: 文字; }>(arg1: T, arg2: U) => 无值
>T : T
>b : 数字
>类型别名 :=> 数字
>U : U
>a : 真假
>类型别名 :=> 真假
>b : 文字
>类型别名 :=> 文字
>arg1 : T
>T : T
>arg2 : U
>U : U

    let a0 = <OverloadComponent a={arg1.b}/>
>a0 : JSX.Element
><OverloadComponent a={arg1.b}/> : JSX.Element
>OverloadComponent : { <U>(): JSX.Element; <U>(attr: { b: U; a: 文字; "ignore-prop": 真假; }): JSX.Element; <T, U>(attr: { b: U; a: T; }): JSX.Element; }
>a : 数字
>类型别名 :=> 数字
>arg1.b : 数字
>类型别名 :=> 数字
>arg1 : T
>b : 数字
>类型别名 :=> 数字

    let a2 = <OverloadComponent {...arg1} ignore-prop />  // missing a
>a2 : JSX.Element
><OverloadComponent {...arg1} ignore-prop /> : JSX.Element
>OverloadComponent : { <U>(): JSX.Element; <U>(attr: { b: U; a: 文字; "ignore-prop": 真假; }): JSX.Element; <T, U>(attr: { b: U; a: T; }): JSX.Element; }
>arg1 : T
>ignore-prop : 为真
>类型别名 :=> 为真
}
