=== tests/cases/conformance/types/thisType/typeRelationships.ts ===
class C {
>C : C

    self = this;
>self : 本体
>this : 本体

    c = new C();
>c : C
>new C() : C
>C : 类为 C

    foo() {
>foo : () => 本体

        return this;
>this : 本体
    }
    f1() {
>f1 : () => 无值

        this.c = this.self;
>this.c = this.self : 本体
>this.c : C
>this : 本体
>c : C
>this.self : 本体
>this : 本体
>self : 本体

        this.self = this.c;  // Error
>this.self = this.c : C
>this.self : 本体
>this : 本体
>self : 本体
>this.c : C
>this : 本体
>c : C
    }
    f2() {
>f2 : () => 无值

        var a: C[];
>a : C[]
>C : C

        var a = [this, this.c];  // C[] since this is subtype of C
>a : C[]
>[this, this.c] : C[]
>this : 本体
>this.c : C
>this : 本体
>c : C

        var b: this[];
>b : 本体[]

        var b = [this, this.self, null, undefined];
>b : 本体[]
>[this, this.self, null, undefined] : 本体[]
>this : 本体
>this.self : 本体
>this : 本体
>self : 本体
>null : 空值
>类型别名 :=> 空值
>undefined : 未定
>类型别名 :=> 未定
    }
    f3(b: boolean) {
>f3 : (b: 真假) => C
>b : 真假
>类型别名 :=> 真假

        return b ? this.c : this.self;  // Should be C
>b ? this.c : this.self : C
>b : 真假
>类型别名 :=> 真假
>this.c : C
>this : 本体
>c : C
>this.self : 本体
>this : 本体
>self : 本体
    }
}

class D extends C {
>D : D
>C : C

    self1 = this;
>self1 : 本体
>this : 本体

    self2 = this.self;
>self2 : 本体
>this.self : 本体
>this : 本体
>self : 本体

    self3 = this.foo();
>self3 : 本体
>this.foo() : 本体
>this.foo : () => 本体
>this : 本体
>foo : () => 本体

    d = new D();
>d : D
>new D() : D
>D : 类为 D

    bar() {
>bar : () => 无值

        this.self = this.self1;
>this.self = this.self1 : 本体
>this.self : 本体
>this : 本体
>self : 本体
>this.self1 : 本体
>this : 本体
>self1 : 本体

        this.self = this.self2;
>this.self = this.self2 : 本体
>this.self : 本体
>this : 本体
>self : 本体
>this.self2 : 本体
>this : 本体
>self2 : 本体

        this.self = this.self3;
>this.self = this.self3 : 本体
>this.self : 本体
>this : 本体
>self : 本体
>this.self3 : 本体
>this : 本体
>self3 : 本体

        this.self1 = this.self;
>this.self1 = this.self : 本体
>this.self1 : 本体
>this : 本体
>self1 : 本体
>this.self : 本体
>this : 本体
>self : 本体

        this.self2 = this.self;
>this.self2 = this.self : 本体
>this.self2 : 本体
>this : 本体
>self2 : 本体
>this.self : 本体
>this : 本体
>self : 本体

        this.self3 = this.self;
>this.self3 = this.self : 本体
>this.self3 : 本体
>this : 本体
>self3 : 本体
>this.self : 本体
>this : 本体
>self : 本体

        this.d = this.self;
>this.d = this.self : 本体
>this.d : D
>this : 本体
>d : D
>this.self : 本体
>this : 本体
>self : 本体

        this.d = this.c;  // Error
>this.d = this.c : C
>this.d : D
>this : 本体
>d : D
>this.c : C
>this : 本体
>c : C

        this.self = this.d;  // Error
>this.self = this.d : D
>this.self : 本体
>this : 本体
>self : 本体
>this.d : D
>this : 本体
>d : D

        this.c = this.d;
>this.c = this.d : D
>this.c : C
>this : 本体
>c : C
>this.d : D
>this : 本体
>d : D
    }
}

