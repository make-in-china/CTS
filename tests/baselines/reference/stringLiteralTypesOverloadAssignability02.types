=== tests/cases/conformance/types/stringLiteral/stringLiteralTypesOverloadAssignability02.ts ===
function f(x: "foo"): number;
>f : (x: "foo") => 数字
>x : "foo"

function f(x: "foo"): number {
>f : (x: "foo") => 数字
>x : "foo"

    return 0;
>0 : 0
}

function g(x: "bar"): number;
>g : (x: "bar") => 数字
>x : "bar"

function g(x: "bar"): number {
>g : (x: "bar") => 数字
>x : "bar"

    return 0;
>0 : 0
}

let a = f;
>a : (x: "foo") => 数字
>f : (x: "foo") => 数字

let b = g;
>b : (x: "bar") => 数字
>g : (x: "bar") => 数字

a = b;
>a = b : (x: "bar") => 数字
>a : (x: "foo") => 数字
>b : (x: "bar") => 数字

b = a;
>b = a : (x: "foo") => 数字
>b : (x: "bar") => 数字
>a : (x: "foo") => 数字

