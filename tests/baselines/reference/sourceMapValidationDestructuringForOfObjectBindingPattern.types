=== tests/cases/compiler/sourceMapValidationDestructuringForOfObjectBindingPattern.ts ===
declare var console: {
>console : { log(msg: 任意): 无值; }

    log(msg: any): void;
>log : (msg: 任意) => 无值
>msg : 任意
>类型别名 :=> 任意
}
interface Robot {
>Robot : Robot

    name: string;
>name : 文字
>类型别名 :=> 文字

    skill: string;
>skill : 文字
>类型别名 :=> 文字
}

interface MultiRobot {
>MultiRobot : MultiRobot

    name: string;
>name : 文字
>类型别名 :=> 文字

    skills: {
>skills : { primary: 文字; secondary: 文字; }

        primary: string;
>primary : 文字
>类型别名 :=> 文字

        secondary: string;
>secondary : 文字
>类型别名 :=> 文字

    };
}

let robots: Robot[] = [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }];
>robots : Robot[]
>Robot : Robot
>[{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }] : { name: 文字; skill: 文字; }[]
>{ name: "mower", skill: "mowing" } : { name: 文字; skill: 文字; }
>name : 文字
>类型别名 :=> 文字
>"mower" : "mower"
>skill : 文字
>类型别名 :=> 文字
>"mowing" : "mowing"
>{ name: "trimmer", skill: "trimming" } : { name: 文字; skill: 文字; }
>name : 文字
>类型别名 :=> 文字
>"trimmer" : "trimmer"
>skill : 文字
>类型别名 :=> 文字
>"trimming" : "trimming"

let multiRobots: MultiRobot[] = [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
>multiRobots : MultiRobot[]
>MultiRobot : MultiRobot
>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }] : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }[]
>{ name: "mower", skills: { primary: "mowing", secondary: "none" } } : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }
>name : 文字
>类型别名 :=> 文字
>"mower" : "mower"
>skills : { primary: 文字; secondary: 文字; }
>{ primary: "mowing", secondary: "none" } : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
>"mowing" : "mowing"
>secondary : 文字
>类型别名 :=> 文字
>"none" : "none"

    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }];
>{ name: "trimmer", skills: { primary: "trimming", secondary: "edging" } } : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }
>name : 文字
>类型别名 :=> 文字
>"trimmer" : "trimmer"
>skills : { primary: 文字; secondary: 文字; }
>{ primary: "trimming", secondary: "edging" } : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
>"trimming" : "trimming"
>secondary : 文字
>类型别名 :=> 文字
>"edging" : "edging"

function getRobots() {
>getRobots : () => Robot[]

    return robots;
>robots : Robot[]
}

function getMultiRobots() {
>getMultiRobots : () => MultiRobot[]

    return multiRobots;
>multiRobots : MultiRobot[]
}

for (let {name: nameA } of robots) {
>name : 任意
>类型别名 :=> 任意
>nameA : 文字
>类型别名 :=> 文字
>robots : Robot[]

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for (let {name: nameA } of getRobots()) {
>name : 任意
>类型别名 :=> 任意
>nameA : 文字
>类型别名 :=> 文字
>getRobots() : Robot[]
>getRobots : () => Robot[]

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for (let {name: nameA } of [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]) {
>name : 任意
>类型别名 :=> 任意
>nameA : 文字
>类型别名 :=> 文字
>[{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }] : { name: 文字; skill: 文字; }[]
>{ name: "mower", skill: "mowing" } : { name: 文字; skill: 文字; }
>name : 文字
>类型别名 :=> 文字
>"mower" : "mower"
>skill : 文字
>类型别名 :=> 文字
>"mowing" : "mowing"
>{ name: "trimmer", skill: "trimming" } : { name: 文字; skill: 文字; }
>name : 文字
>类型别名 :=> 文字
>"trimmer" : "trimmer"
>skill : 文字
>类型别名 :=> 文字
>"trimming" : "trimming"

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for (let { skills: { primary: primaryA, secondary: secondaryA } } of multiRobots) {
>skills : 任意
>类型别名 :=> 任意
>primary : 任意
>类型别名 :=> 任意
>primaryA : 文字
>类型别名 :=> 文字
>secondary : 任意
>类型别名 :=> 任意
>secondaryA : 文字
>类型别名 :=> 文字
>multiRobots : MultiRobot[]

    console.log(primaryA);
>console.log(primaryA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>primaryA : 文字
>类型别名 :=> 文字
}
for (let { skills: { primary: primaryA, secondary: secondaryA } } of getMultiRobots()) {
>skills : 任意
>类型别名 :=> 任意
>primary : 任意
>类型别名 :=> 任意
>primaryA : 文字
>类型别名 :=> 文字
>secondary : 任意
>类型别名 :=> 任意
>secondaryA : 文字
>类型别名 :=> 文字
>getMultiRobots() : MultiRobot[]
>getMultiRobots : () => MultiRobot[]

    console.log(primaryA);
>console.log(primaryA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>primaryA : 文字
>类型别名 :=> 文字
}
for (let { skills: { primary: primaryA, secondary: secondaryA } } of [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
>skills : 任意
>类型别名 :=> 任意
>primary : 任意
>类型别名 :=> 任意
>primaryA : 文字
>类型别名 :=> 文字
>secondary : 任意
>类型别名 :=> 任意
>secondaryA : 文字
>类型别名 :=> 文字
>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }] : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }[]
>{ name: "mower", skills: { primary: "mowing", secondary: "none" } } : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }
>name : 文字
>类型别名 :=> 文字
>"mower" : "mower"
>skills : { primary: 文字; secondary: 文字; }
>{ primary: "mowing", secondary: "none" } : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
>"mowing" : "mowing"
>secondary : 文字
>类型别名 :=> 文字
>"none" : "none"

    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]) {
>{ name: "trimmer", skills: { primary: "trimming", secondary: "edging" } } : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }
>name : 文字
>类型别名 :=> 文字
>"trimmer" : "trimmer"
>skills : { primary: 文字; secondary: 文字; }
>{ primary: "trimming", secondary: "edging" } : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
>"trimming" : "trimming"
>secondary : 文字
>类型别名 :=> 文字
>"edging" : "edging"

    console.log(primaryA);
>console.log(primaryA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>primaryA : 文字
>类型别名 :=> 文字
}

for (let {name: nameA, skill: skillA } of robots) {
>name : 任意
>类型别名 :=> 任意
>nameA : 文字
>类型别名 :=> 文字
>skill : 任意
>类型别名 :=> 任意
>skillA : 文字
>类型别名 :=> 文字
>robots : Robot[]

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for (let {name: nameA, skill: skillA } of getRobots()) {
>name : 任意
>类型别名 :=> 任意
>nameA : 文字
>类型别名 :=> 文字
>skill : 任意
>类型别名 :=> 任意
>skillA : 文字
>类型别名 :=> 文字
>getRobots() : Robot[]
>getRobots : () => Robot[]

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for (let {name: nameA, skill: skillA } of [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]) {
>name : 任意
>类型别名 :=> 任意
>nameA : 文字
>类型别名 :=> 文字
>skill : 任意
>类型别名 :=> 任意
>skillA : 文字
>类型别名 :=> 文字
>[{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }] : { name: 文字; skill: 文字; }[]
>{ name: "mower", skill: "mowing" } : { name: 文字; skill: 文字; }
>name : 文字
>类型别名 :=> 文字
>"mower" : "mower"
>skill : 文字
>类型别名 :=> 文字
>"mowing" : "mowing"
>{ name: "trimmer", skill: "trimming" } : { name: 文字; skill: 文字; }
>name : 文字
>类型别名 :=> 文字
>"trimmer" : "trimmer"
>skill : 文字
>类型别名 :=> 文字
>"trimming" : "trimming"

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for (let {name: nameA, skills: { primary: primaryA, secondary: secondaryA } } of multiRobots) {
>name : 任意
>类型别名 :=> 任意
>nameA : 文字
>类型别名 :=> 文字
>skills : 任意
>类型别名 :=> 任意
>primary : 任意
>类型别名 :=> 任意
>primaryA : 文字
>类型别名 :=> 文字
>secondary : 任意
>类型别名 :=> 任意
>secondaryA : 文字
>类型别名 :=> 文字
>multiRobots : MultiRobot[]

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for (let {name: nameA, skills: { primary: primaryA, secondary: secondaryA } } of getMultiRobots()) {
>name : 任意
>类型别名 :=> 任意
>nameA : 文字
>类型别名 :=> 文字
>skills : 任意
>类型别名 :=> 任意
>primary : 任意
>类型别名 :=> 任意
>primaryA : 文字
>类型别名 :=> 文字
>secondary : 任意
>类型别名 :=> 任意
>secondaryA : 文字
>类型别名 :=> 文字
>getMultiRobots() : MultiRobot[]
>getMultiRobots : () => MultiRobot[]

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
for (let {name: nameA, skills: { primary: primaryA, secondary: secondaryA } } of [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
>name : 任意
>类型别名 :=> 任意
>nameA : 文字
>类型别名 :=> 文字
>skills : 任意
>类型别名 :=> 任意
>primary : 任意
>类型别名 :=> 任意
>primaryA : 文字
>类型别名 :=> 文字
>secondary : 任意
>类型别名 :=> 任意
>secondaryA : 文字
>类型别名 :=> 文字
>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }] : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }[]
>{ name: "mower", skills: { primary: "mowing", secondary: "none" } } : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }
>name : 文字
>类型别名 :=> 文字
>"mower" : "mower"
>skills : { primary: 文字; secondary: 文字; }
>{ primary: "mowing", secondary: "none" } : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
>"mowing" : "mowing"
>secondary : 文字
>类型别名 :=> 文字
>"none" : "none"

    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]) {
>{ name: "trimmer", skills: { primary: "trimming", secondary: "edging" } } : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }
>name : 文字
>类型别名 :=> 文字
>"trimmer" : "trimmer"
>skills : { primary: 文字; secondary: 文字; }
>{ primary: "trimming", secondary: "edging" } : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
>"trimming" : "trimming"
>secondary : 文字
>类型别名 :=> 文字
>"edging" : "edging"

    console.log(nameA);
>console.log(nameA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>nameA : 文字
>类型别名 :=> 文字
}
