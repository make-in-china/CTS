=== tests/cases/compiler/es5-asyncFunctionConditionals.ts ===
declare var x, y, z, a, b, c;
>x : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意
>c : any
>类型别名 :=> 任意

async function conditional0() {
>conditional0 : () => Promise<void>

    a = (await x) ? y : z;
>a = (await x) ? y : z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
>(await x) ? y : z : any
>类型别名 :=> 任意
>(await x) : any
>类型别名 :=> 任意
>await x : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
}

async function conditional1() {
>conditional1 : () => Promise<void>

    a = x ? await y : z;
>a = x ? await y : z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
>x ? await y : z : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>await y : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
}

async function conditional2() {
>conditional2 : () => Promise<void>

    a = x ? y : await z;
>a = x ? y : await z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
>x ? y : await z : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>await z : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
}
