=== tests/cases/conformance/internalModules/DeclarationMerging/ClassAndModuleThatMergeWithStaticFunctionAndNonExportedFunctionThatShareAName.ts ===
class Point {
>Point : Point

    constructor(public x: number, public y: number) { }
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

    static Origin(): Point { return { x: 0, y: 0 }; }
>Origin : () => Point
>Point : Point
>{ x: 0, y: 0 } : { x: 数字; y: 数字; }
>x : 数字
>类型别名 :=> 数字
>0 : 0
>y : 数字
>类型别名 :=> 数字
>0 : 0
}

module Point {
>Point : 类为 Point

    function Origin() { return ""; }// not an error, since not exported
>Origin : () => 文字
>"" : ""
}


module A {
>A : 类为 A

    export class Point {
>Point : Point

        constructor(public x: number, public y: number) { }
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

        static Origin(): Point { return { x: 0, y: 0 }; }
>Origin : () => Point
>Point : Point
>{ x: 0, y: 0 } : { x: 数字; y: 数字; }
>x : 数字
>类型别名 :=> 数字
>0 : 0
>y : 数字
>类型别名 :=> 数字
>0 : 0
    }

    export module Point {
>Point : 类为 Point

        function Origin() { return ""; }// not an error since not exported
>Origin : () => 文字
>"" : ""
    }
}
