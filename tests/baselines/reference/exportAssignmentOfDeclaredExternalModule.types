=== tests/cases/compiler/exportAssignmentOfDeclaredExternalModule_1.ts ===
///<reference path='exportAssignmentOfDeclaredExternalModule_0.ts'/>
import Sammy = require('./exportAssignmentOfDeclaredExternalModule_0');
>Sammy : 任意
>类型别名 :=> 任意

var x = new Sammy(); // error to use as constructor as there is not constructor symbol
>x : 任意
>类型别名 :=> 任意
>new Sammy() : 任意
>类型别名 :=> 任意
>Sammy : 任意
>类型别名 :=> 任意

var y = Sammy(); // error to use interface name as call target
>y : 任意
>类型别名 :=> 任意
>Sammy() : 任意
>类型别名 :=> 任意
>Sammy : 任意
>类型别名 :=> 任意

var z: Sammy; // no error - z is of type interface Sammy from module 'M'
>z : Sammy
>Sammy : Sammy

var a = new z(); // constructor - no error
>a : 任意
>类型别名 :=> 任意
>new z() : 任意
>类型别名 :=> 任意
>z : Sammy

var b = z(); // call signature - no error
>b : 数字
>类型别名 :=> 数字
>z() : 数字
>类型别名 :=> 数字
>z : Sammy

=== tests/cases/compiler/exportAssignmentOfDeclaredExternalModule_0.ts ===
interface Sammy {
>Sammy : Sammy

    new (): any; // a constructor signature
        (): number; // a 0 arg call signature
    }
export = Sammy;
>Sammy : Sammy

