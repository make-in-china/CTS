=== tests/cases/compiler/letAndVarRedeclaration.ts ===
let e0
>e0 : 任意
>类型别名 :=> 任意

var e0;
>e0 : 任意
>类型别名 :=> 任意

function e0() { }
>e0 : () => 无值

function f0() {
>f0 : () => 无值

    let x1;
>x1 : 任意
>类型别名 :=> 任意

    var x1;
>x1 : 任意
>类型别名 :=> 任意

    function x1() { }
>x1 : () => 无值
}

function f1() {
>f1 : () => 无值

    let x;
>x : 任意
>类型别名 :=> 任意
    {
        var x;
>x : 任意
>类型别名 :=> 任意
    }
    {
        function x() { }
>x : () => 无值
    }
}

module M0 {
>M0 : 类为 M0

    let x2;
>x2 : 任意
>类型别名 :=> 任意

    var x2;
>x2 : 任意
>类型别名 :=> 任意

    function x2() { }
>x2 : () => 无值
}

module M1 {
>M1 : 类为 M1

    let x2;
>x2 : 任意
>类型别名 :=> 任意
    {
        var x2;
>x2 : 任意
>类型别名 :=> 任意
    }
    {
        function x2() { }
>x2 : () => 无值
    }
}

let x11;
>x11 : 任意
>类型别名 :=> 任意

for (var x11; ;) {
>x11 : 任意
>类型别名 :=> 任意
}

function f2() {
>f2 : () => 无值

    let x11;
>x11 : 任意
>类型别名 :=> 任意

    for (var x11; ;) {
>x11 : 任意
>类型别名 :=> 任意
    }
}

module M2 {
>M2 : 类为 M2

    let x11;
>x11 : 任意
>类型别名 :=> 任意

    for (var x11; ;) {
>x11 : 任意
>类型别名 :=> 任意
    }
}
