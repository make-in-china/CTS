=== tests/cases/compiler/functionOverloadsOutOfOrder.ts ===
class d {
>d : d

    private foo(n: number): string;
>foo : { (n: number): string; (s: string): string; }
>n : number
>类型别名 :=> 数字

    private foo(ns: any) {
>foo : { (n: number): string; (s: string): string; }
>ns : any
>类型别名 :=> 任意

        return ns.toString();
>ns.toString() : any
>类型别名 :=> 任意
>ns.toString : any
>类型别名 :=> 任意
>ns : any
>类型别名 :=> 任意
>toString : any
>类型别名 :=> 任意
    }
    private foo(s: string): string;
>foo : { (n: number): string; (s: string): string; }
>s : string
>类型别名 :=> 文字
}

class e {
>e : e

    private foo(ns: any) {
>foo : { (ns: any): any; (s: string): string; (n: number): string; }
>ns : any
>类型别名 :=> 任意

        return ns.toString();
>ns.toString() : any
>类型别名 :=> 任意
>ns.toString : any
>类型别名 :=> 任意
>ns : any
>类型别名 :=> 任意
>toString : any
>类型别名 :=> 任意
    }
    private foo(s: string): string;
>foo : { (ns: any): any; (s: string): string; (n: number): string; }
>s : string
>类型别名 :=> 文字

    private foo(n: number): string;
>foo : { (ns: any): any; (s: string): string; (n: number): string; }
>n : number
>类型别名 :=> 数字
}
