=== tests/cases/compiler/functionOverloadsOutOfOrder.ts ===
class d {
>d : d

    private foo(n: number): string;
>foo : { (n: 数字): 文字; (s: 文字): 文字; }
>n : 数字
>类型别名 :=> 数字

    private foo(ns: any) {
>foo : { (n: 数字): 文字; (s: 文字): 文字; }
>ns : 任意
>类型别名 :=> 任意

        return ns.toString();
>ns.toString() : 任意
>类型别名 :=> 任意
>ns.toString : 任意
>类型别名 :=> 任意
>ns : 任意
>类型别名 :=> 任意
>toString : 任意
>类型别名 :=> 任意
    }
    private foo(s: string): string;
>foo : { (n: 数字): 文字; (s: 文字): 文字; }
>s : 文字
>类型别名 :=> 文字
}

class e {
>e : e

    private foo(ns: any) {
>foo : { (ns: 任意): 任意; (s: 文字): 文字; (n: 数字): 文字; }
>ns : 任意
>类型别名 :=> 任意

        return ns.toString();
>ns.toString() : 任意
>类型别名 :=> 任意
>ns.toString : 任意
>类型别名 :=> 任意
>ns : 任意
>类型别名 :=> 任意
>toString : 任意
>类型别名 :=> 任意
    }
    private foo(s: string): string;
>foo : { (ns: 任意): 任意; (s: 文字): 文字; (n: 数字): 文字; }
>s : 文字
>类型别名 :=> 文字

    private foo(n: number): string;
>foo : { (ns: 任意): 任意; (s: 文字): 文字; (n: 数字): 文字; }
>n : 数字
>类型别名 :=> 数字
}
