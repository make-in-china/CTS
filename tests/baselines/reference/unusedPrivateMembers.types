=== tests/cases/compiler/unusedPrivateMembers.ts ===
class Test1 {
>Test1 : Test1

    private initializeInternal() {
>initializeInternal : () => 无值
    }

    public test() {
>test : () => 无值

        var x = new Test1();
>x : Test1
>new Test1() : Test1
>Test1 : 类为 Test1

        x.initializeInternal();
>x.initializeInternal() : 无值
>类型别名 :=> 无值
>x.initializeInternal : () => 无值
>x : Test1
>initializeInternal : () => 无值
    }
}

class Test2 {
>Test2 : Test2

    private p = 0;
>p : 数字
>类型别名 :=> 数字
>0 : 0

    public test() {
>test : () => 无值

        var x = new Test2();
>x : Test2
>new Test2() : Test2
>Test2 : 类为 Test2

        x.p;
>x.p : 数字
>类型别名 :=> 数字
>x : Test2
>p : 数字
>类型别名 :=> 数字
    }
}

class Test3 {
>Test3 : Test3

    private get x () {
>x : 数字
>类型别名 :=> 数字

        return 0;
>0 : 0
    }

    public test() {
>test : () => 无值

        var x = new Test3();
>x : Test3
>new Test3() : Test3
>Test3 : 类为 Test3

        x.x;
>x.x : 数字
>类型别名 :=> 数字
>x : Test3
>x : 数字
>类型别名 :=> 数字
    }
}

class Test4 {
>Test4 : Test4

    private set x(v) {
>x : 任意
>类型别名 :=> 任意
>v : 任意
>类型别名 :=> 任意

        v;
>v : 任意
>类型别名 :=> 任意
    }

    public test() {
>test : () => 无值

        var x = new Test4();
>x : Test4
>new Test4() : Test4
>Test4 : 类为 Test4

        x.x;
>x.x : 任意
>类型别名 :=> 任意
>x : Test4
>x : 任意
>类型别名 :=> 任意
    }
}

class Test5<T> {
>Test5 : Test5<T>
>T : T

    private p: T;
>p : T
>T : T

    public test() {
>test : () => 无值

        var x = new Test5<number>();
>x : Test5<数字>
>new Test5<number>() : Test5<数字>
>Test5 : 类为 Test5

        x.p;
>x.p : 数字
>类型别名 :=> 数字
>x : Test5<数字>
>p : 数字
>类型别名 :=> 数字
    }
}

