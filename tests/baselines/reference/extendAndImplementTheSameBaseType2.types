=== tests/cases/compiler/extendAndImplementTheSameBaseType2.ts ===
class C<T> {
>C : C<T>
>T : T

    foo: number
>foo : 数字
>类型别名 :=> 数字

    bar(): T {
>bar : () => T
>T : T

        return null;
>null : 空值
>类型别名 :=> 空值
    }
}
class D extends C<string> implements C<number> {
>D : D
>C : C<文字>
>C : C<T>

    baz() { }
>baz : () => 无值
}

var d: D = new D();
>d : D
>D : D
>new D() : D
>D : 类为 D

var r: string = d.foo;
>r : 文字
>类型别名 :=> 文字
>d.foo : 数字
>类型别名 :=> 数字
>d : D
>foo : 数字
>类型别名 :=> 数字

var r2: number = d.foo;
>r2 : 数字
>类型别名 :=> 数字
>d.foo : 数字
>类型别名 :=> 数字
>d : D
>foo : 数字
>类型别名 :=> 数字

var r3: string = d.bar();
>r3 : 文字
>类型别名 :=> 文字
>d.bar() : 文字
>类型别名 :=> 文字
>d.bar : () => 文字
>d : D
>bar : () => 文字

var r4: number = d.bar();
>r4 : 数字
>类型别名 :=> 数字
>d.bar() : 文字
>类型别名 :=> 文字
>d.bar : () => 文字
>d : D
>bar : () => 文字

