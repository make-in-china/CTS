=== tests/cases/conformance/dynamicImport/importCallExpressionShouldNotGetParen.ts ===
const localeName = "zh-CN";
>localeName : "zh-CN"
>"zh-CN" : "zh-CN"

import(`./locales/${localeName}.js`).then(bar => {
>import(`./locales/${localeName}.js`).then(bar => {    let x = bar;}) : Promise<无值>
>import(`./locales/${localeName}.js`).then : <TResult1 = 任意, TResult2 = 不及>(onfulfilled?: (value: 任意) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: 任意) => TResult2 | PromiseLike<TResult2>) => Promise<TResult1 | TResult2>
>import(`./locales/${localeName}.js`) : Promise<任意>
>`./locales/${localeName}.js` : 文字
>类型别名 :=> 文字
>localeName : "zh-CN"
>then : <TResult1 = 任意, TResult2 = 不及>(onfulfilled?: (value: 任意) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: 任意) => TResult2 | PromiseLike<TResult2>) => Promise<TResult1 | TResult2>
>bar => {    let x = bar;} : (bar: 任意) => 无值
>bar : 任意
>类型别名 :=> 任意

    let x = bar;
>x : 任意
>类型别名 :=> 任意
>bar : 任意
>类型别名 :=> 任意

});

import("./locales/" + localeName + ".js").then(bar => {
>import("./locales/" + localeName + ".js").then(bar => {    let x = bar;}) : Promise<无值>
>import("./locales/" + localeName + ".js").then : <TResult1 = 任意, TResult2 = 不及>(onfulfilled?: (value: 任意) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: 任意) => TResult2 | PromiseLike<TResult2>) => Promise<TResult1 | TResult2>
>import("./locales/" + localeName + ".js") : Promise<任意>
>"./locales/" + localeName + ".js" : 文字
>类型别名 :=> 文字
>"./locales/" + localeName : 文字
>类型别名 :=> 文字
>"./locales/" : "./locales/"
>localeName : "zh-CN"
>".js" : ".js"
>then : <TResult1 = 任意, TResult2 = 不及>(onfulfilled?: (value: 任意) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: 任意) => TResult2 | PromiseLike<TResult2>) => Promise<TResult1 | TResult2>
>bar => {    let x = bar;} : (bar: 任意) => 无值
>bar : 任意
>类型别名 :=> 任意

    let x = bar;
>x : 任意
>类型别名 :=> 任意
>bar : 任意
>类型别名 :=> 任意

});
