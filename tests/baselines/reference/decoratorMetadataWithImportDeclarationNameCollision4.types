=== tests/cases/compiler/db.ts ===
export class db {
>db : db

    public doSomething() {
>doSomething : () => 无值
    }
}

=== tests/cases/compiler/service.ts ===
import db from './db'; // error no default export
>db : 任意
>类型别名 :=> 任意

function someDecorator(target) {
>someDecorator : (target: 任意) => 任意
>target : 任意
>类型别名 :=> 任意

    return target;
>target : 任意
>类型别名 :=> 任意
}
@someDecorator
>someDecorator : (target: 任意) => 任意

class MyClass {
>MyClass : MyClass

    db: db.db;
>db : 任意
>类型别名 :=> 任意
>db : 任意
>类型别名 :=> 任意
>db : 任意
>类型别名 :=> 任意

    constructor(db: db.db) {
>db : 任意
>类型别名 :=> 任意
>db : 任意
>类型别名 :=> 任意
>db : 任意
>类型别名 :=> 任意

        this.db = db;
>this.db = db : 任意
>类型别名 :=> 任意
>this.db : 任意
>类型别名 :=> 任意
>this : 本体
>db : 任意
>类型别名 :=> 任意
>db : 任意
>类型别名 :=> 任意

        this.db.doSomething();
>this.db.doSomething() : 任意
>类型别名 :=> 任意
>this.db.doSomething : 任意
>类型别名 :=> 任意
>this.db : 任意
>类型别名 :=> 任意
>this : 本体
>db : 任意
>类型别名 :=> 任意
>doSomething : 任意
>类型别名 :=> 任意
    }
}
export {MyClass};
>MyClass : 类为 MyClass

