=== tests/cases/compiler/collisionSuperAndLocalVarInAccessors.ts ===
var _super = 10; // No Error
>_super : 数字
>类型别名 :=> 数字
>10 : 10

class Foo {
>Foo : Foo

    get prop1(): number {
>prop1 : 数字
>类型别名 :=> 数字

        var _super = 10; // No error
>_super : 数字
>类型别名 :=> 数字
>10 : 10

        return 10;
>10 : 10
    }
    set prop1(val: number) {
>prop1 : 数字
>类型别名 :=> 数字
>val : 数字
>类型别名 :=> 数字

        var _super = 10; // No error
>_super : 数字
>类型别名 :=> 数字
>10 : 10
    }
}
class b extends Foo {
>b : b
>Foo : Foo

    get prop2(): number {
>prop2 : 数字
>类型别名 :=> 数字

        var _super = 10; // Should be error
>_super : 数字
>类型别名 :=> 数字
>10 : 10

        return 10;
>10 : 10
    }
    set prop2(val: number) {
>prop2 : 数字
>类型别名 :=> 数字
>val : 数字
>类型别名 :=> 数字

        var _super = 10; // Should be error
>_super : 数字
>类型别名 :=> 数字
>10 : 10
    }
}
class c extends Foo {
>c : c
>Foo : Foo

    get prop2(): number {
>prop2 : 数字
>类型别名 :=> 数字

        var x = () => {
>x : () => 无值
>() => {            var _super = 10; // Should be error        } : () => 无值

            var _super = 10; // Should be error
>_super : 数字
>类型别名 :=> 数字
>10 : 10
        }
        return 10;
>10 : 10
    }
    set prop2(val: number) {
>prop2 : 数字
>类型别名 :=> 数字
>val : 数字
>类型别名 :=> 数字

        var x = () => {
>x : () => 无值
>() => {            var _super = 10; // Should be error        } : () => 无值

            var _super = 10; // Should be error
>_super : 数字
>类型别名 :=> 数字
>10 : 10
        }
    }
}
