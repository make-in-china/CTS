=== tests/cases/compiler/es5-asyncFunctionForStatements.ts ===
declare var x, y, z, a, b, c;
>x : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意
>c : any
>类型别名 :=> 任意

async function forStatement0() {
>forStatement0 : () => Promise<void>

    for (x; y; z) { a; }
>x : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
}

async function forStatement1() {
>forStatement1 : () => Promise<void>

    for (await x; y; z) { a; }
>await x : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
}

async function forStatement2() {
>forStatement2 : () => Promise<void>

    for (x; await y; z) { a; }
>x : any
>类型别名 :=> 任意
>await y : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
}

async function forStatement3() {
>forStatement3 : () => Promise<void>

    for (x; y; await z) { a; }
>x : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>await z : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
}

async function forStatement4() {
>forStatement4 : () => Promise<void>

    for (x; y; z) { await a; }
>x : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>await a : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
}

async function forStatement5() {
>forStatement5 : () => Promise<void>

    for (var b; y; z) { a; }
>b : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
}

async function forStatement6() {
>forStatement6 : () => Promise<void>

    for (var c = x; y; z) { a; }
>c : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
}
