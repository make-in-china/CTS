=== tests/cases/compiler/es5-asyncFunctionSwitchStatements.ts ===
declare var x, y, z, a, b, c;
>x : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意
>c : any
>类型别名 :=> 任意

async function switchStatement0() {
>switchStatement0 : () => Promise<void>

    switch (x) {
>x : any
>类型别名 :=> 任意

        case y: a; break;
>y : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意

        default: b; break;
>b : any
>类型别名 :=> 任意
    }
}

async function switchStatement1() {
>switchStatement1 : () => Promise<void>

    switch (await x) {
>await x : any
>类型别名 :=> 任意
>x : any
>类型别名 :=> 任意

        case y: a; break;
>y : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意

        default: b; break;
>b : any
>类型别名 :=> 任意
    }
}

async function switchStatement2() {
>switchStatement2 : () => Promise<void>

    switch (x) {
>x : any
>类型别名 :=> 任意

        case await y: a; break;
>await y : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意

        default: b; break;
>b : any
>类型别名 :=> 任意
    }
}

async function switchStatement3() {
>switchStatement3 : () => Promise<void>

    switch (x) {
>x : any
>类型别名 :=> 任意

        case y: await a; break;
>y : any
>类型别名 :=> 任意
>await a : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意

        default: b; break;
>b : any
>类型别名 :=> 任意
    }
}

async function switchStatement4() {
>switchStatement4 : () => Promise<void>

    switch (x) {
>x : any
>类型别名 :=> 任意

        case y: a; break;
>y : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意

        default: await b; break;
>await b : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意
    }
}

async function switchStatement5() {
>switchStatement5 : () => Promise<void>

    switch (x) {
>x : any
>类型别名 :=> 任意

        case y: a; break;
>y : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意

        case await z: b; break;
>await z : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意
    }
}

async function switchStatement6() {
>switchStatement6 : () => Promise<void>

    switch (x) {
>x : any
>类型别名 :=> 任意

        default: c; break;
>c : any
>类型别名 :=> 任意

        case await y: a; break;
>await y : any
>类型别名 :=> 任意
>y : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意

        case z: b; break;
>z : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意
    }
}

async function switchStatement7() {
>switchStatement7 : () => Promise<void>

    switch (x) {
>x : any
>类型别名 :=> 任意

        default: c; break;
>c : any
>类型别名 :=> 任意

        case y: a; break;
>y : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意

        case await z: b; break;
>await z : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意
    }
}

async function switchStatement8() {
>switchStatement8 : () => Promise<void>

    switch (x) {
>x : any
>类型别名 :=> 任意

        default: c;
>c : any
>类型别名 :=> 任意

        case y: a; break;
>y : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意

        case await z: b; break;
>await z : any
>类型别名 :=> 任意
>z : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意
    }
}
