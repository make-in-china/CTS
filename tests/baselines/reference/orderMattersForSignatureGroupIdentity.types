=== tests/cases/compiler/orderMattersForSignatureGroupIdentity.ts ===
interface A {
>A : A

    (x: { s: string }): string
>x : { s: string; }
>s : string
>类型别名 :=> 文字

    (x: { n: number }): number
>x : { n: number; }
>n : number
>类型别名 :=> 数字
}

interface B {
>B : B

    (x: { s: string }): string
>x : { s: string; }
>s : string
>类型别名 :=> 文字

    (x: { n: number }): number
>x : { n: number; }
>n : number
>类型别名 :=> 数字
}

interface C {
>C : C

    (x: { n: number }): number
>x : { n: number; }
>n : number
>类型别名 :=> 数字

    (x: { s: string }): string
>x : { s: string; }
>s : string
>类型别名 :=> 文字
}

var v: A;
>v : A
>A : A

var v: B;
>v : A
>B : B

v({ s: "", n: 0 }).toLowerCase();
>v({ s: "", n: 0 }).toLowerCase() : any
>类型别名 :=> 任意
>v({ s: "", n: 0 }).toLowerCase : any
>类型别名 :=> 任意
>v({ s: "", n: 0 }) : any
>类型别名 :=> 任意
>v : A
>{ s: "", n: 0 } : { s: string; n: number; }
>s : string
>类型别名 :=> 文字
>"" : ""
>n : number
>类型别名 :=> 数字
>0 : 0
>toLowerCase : any
>类型别名 :=> 任意

var w: A;
>w : A
>A : A

var w: C;
>w : A
>C : C

w({ s: "", n: 0 }).toLowerCase();
>w({ s: "", n: 0 }).toLowerCase() : any
>类型别名 :=> 任意
>w({ s: "", n: 0 }).toLowerCase : any
>类型别名 :=> 任意
>w({ s: "", n: 0 }) : any
>类型别名 :=> 任意
>w : A
>{ s: "", n: 0 } : { s: string; n: number; }
>s : string
>类型别名 :=> 文字
>"" : ""
>n : number
>类型别名 :=> 数字
>0 : 0
>toLowerCase : any
>类型别名 :=> 任意

