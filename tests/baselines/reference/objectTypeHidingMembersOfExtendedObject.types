=== tests/cases/conformance/types/members/objectTypeHidingMembersOfExtendedObject.ts ===
class A {
>A : A

    foo: string;
>foo : 文字
>类型别名 :=> 文字
}

class B extends A {
>B : B
>A : A

    bar: string;
>bar : 文字
>类型别名 :=> 文字
}

interface Object {
>Object : Object

    data: A;
>data : A
>A : A

    [x: string]: Object;
>x : 文字
>类型别名 :=> 文字
>Object : Object
}

class C {
>C : C

    valueOf() { }
>valueOf : () => 无值

    data: B;
>data : B
>B : B

    [x: string]: any;
>x : 文字
>类型别名 :=> 文字
}

var c: C;
>c : C
>C : C

var r1: void = c.valueOf();
>r1 : 无值
>类型别名 :=> 无值
>c.valueOf() : 无值
>类型别名 :=> 无值
>c.valueOf : () => 无值
>c : C
>valueOf : () => 无值

var r1b: B = c.data;
>r1b : B
>B : B
>c.data : B
>c : C
>data : B

var r1c = r1b['hm']; // should be 'Object'
>r1c : 任意
>类型别名 :=> 任意
>r1b['hm'] : 任意
>类型别名 :=> 任意
>r1b : B
>'hm' : "hm"

var r1d = c['hm']; // should be 'any'
>r1d : 任意
>类型别名 :=> 任意
>c['hm'] : 任意
>类型别名 :=> 任意
>c : C
>'hm' : "hm"

interface I {
>I : I

    valueOf(): void;
>valueOf : () => 无值

    data: B;
>data : B
>B : B

    [x: string]: any;
>x : 文字
>类型别名 :=> 文字
}

var i: I;
>i : I
>I : I

var r2: void = i.valueOf();
>r2 : 无值
>类型别名 :=> 无值
>i.valueOf() : 无值
>类型别名 :=> 无值
>i.valueOf : () => 无值
>i : I
>valueOf : () => 无值

var r2b: B = i.data;
>r2b : B
>B : B
>i.data : B
>i : I
>data : B

var r2c = r2b['hm']; // should be 'Object'
>r2c : 任意
>类型别名 :=> 任意
>r2b['hm'] : 任意
>类型别名 :=> 任意
>r2b : B
>'hm' : "hm"

var r2d = i['hm']; // should be 'any'
>r2d : 任意
>类型别名 :=> 任意
>i['hm'] : 任意
>类型别名 :=> 任意
>i : I
>'hm' : "hm"

var a = {
>a : { valueOf: () => 无值; data: B; }
>{    valueOf: () => { },    data: new B()} : { valueOf: () => 无值; data: B; }

    valueOf: () => { },
>valueOf : () => 无值
>() => { } : () => 无值

    data: new B()
>data : B
>new B() : B
>B : 类为 B
}

var r3: void = a.valueOf();
>r3 : 无值
>类型别名 :=> 无值
>a.valueOf() : 无值
>类型别名 :=> 无值
>a.valueOf : () => 无值
>a : { valueOf: () => 无值; data: B; }
>valueOf : () => 无值

var r3b: B = a.data;
>r3b : B
>B : B
>a.data : B
>a : { valueOf: () => 无值; data: B; }
>data : B

var r3c = r3b['hm']; // should be 'Object'
>r3c : 任意
>类型别名 :=> 任意
>r3b['hm'] : 任意
>类型别名 :=> 任意
>r3b : B
>'hm' : "hm"

var r3d = i['hm'];
>r3d : 任意
>类型别名 :=> 任意
>i['hm'] : 任意
>类型别名 :=> 任意
>i : I
>'hm' : "hm"

var b: {
>b : { [x: 文字]: 任意; valueOf(): 无值; data: B; }

    valueOf(): void;
>valueOf : () => 无值

    data: B;
>data : B
>B : B

    [x: string]: any;
>x : 文字
>类型别名 :=> 文字
}

var r4: void = b.valueOf();
>r4 : 无值
>类型别名 :=> 无值
>b.valueOf() : 无值
>类型别名 :=> 无值
>b.valueOf : () => 无值
>b : { [x: 文字]: 任意; valueOf(): 无值; data: B; }
>valueOf : () => 无值

