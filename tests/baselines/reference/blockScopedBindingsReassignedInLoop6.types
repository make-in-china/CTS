=== tests/cases/compiler/blockScopedBindingsReassignedInLoop6.ts ===
function f1() {
>f1 : () => void

    for (let [x, y] = [1, 2]; x < y; ++x, --y) {
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
>[1, 2] : [number, number]
>1 : 1
>2 : 2
>x < y : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
>++x, --y : number
>类型别名 :=> 数字
>++x : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>--y : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

        let a = () => x++ + y++;
>a : () => number
>() => x++ + y++ : () => number
>x++ + y++ : number
>类型别名 :=> 数字
>x++ : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>y++ : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

        if (x == 1)
>x == 1 : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>1 : 1

            break;
        else if (y == 2)
>y == 2 : boolean
>类型别名 :=> 真假
>y : number
>类型别名 :=> 数字
>2 : 2

            y = 5;
>y = 5 : 5
>y : number
>类型别名 :=> 数字
>5 : 5

        else
            return;
    }
}

function f2() {
>f2 : () => void

    for (let [{a: x, b: {c: y}}] = [{a: 1, b: {c: 2}}]; x < y; ++x, --y) {
>a : any
>类型别名 :=> 任意
>x : number
>类型别名 :=> 数字
>b : any
>类型别名 :=> 任意
>c : any
>类型别名 :=> 任意
>y : number
>类型别名 :=> 数字
>[{a: 1, b: {c: 2}}] : [{ a: number; b: { c: number; }; }]
>{a: 1, b: {c: 2}} : { a: number; b: { c: number; }; }
>a : number
>类型别名 :=> 数字
>1 : 1
>b : { c: number; }
>{c: 2} : { c: number; }
>c : number
>类型别名 :=> 数字
>2 : 2
>x < y : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字
>++x, --y : number
>类型别名 :=> 数字
>++x : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>--y : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

        let a = () => x++ + y++;
>a : () => number
>() => x++ + y++ : () => number
>x++ + y++ : number
>类型别名 :=> 数字
>x++ : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>y++ : number
>类型别名 :=> 数字
>y : number
>类型别名 :=> 数字

        if (x == 1)
>x == 1 : boolean
>类型别名 :=> 真假
>x : number
>类型别名 :=> 数字
>1 : 1

            break;
        else if (y == 2)
>y == 2 : boolean
>类型别名 :=> 真假
>y : number
>类型别名 :=> 数字
>2 : 2

            y = 5;
>y = 5 : 5
>y : number
>类型别名 :=> 数字
>5 : 5

        else
            return;
    }
}






