=== tests/cases/compiler/bases.ts ===
interface I {
>I : I

    x;
>x : 任意
>类型别名 :=> 任意
}

class B {
>B : B

    constructor() {
        this.y: any;
>this.y : 任意
>类型别名 :=> 任意
>this : 本体
>y : 任意
>类型别名 :=> 任意
>any : 任意
>类型别名 :=> 任意
    }
}

class C extends B implements I {
>C : C
>B : B
>I : I

    constructor() {
        this.x: any;
>this.x : 任意
>类型别名 :=> 任意
>this : 本体
>x : 任意
>类型别名 :=> 任意
>any : 任意
>类型别名 :=> 任意
    }
}

new C().x;
>new C().x : 任意
>类型别名 :=> 任意
>new C() : C
>C : 类为 C
>x : 任意
>类型别名 :=> 任意

new C().y;
>new C().y : 任意
>类型别名 :=> 任意
>new C() : C
>C : 类为 C
>y : 任意
>类型别名 :=> 任意


