=== tests/cases/compiler/contextualTypingFunctionReturningFunction.ts ===
interface I {
>I : I

	a(s: string): void;
>a : (s: 文字) => 无值
>s : 文字
>类型别名 :=> 文字

	b(): (n: number) => void;
>b : () => (n: 数字) => 无值
>n : 数字
>类型别名 :=> 数字
}

declare function f(i: I): void;
>f : (i: I) => 无值
>i : I
>I : I

f({
>f({	a: s => {},	b: () => n => {},}) : 无值
>类型别名 :=> 无值
>f : (i: I) => 无值
>{	a: s => {},	b: () => n => {},} : { a: (s: 文字) => 无值; b: () => (n: 数字) => 无值; }

	a: s => {},
>a : (s: 文字) => 无值
>s => {} : (s: 文字) => 无值
>s : 文字
>类型别名 :=> 文字

	b: () => n => {},
>b : () => (n: 数字) => 无值
>() => n => {} : () => (n: 数字) => 无值
>n => {} : (n: 数字) => 无值
>n : 数字
>类型别名 :=> 数字

});

