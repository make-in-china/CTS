=== tests/cases/compiler/restUnion.ts ===
var union: { a: number, c: boolean } | { a: string, b: string };
>union : { a: number; c: boolean; } | { a: string; b: string; }
>a : number
>类型别名 :=> 数字
>c : boolean
>类型别名 :=> 真假
>a : string
>类型别名 :=> 文字
>b : string
>类型别名 :=> 文字

var rest1: { c: boolean } | { b: string };
>rest1 : { c: boolean; } | { b: string; }
>c : boolean
>类型别名 :=> 真假
>b : string
>类型别名 :=> 文字

var {a, ...rest1 } = union;
>a : string | number
>rest1 : { c: boolean; } | { b: string; }
>union : { a: number; c: boolean; } | { a: string; b: string; }


var undefinedUnion: { n: number } | undefined;
>undefinedUnion : { n: number; }
>n : number
>类型别名 :=> 数字

var rest2: {};
>rest2 : {}

var {n, ...rest2 } = undefinedUnion;
>n : number
>类型别名 :=> 数字
>rest2 : {}
>undefinedUnion : { n: number; }


var nullUnion: { n: number } | null;
>nullUnion : { n: number; }
>n : number
>类型别名 :=> 数字
>null : null
>类型别名 :=> 空值

var rest3: {};
>rest3 : {}

var {n, ...rest3 } = nullUnion;
>n : number
>类型别名 :=> 数字
>rest3 : {}
>nullUnion : { n: number; }

