=== tests/cases/conformance/jsdoc/0.js ===
// @ts-check
/** @type {String} */
var S = "hello world";
>S : 文字
>类型别名 :=> 文字
>"hello world" : "hello world"

/** @type {number} */
var n = 10;
>n : 数字
>类型别名 :=> 数字
>10 : 10

/** @type {*} */
var anyT = 2;
>anyT : 任意
>类型别名 :=> 任意
>2 : 2

anyT = "hello";
>anyT = "hello" : "hello"
>anyT : 任意
>类型别名 :=> 任意
>"hello" : "hello"

/** @type {?} */
var anyT1 = 2;
>anyT1 : 任意
>类型别名 :=> 任意
>2 : 2

anyT1 = "hi";
>anyT1 = "hi" : "hi"
>anyT1 : 任意
>类型别名 :=> 任意
>"hi" : "hi"

/** @type {Function} */
const x = (a) => a + 1;
>x : Function
>(a) => a + 1 : (a: 任意) => 任意
>a : 任意
>类型别名 :=> 任意
>a + 1 : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意
>1 : 1

x(1);
>x(1) : 任意
>类型别名 :=> 任意
>x : Function
>1 : 1

/** @type {function} */
const y = (a) => a + 1;
>y : Function
>(a) => a + 1 : (a: 任意) => 任意
>a : 任意
>类型别名 :=> 任意
>a + 1 : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意
>1 : 1

y(1);
>y(1) : 任意
>类型别名 :=> 任意
>y : Function
>1 : 1

/** @type {function (number)} */
const x1 = (a) => a + 1;
>x1 : (arg0: 数字) => 任意
>(a) => a + 1 : (a: 数字) => 数字
>a : 数字
>类型别名 :=> 数字
>a + 1 : 数字
>类型别名 :=> 数字
>a : 数字
>类型别名 :=> 数字
>1 : 1

x1(0);
>x1(0) : 任意
>类型别名 :=> 任意
>x1 : (arg0: 数字) => 任意
>0 : 0

/** @type {function (number): number} */
const x2 = (a) => a + 1;
>x2 : (arg0: 数字) => 数字
>(a) => a + 1 : (a: 数字) => 数字
>a : 数字
>类型别名 :=> 数字
>a + 1 : 数字
>类型别名 :=> 数字
>a : 数字
>类型别名 :=> 数字
>1 : 1

x2(0);
>x2(0) : 数字
>类型别名 :=> 数字
>x2 : (arg0: 数字) => 数字
>0 : 0

/**
 * @type {object}
 */
var props = {};
>props : 任意
>类型别名 :=> 任意
>{} : {}

/**
 * @type {Object}
 */
var props = {};
>props : 任意
>类型别名 :=> 任意
>{} : {}

