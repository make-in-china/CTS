=== tests/cases/compiler/sourceMapValidationDestructuringParameterNestedObjectBindingPattern.ts ===
declare var console: {
>console : { log(msg: 文字): 无值; }

    log(msg: string): void;
>log : (msg: 文字) => 无值
>msg : 文字
>类型别名 :=> 文字
}
interface Robot {
>Robot : Robot

    name: string;
>name : 文字
>类型别名 :=> 文字

    skills: {
>skills : { primary: 文字; secondary: 文字; }

        primary: string;
>primary : 文字
>类型别名 :=> 文字

        secondary: string;
>secondary : 文字
>类型别名 :=> 文字

    };
}
var robotA: Robot = { name: "mower", skills: { primary: "mowing", secondary: "none" } };
>robotA : Robot
>Robot : Robot
>{ name: "mower", skills: { primary: "mowing", secondary: "none" } } : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }
>name : 文字
>类型别名 :=> 文字
>"mower" : "mower"
>skills : { primary: 文字; secondary: 文字; }
>{ primary: "mowing", secondary: "none" } : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
>"mowing" : "mowing"
>secondary : 文字
>类型别名 :=> 文字
>"none" : "none"

function foo1({ skills: { primary: primaryA, secondary: secondaryA } }: Robot) {
>foo1 : ({ skills: { primary: primaryA, secondary: secondaryA } }: Robot) => 无值
>skills : 任意
>类型别名 :=> 任意
>primary : 任意
>类型别名 :=> 任意
>primaryA : 文字
>类型别名 :=> 文字
>secondary : 任意
>类型别名 :=> 任意
>secondaryA : 文字
>类型别名 :=> 文字
>Robot : Robot

    console.log(primaryA);
>console.log(primaryA) : 无值
>类型别名 :=> 无值
>console.log : (msg: 文字) => 无值
>console : { log(msg: 文字): 无值; }
>log : (msg: 文字) => 无值
>primaryA : 文字
>类型别名 :=> 文字
}
function foo2({ name: nameC, skills: { primary: primaryB, secondary: secondaryB } }: Robot) {
>foo2 : ({ name: nameC, skills: { primary: primaryB, secondary: secondaryB } }: Robot) => 无值
>name : 任意
>类型别名 :=> 任意
>nameC : 文字
>类型别名 :=> 文字
>skills : 任意
>类型别名 :=> 任意
>primary : 任意
>类型别名 :=> 任意
>primaryB : 文字
>类型别名 :=> 文字
>secondary : 任意
>类型别名 :=> 任意
>secondaryB : 文字
>类型别名 :=> 文字
>Robot : Robot

    console.log(secondaryB);
>console.log(secondaryB) : 无值
>类型别名 :=> 无值
>console.log : (msg: 文字) => 无值
>console : { log(msg: 文字): 无值; }
>log : (msg: 文字) => 无值
>secondaryB : 文字
>类型别名 :=> 文字
}
function foo3({ skills }: Robot) {
>foo3 : ({ skills }: Robot) => 无值
>skills : { primary: 文字; secondary: 文字; }
>Robot : Robot

    console.log(skills.primary);
>console.log(skills.primary) : 无值
>类型别名 :=> 无值
>console.log : (msg: 文字) => 无值
>console : { log(msg: 文字): 无值; }
>log : (msg: 文字) => 无值
>skills.primary : 文字
>类型别名 :=> 文字
>skills : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
}

foo1(robotA);
>foo1(robotA) : 无值
>类型别名 :=> 无值
>foo1 : ({ skills: { primary: primaryA, secondary: secondaryA } }: Robot) => 无值
>robotA : Robot

foo1({ name: "Edger", skills: { primary: "edging", secondary: "branch trimming" } });
>foo1({ name: "Edger", skills: { primary: "edging", secondary: "branch trimming" } }) : 无值
>类型别名 :=> 无值
>foo1 : ({ skills: { primary: primaryA, secondary: secondaryA } }: Robot) => 无值
>{ name: "Edger", skills: { primary: "edging", secondary: "branch trimming" } } : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }
>name : 文字
>类型别名 :=> 文字
>"Edger" : "Edger"
>skills : { primary: 文字; secondary: 文字; }
>{ primary: "edging", secondary: "branch trimming" } : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
>"edging" : "edging"
>secondary : 文字
>类型别名 :=> 文字
>"branch trimming" : "branch trimming"

foo2(robotA);
>foo2(robotA) : 无值
>类型别名 :=> 无值
>foo2 : ({ name: nameC, skills: { primary: primaryB, secondary: secondaryB } }: Robot) => 无值
>robotA : Robot

foo2({ name: "Edger", skills: { primary: "edging", secondary: "branch trimming" } });
>foo2({ name: "Edger", skills: { primary: "edging", secondary: "branch trimming" } }) : 无值
>类型别名 :=> 无值
>foo2 : ({ name: nameC, skills: { primary: primaryB, secondary: secondaryB } }: Robot) => 无值
>{ name: "Edger", skills: { primary: "edging", secondary: "branch trimming" } } : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }
>name : 文字
>类型别名 :=> 文字
>"Edger" : "Edger"
>skills : { primary: 文字; secondary: 文字; }
>{ primary: "edging", secondary: "branch trimming" } : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
>"edging" : "edging"
>secondary : 文字
>类型别名 :=> 文字
>"branch trimming" : "branch trimming"

foo3(robotA);
>foo3(robotA) : 无值
>类型别名 :=> 无值
>foo3 : ({ skills }: Robot) => 无值
>robotA : Robot

foo3({ name: "Edger", skills: { primary: "edging", secondary: "branch trimming" } });
>foo3({ name: "Edger", skills: { primary: "edging", secondary: "branch trimming" } }) : 无值
>类型别名 :=> 无值
>foo3 : ({ skills }: Robot) => 无值
>{ name: "Edger", skills: { primary: "edging", secondary: "branch trimming" } } : { name: 文字; skills: { primary: 文字; secondary: 文字; }; }
>name : 文字
>类型别名 :=> 文字
>"Edger" : "Edger"
>skills : { primary: 文字; secondary: 文字; }
>{ primary: "edging", secondary: "branch trimming" } : { primary: 文字; secondary: 文字; }
>primary : 文字
>类型别名 :=> 文字
>"edging" : "edging"
>secondary : 文字
>类型别名 :=> 文字
>"branch trimming" : "branch trimming"

