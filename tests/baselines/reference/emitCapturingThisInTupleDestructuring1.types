=== tests/cases/compiler/emitCapturingThisInTupleDestructuring1.ts ===
declare function wrapper(x: any);
>wrapper : (x: 任意) => 任意
>x : 任意
>类型别名 :=> 任意

wrapper((array: [any]) => {
>wrapper((array: [any]) => {    [this.test, this.test1, this.test2] = array;  // even though there is a compiler error, we should still emit lexical capture for "this"}) : 任意
>类型别名 :=> 任意
>wrapper : (x: 任意) => 任意
>(array: [any]) => {    [this.test, this.test1, this.test2] = array;  // even though there is a compiler error, we should still emit lexical capture for "this"} : (array: [任意]) => 无值
>array : [任意]

    [this.test, this.test1, this.test2] = array;  // even though there is a compiler error, we should still emit lexical capture for "this"
>[this.test, this.test1, this.test2] = array : [任意]
>[this.test, this.test1, this.test2] : [任意, 任意, 任意]
>this.test : 任意
>类型别名 :=> 任意
>this : 任意
>类型别名 :=> 任意
>test : 任意
>类型别名 :=> 任意
>this.test1 : 任意
>类型别名 :=> 任意
>this : 任意
>类型别名 :=> 任意
>test1 : 任意
>类型别名 :=> 任意
>this.test2 : 任意
>类型别名 :=> 任意
>this : 任意
>类型别名 :=> 任意
>test2 : 任意
>类型别名 :=> 任意
>array : [任意]

});
