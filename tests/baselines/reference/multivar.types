=== tests/cases/compiler/multivar.ts ===
var a,b,c;
>a : 任意
>类型别名 :=> 任意
>b : 任意
>类型别名 :=> 任意
>c : 任意
>类型别名 :=> 任意

var x=1,y=2,z=3;
>x : 数字
>类型别名 :=> 数字
>1 : 1
>y : 数字
>类型别名 :=> 数字
>2 : 2
>z : 数字
>类型别名 :=> 数字
>3 : 3

module m2 {
>m2 : 类为 m2

    export var a, b2: number = 10, b;
>a : 任意
>类型别名 :=> 任意
>b2 : 数字
>类型别名 :=> 数字
>10 : 10
>b : 任意
>类型别名 :=> 任意

    var m1;
>m1 : 任意
>类型别名 :=> 任意

    var a2, b22: number = 10, b222;
>a2 : 任意
>类型别名 :=> 任意
>b22 : 数字
>类型别名 :=> 数字
>10 : 10
>b222 : 任意
>类型别名 :=> 任意

    var m3;
>m3 : 任意
>类型别名 :=> 任意

    class C {
>C : C

        constructor (public b) {
>b : 任意
>类型别名 :=> 任意
        }
    }

    export class C2 {
>C2 : C2

        constructor (public b) {
>b : 任意
>类型别名 :=> 任意
        }
    }
    var m;
>m : 任意
>类型别名 :=> 任意

    declare var d1, d2;
>d1 : 任意
>类型别名 :=> 任意
>d2 : 任意
>类型别名 :=> 任意

    var b2;
>b2 : 任意
>类型别名 :=> 任意

    declare var v1;
>v1 : 任意
>类型别名 :=> 任意
}

var d;
>d : 任意
>类型别名 :=> 任意

var a22, b22 = 10, c22 = 30, dn;
>a22 : 任意
>类型别名 :=> 任意
>b22 : 数字
>类型别名 :=> 数字
>10 : 10
>c22 : 数字
>类型别名 :=> 数字
>30 : 30
>dn : 任意
>类型别名 :=> 任意

var nn;
>nn : 任意
>类型别名 :=> 任意

declare var da1, da2;
>da1 : 任意
>类型别名 :=> 任意
>da2 : 任意
>类型别名 :=> 任意

var normalVar;
>normalVar : 任意
>类型别名 :=> 任意

declare var dv1;
>dv1 : 任意
>类型别名 :=> 任意

var xl;
>xl : 任意
>类型别名 :=> 任意

var x3;
>x3 : 任意
>类型别名 :=> 任意

var z4;
>z4 : 任意
>类型别名 :=> 任意

function foo(a2) {
>foo : (a2: 任意) => 无值
>a2 : 任意
>类型别名 :=> 任意

    var a = 10;
>a : 数字
>类型别名 :=> 数字
>10 : 10
}


for (var i = 0; i < 30; i++) {
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 30 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>30 : 30
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    i++;
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字
}
var b5 = 10;
>b5 : 数字
>类型别名 :=> 数字
>10 : 10

