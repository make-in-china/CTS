=== tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPatternDefaultValues2.ts ===
declare var console: {
>console : { log(msg: 文字): 无值; }

    log(msg: string): void;
>log : (msg: 文字) => 无值
>msg : 文字
>类型别名 :=> 文字
}
type MultiSkilledRobot = [string, string[]];
>MultiSkilledRobot : [文字, 文字[]]

var multiRobotA: MultiSkilledRobot = ["mower", ["mowing", ""]];
>multiRobotA : [文字, 文字[]]
>MultiSkilledRobot : [文字, 文字[]]
>["mower", ["mowing", ""]] : [文字, 文字[]]
>"mower" : "mower"
>["mowing", ""] : 文字[]
>"mowing" : "mowing"
>"" : ""

var multiRobotB: MultiSkilledRobot = ["trimmer", ["trimming", "edging"]];
>multiRobotB : [文字, 文字[]]
>MultiSkilledRobot : [文字, 文字[]]
>["trimmer", ["trimming", "edging"]] : [文字, 文字[]]
>"trimmer" : "trimmer"
>["trimming", "edging"] : 文字[]
>"trimming" : "trimming"
>"edging" : "edging"

let [, skillA = ["noSkill", "noSkill"]] = multiRobotA;
> : 未定
>类型别名 :=> 未定
>skillA : 文字[]
>["noSkill", "noSkill"] : 文字[]
>"noSkill" : "noSkill"
>"noSkill" : "noSkill"
>multiRobotA : [文字, 文字[]]

let [nameMB = "noName" ] = multiRobotB;
>nameMB : 文字
>类型别名 :=> 文字
>"noName" : "noName"
>multiRobotB : [文字, 文字[]]

let [nameMA = "noName", [primarySkillA = "noSkill", secondarySkillA = "noSkill"] = ["noSkill", "noSkill"]] = multiRobotA;
>nameMA : 文字
>类型别名 :=> 文字
>"noName" : "noName"
>primarySkillA : 文字
>类型别名 :=> 文字
>"noSkill" : "noSkill"
>secondarySkillA : 文字
>类型别名 :=> 文字
>"noSkill" : "noSkill"
>["noSkill", "noSkill"] : [文字, 文字]
>"noSkill" : "noSkill"
>"noSkill" : "noSkill"
>multiRobotA : [文字, 文字[]]

let [nameMC = "noName" ] = ["roomba", ["vaccum", "mopping"]];
>nameMC : 文字
>类型别名 :=> 文字
>"noName" : "noName"
>["roomba", ["vaccum", "mopping"]] : [文字, 文字[]]
>"roomba" : "roomba"
>["vaccum", "mopping"] : 文字[]
>"vaccum" : "vaccum"
>"mopping" : "mopping"

let [nameMC2 = "noName", [primarySkillC = "noSkill", secondarySkillC = "noSkill"] = ["noSkill", "noSkill"]] = ["roomba", ["vaccum", "mopping"]];
>nameMC2 : 文字
>类型别名 :=> 文字
>"noName" : "noName"
>primarySkillC : 文字
>类型别名 :=> 文字
>"noSkill" : "noSkill"
>secondarySkillC : 文字
>类型别名 :=> 文字
>"noSkill" : "noSkill"
>["noSkill", "noSkill"] : [文字, 文字]
>"noSkill" : "noSkill"
>"noSkill" : "noSkill"
>["roomba", ["vaccum", "mopping"]] : [文字, [文字, 文字]]
>"roomba" : "roomba"
>["vaccum", "mopping"] : [文字, 文字]
>"vaccum" : "vaccum"
>"mopping" : "mopping"

if (nameMB == nameMA) {
>nameMB == nameMA : 真假
>类型别名 :=> 真假
>nameMB : 文字
>类型别名 :=> 文字
>nameMA : 文字
>类型别名 :=> 文字

    console.log(skillA[0] + skillA[1]);
>console.log(skillA[0] + skillA[1]) : 无值
>类型别名 :=> 无值
>console.log : (msg: 文字) => 无值
>console : { log(msg: 文字): 无值; }
>log : (msg: 文字) => 无值
>skillA[0] + skillA[1] : 文字
>类型别名 :=> 文字
>skillA[0] : 文字
>类型别名 :=> 文字
>skillA : 文字[]
>0 : 0
>skillA[1] : 文字
>类型别名 :=> 文字
>skillA : 文字[]
>1 : 1
}
