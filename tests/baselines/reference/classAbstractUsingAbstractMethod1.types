=== tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractUsingAbstractMethod1.ts ===
abstract class A {
>A : A

    abstract foo() : number;
>foo : () => 数字
}

class B extends A {
>B : B
>A : A

    foo() { return 1; }
>foo : () => 数字
>1 : 1
}

abstract class C extends A  {
>C : C
>A : A

    abstract foo() : number;
>foo : () => 数字
}

var a = new B;
>a : B
>new B : B
>B : 类为 B

a.foo();
>a.foo() : 数字
>类型别名 :=> 数字
>a.foo : () => 数字
>a : B
>foo : () => 数字

a = new C; // error, cannot instantiate abstract class.
>a = new C : 任意
>类型别名 :=> 任意
>a : B
>new C : 任意
>类型别名 :=> 任意
>C : 类为 C

a.foo();
>a.foo() : 数字
>类型别名 :=> 数字
>a.foo : () => 数字
>a : B
>foo : () => 数字

