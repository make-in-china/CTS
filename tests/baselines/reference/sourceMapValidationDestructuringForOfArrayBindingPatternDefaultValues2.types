=== tests/cases/compiler/sourceMapValidationDestructuringForOfArrayBindingPatternDefaultValues2.ts ===
declare var console: {
>console : { log(msg: any): void; }

    log(msg: any): void;
>log : (msg: any) => void
>msg : any
>类型别名 :=> 任意
}
type Robot = [number, string, string];
>Robot : [number, string, string]

type MultiSkilledRobot = [string, [string, string]];
>MultiSkilledRobot : [string, [string, string]]

let robotA: Robot = [1, "mower", "mowing"];
>robotA : [number, string, string]
>Robot : [number, string, string]
>[1, "mower", "mowing"] : [number, string, string]
>1 : 1
>"mower" : "mower"
>"mowing" : "mowing"

let robotB: Robot = [2, "trimmer", "trimming"];
>robotB : [number, string, string]
>Robot : [number, string, string]
>[2, "trimmer", "trimming"] : [number, string, string]
>2 : 2
>"trimmer" : "trimmer"
>"trimming" : "trimming"

let robots = [robotA, robotB];
>robots : [number, string, string][]
>[robotA, robotB] : [number, string, string][]
>robotA : [number, string, string]
>robotB : [number, string, string]

function getRobots() {
>getRobots : () => [number, string, string][]

    return robots;
>robots : [number, string, string][]
}

let multiRobotA: MultiSkilledRobot = ["mower", ["mowing", ""]];
>multiRobotA : [string, [string, string]]
>MultiSkilledRobot : [string, [string, string]]
>["mower", ["mowing", ""]] : [string, [string, string]]
>"mower" : "mower"
>["mowing", ""] : [string, string]
>"mowing" : "mowing"
>"" : ""

let multiRobotB: MultiSkilledRobot = ["trimmer", ["trimming", "edging"]];
>multiRobotB : [string, [string, string]]
>MultiSkilledRobot : [string, [string, string]]
>["trimmer", ["trimming", "edging"]] : [string, [string, string]]
>"trimmer" : "trimmer"
>["trimming", "edging"] : [string, string]
>"trimming" : "trimming"
>"edging" : "edging"

let multiRobots = [multiRobotA, multiRobotB];
>multiRobots : [string, [string, string]][]
>[multiRobotA, multiRobotB] : [string, [string, string]][]
>multiRobotA : [string, [string, string]]
>multiRobotB : [string, [string, string]]

function getMultiRobots() {
>getMultiRobots : () => [string, [string, string]][]

    return multiRobots;
>multiRobots : [string, [string, string]][]
}

let nameA: string, primarySkillA: string, secondarySkillA: string;
>nameA : string
>类型别名 :=> 文字
>primarySkillA : string
>类型别名 :=> 文字
>secondarySkillA : string
>类型别名 :=> 文字

let numberB: number, nameB: string;
>numberB : number
>类型别名 :=> 数字
>nameB : string
>类型别名 :=> 文字

let numberA2: number, nameA2: string, skillA2: string, nameMA: string;
>numberA2 : number
>类型别名 :=> 数字
>nameA2 : string
>类型别名 :=> 文字
>skillA2 : string
>类型别名 :=> 文字
>nameMA : string
>类型别名 :=> 文字

let numberA3: number, robotAInfo: (number | string)[], multiRobotAInfo: (string | [string, string])[];
>numberA3 : number
>类型别名 :=> 数字
>robotAInfo : (string | number)[]
>multiRobotAInfo : (string | [string, string])[]

for ([, nameA = "noName"] of robots) {
>[, nameA = "noName"] : [undefined, string]
> : undefined
>类型别名 :=> 未定
>nameA = "noName" : "noName"
>nameA : string
>类型别名 :=> 文字
>"noName" : "noName"
>robots : [number, string, string][]

    console.log(nameA);
>console.log(nameA) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
>类型别名 :=> 文字
}
for ([, nameA = "noName"] of getRobots()) {
>[, nameA = "noName"] : [undefined, string]
> : undefined
>类型别名 :=> 未定
>nameA = "noName" : "noName"
>nameA : string
>类型别名 :=> 文字
>"noName" : "noName"
>getRobots() : [number, string, string][]
>getRobots : () => [number, string, string][]

    console.log(nameA);
>console.log(nameA) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
>类型别名 :=> 文字
}
for ([, nameA = "noName"] of [robotA, robotB]) {
>[, nameA = "noName"] : [undefined, string]
> : undefined
>类型别名 :=> 未定
>nameA = "noName" : "noName"
>nameA : string
>类型别名 :=> 文字
>"noName" : "noName"
>[robotA, robotB] : [number, string, string][]
>robotA : [number, string, string]
>robotB : [number, string, string]

    console.log(nameA);
>console.log(nameA) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
>类型别名 :=> 文字
}
for ([, [
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"]] : [undefined, [string, string]]
> : undefined
>类型别名 :=> 未定
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"] : [string, string]
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] : [string, string]

    primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : string
>类型别名 :=> 文字
>"primary" : "primary"

    secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : string
>类型别名 :=> 文字
>"secondary" : "secondary"

] = ["skill1", "skill2"]] of multiRobots) {
>["skill1", "skill2"] : [string, string]
>"skill1" : "skill1"
>"skill2" : "skill2"
>multiRobots : [string, [string, string]][]

    console.log(primarySkillA);
>console.log(primarySkillA) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>primarySkillA : string
>类型别名 :=> 文字
}
for ([, [
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"]] : [undefined, [string, string]]
> : undefined
>类型别名 :=> 未定
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"] : [string, string]
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] : [string, string]

    primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : string
>类型别名 :=> 文字
>"primary" : "primary"

    secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : string
>类型别名 :=> 文字
>"secondary" : "secondary"

] = ["skill1", "skill2"]] of getMultiRobots()) {
>["skill1", "skill2"] : [string, string]
>"skill1" : "skill1"
>"skill2" : "skill2"
>getMultiRobots() : [string, [string, string]][]
>getMultiRobots : () => [string, [string, string]][]

    console.log(primarySkillA);
>console.log(primarySkillA) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>primarySkillA : string
>类型别名 :=> 文字
}
for ([, [
>[, [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"]] : [undefined, [string, string]]
> : undefined
>类型别名 :=> 未定
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"] : [string, string]
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] : [string, string]

    primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : string
>类型别名 :=> 文字
>"primary" : "primary"

    secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : string
>类型别名 :=> 文字
>"secondary" : "secondary"

] = ["skill1", "skill2"]] of [multiRobotA, multiRobotB]) {
>["skill1", "skill2"] : [string, string]
>"skill1" : "skill1"
>"skill2" : "skill2"
>[multiRobotA, multiRobotB] : [string, [string, string]][]
>multiRobotA : [string, [string, string]]
>multiRobotB : [string, [string, string]]

    console.log(primarySkillA);
>console.log(primarySkillA) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>primarySkillA : string
>类型别名 :=> 文字
}

for ([numberB = -1] of robots) {
>[numberB = -1] : [number]
>numberB = -1 : -1
>numberB : number
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>robots : [number, string, string][]

    console.log(numberB);
>console.log(numberB) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>numberB : number
>类型别名 :=> 数字
}
for ([numberB = -1] of getRobots()) {
>[numberB = -1] : [number]
>numberB = -1 : -1
>numberB : number
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>getRobots() : [number, string, string][]
>getRobots : () => [number, string, string][]

    console.log(numberB);
>console.log(numberB) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>numberB : number
>类型别名 :=> 数字
}
for ([numberB = -1] of [robotA, robotB]) {
>[numberB = -1] : [number]
>numberB = -1 : -1
>numberB : number
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>[robotA, robotB] : [number, string, string][]
>robotA : [number, string, string]
>robotB : [number, string, string]

    console.log(numberB);
>console.log(numberB) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>numberB : number
>类型别名 :=> 数字
}
for ([nameB = "noName"] of multiRobots) {
>[nameB = "noName"] : [string]
>nameB = "noName" : "noName"
>nameB : string
>类型别名 :=> 文字
>"noName" : "noName"
>multiRobots : [string, [string, string]][]

    console.log(nameB);
>console.log(nameB) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameB : string
>类型别名 :=> 文字
}
for ([nameB = "noName"] of getMultiRobots()) {
>[nameB = "noName"] : [string]
>nameB = "noName" : "noName"
>nameB : string
>类型别名 :=> 文字
>"noName" : "noName"
>getMultiRobots() : [string, [string, string]][]
>getMultiRobots : () => [string, [string, string]][]

    console.log(nameB);
>console.log(nameB) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameB : string
>类型别名 :=> 文字
}
for ([nameB = "noName"] of [multiRobotA, multiRobotB]) {
>[nameB = "noName"] : [string]
>nameB = "noName" : "noName"
>nameB : string
>类型别名 :=> 文字
>"noName" : "noName"
>[multiRobotA, multiRobotB] : [string, [string, string]][]
>multiRobotA : [string, [string, string]]
>multiRobotB : [string, [string, string]]

    console.log(nameB);
>console.log(nameB) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameB : string
>类型别名 :=> 文字
}

for ([numberA2 = -1, nameA2 = "noName", skillA2 = "skill"] of robots) {
>[numberA2 = -1, nameA2 = "noName", skillA2 = "skill"] : [number, string, string]
>numberA2 = -1 : -1
>numberA2 : number
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>nameA2 = "noName" : "noName"
>nameA2 : string
>类型别名 :=> 文字
>"noName" : "noName"
>skillA2 = "skill" : "skill"
>skillA2 : string
>类型别名 :=> 文字
>"skill" : "skill"
>robots : [number, string, string][]

    console.log(nameA2);
>console.log(nameA2) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA2 : string
>类型别名 :=> 文字
}
for ([numberA2 = -1, nameA2 = "noName", skillA2 = "skill"] of getRobots()) {
>[numberA2 = -1, nameA2 = "noName", skillA2 = "skill"] : [number, string, string]
>numberA2 = -1 : -1
>numberA2 : number
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>nameA2 = "noName" : "noName"
>nameA2 : string
>类型别名 :=> 文字
>"noName" : "noName"
>skillA2 = "skill" : "skill"
>skillA2 : string
>类型别名 :=> 文字
>"skill" : "skill"
>getRobots() : [number, string, string][]
>getRobots : () => [number, string, string][]

    console.log(nameA2);
>console.log(nameA2) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA2 : string
>类型别名 :=> 文字
}
for ([numberA2 = -1, nameA2 = "noName", skillA2 = "skill"] of [robotA, robotB]) {
>[numberA2 = -1, nameA2 = "noName", skillA2 = "skill"] : [number, string, string]
>numberA2 = -1 : -1
>numberA2 : number
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>nameA2 = "noName" : "noName"
>nameA2 : string
>类型别名 :=> 文字
>"noName" : "noName"
>skillA2 = "skill" : "skill"
>skillA2 : string
>类型别名 :=> 文字
>"skill" : "skill"
>[robotA, robotB] : [number, string, string][]
>robotA : [number, string, string]
>robotB : [number, string, string]

    console.log(nameA2);
>console.log(nameA2) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA2 : string
>类型别名 :=> 文字
}
for ([nameMA = "noName", [
>[nameMA = "noName", [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"]] : [string, [string, string]]
>nameMA = "noName" : "noName"
>nameMA : string
>类型别名 :=> 文字
>"noName" : "noName"
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"] : [string, string]
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] : [string, string]

    primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : string
>类型别名 :=> 文字
>"primary" : "primary"

    secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : string
>类型别名 :=> 文字
>"secondary" : "secondary"

] = ["skill1", "skill2"]] of multiRobots) {
>["skill1", "skill2"] : [string, string]
>"skill1" : "skill1"
>"skill2" : "skill2"
>multiRobots : [string, [string, string]][]

    console.log(nameMA);
>console.log(nameMA) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameMA : string
>类型别名 :=> 文字
}
for ([nameMA = "noName", [
>[nameMA = "noName", [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"]] : [string, [string, string]]
>nameMA = "noName" : "noName"
>nameMA : string
>类型别名 :=> 文字
>"noName" : "noName"
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"] : [string, string]
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] : [string, string]

    primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : string
>类型别名 :=> 文字
>"primary" : "primary"

    secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : string
>类型别名 :=> 文字
>"secondary" : "secondary"

] = ["skill1", "skill2"]] of getMultiRobots()) {
>["skill1", "skill2"] : [string, string]
>"skill1" : "skill1"
>"skill2" : "skill2"
>getMultiRobots() : [string, [string, string]][]
>getMultiRobots : () => [string, [string, string]][]

    console.log(nameMA);
>console.log(nameMA) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameMA : string
>类型别名 :=> 文字
}
for ([nameMA = "noName", [
>[nameMA = "noName", [    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"]] : [string, [string, string]]
>nameMA = "noName" : "noName"
>nameMA : string
>类型别名 :=> 文字
>"noName" : "noName"
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] = ["skill1", "skill2"] : [string, string]
>[    primarySkillA = "primary",    secondarySkillA = "secondary"] : [string, string]

    primarySkillA = "primary",
>primarySkillA = "primary" : "primary"
>primarySkillA : string
>类型别名 :=> 文字
>"primary" : "primary"

    secondarySkillA = "secondary"
>secondarySkillA = "secondary" : "secondary"
>secondarySkillA : string
>类型别名 :=> 文字
>"secondary" : "secondary"

] = ["skill1", "skill2"]] of [multiRobotA, multiRobotB]) {
>["skill1", "skill2"] : [string, string]
>"skill1" : "skill1"
>"skill2" : "skill2"
>[multiRobotA, multiRobotB] : [string, [string, string]][]
>multiRobotA : [string, [string, string]]
>multiRobotB : [string, [string, string]]

    console.log(nameMA);
>console.log(nameMA) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameMA : string
>类型别名 :=> 文字
}

for ([numberA3 = -1, ...robotAInfo] of robots) {
>[numberA3 = -1, ...robotAInfo] : (string | number)[]
>numberA3 = -1 : -1
>numberA3 : number
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>...robotAInfo : string | number
>robotAInfo : (string | number)[]
>robots : [number, string, string][]

    console.log(numberA3);
>console.log(numberA3) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>numberA3 : number
>类型别名 :=> 数字
}
for ([numberA3 = -1, ...robotAInfo] of getRobots()) {
>[numberA3 = -1, ...robotAInfo] : (string | number)[]
>numberA3 = -1 : -1
>numberA3 : number
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>...robotAInfo : string | number
>robotAInfo : (string | number)[]
>getRobots() : [number, string, string][]
>getRobots : () => [number, string, string][]

    console.log(numberA3);
>console.log(numberA3) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>numberA3 : number
>类型别名 :=> 数字
}
for ([numberA3 = -1, ...robotAInfo] of [robotA, robotB]) {
>[numberA3 = -1, ...robotAInfo] : (string | number)[]
>numberA3 = -1 : -1
>numberA3 : number
>类型别名 :=> 数字
>-1 : -1
>1 : 1
>...robotAInfo : string | number
>robotAInfo : (string | number)[]
>[robotA, robotB] : [number, string, string][]
>robotA : [number, string, string]
>robotB : [number, string, string]

    console.log(numberA3);
>console.log(numberA3) : void
>类型别名 :=> 无值
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>numberA3 : number
>类型别名 :=> 数字
}
