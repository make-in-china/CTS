=== tests/cases/compiler/overloadAssignmentCompat.ts ===
// ok - overload signatures are assignment compatible with their implementation
class Accessor {}
>Accessor : Accessor

function attr(name: string): string;
>attr : { (name: string): string; (name: string, value: string): Accessor; (map: any): Accessor; }
>name : string
>类型别名 :=> 文字

function attr(name: string, value: string): Accessor;
>attr : { (name: string): string; (name: string, value: string): Accessor; (map: any): Accessor; }
>name : string
>类型别名 :=> 文字
>value : string
>类型别名 :=> 文字
>Accessor : Accessor

function attr(map: any): Accessor;
>attr : { (name: string): string; (name: string, value: string): Accessor; (map: any): Accessor; }
>map : any
>类型别名 :=> 任意
>Accessor : Accessor

function attr(nameOrMap: any, value?: string): any {
>attr : { (name: string): string; (name: string, value: string): Accessor; (map: any): Accessor; }
>nameOrMap : any
>类型别名 :=> 任意
>value : string
>类型别名 :=> 文字

    if (nameOrMap && typeof nameOrMap === "object") {
>nameOrMap && typeof nameOrMap === "object" : boolean
>类型别名 :=> 真假
>nameOrMap : any
>类型别名 :=> 任意
>typeof nameOrMap === "object" : boolean
>类型别名 :=> 真假
>typeof nameOrMap : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>nameOrMap : any
>类型别名 :=> 任意
>"object" : "object"

        // handle map case
        return new Accessor;
>new Accessor : Accessor
>Accessor : typeof Accessor
    }
    else {
        // handle string case
        return "s";
>"s" : "s"
    }
}

// not ok - there's an assignment compat error
function attr2(name: string): string;
>attr2 : { (name: string): string; (name: string, value: string): Accessor; (map: any): Accessor; }
>name : string
>类型别名 :=> 文字

function attr2(name: string, value: string): Accessor;
>attr2 : { (name: string): string; (name: string, value: string): Accessor; (map: any): Accessor; }
>name : string
>类型别名 :=> 文字
>value : string
>类型别名 :=> 文字
>Accessor : Accessor

function attr2(map: any): Accessor;
>attr2 : { (name: string): string; (name: string, value: string): Accessor; (map: any): Accessor; }
>map : any
>类型别名 :=> 任意
>Accessor : Accessor

function attr2(nameOrMap: any, value?: string): string {
>attr2 : { (name: string): string; (name: string, value: string): Accessor; (map: any): Accessor; }
>nameOrMap : any
>类型别名 :=> 任意
>value : string
>类型别名 :=> 文字

    if (nameOrMap && typeof nameOrMap === "object") {
>nameOrMap && typeof nameOrMap === "object" : boolean
>类型别名 :=> 真假
>nameOrMap : any
>类型别名 :=> 任意
>typeof nameOrMap === "object" : boolean
>类型别名 :=> 真假
>typeof nameOrMap : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>nameOrMap : any
>类型别名 :=> 任意
>"object" : "object"

        // handle map case
        return "t";
>"t" : "t"
    }
    else {
        // handle string case
        return "s";
>"s" : "s"
    }
}

// error - signatures are not assignment compatible
function foo():number; 
>foo : () => number

function foo():string { return "a" };
>foo : () => number
>"a" : "a"


