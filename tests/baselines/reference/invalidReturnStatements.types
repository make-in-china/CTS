=== tests/cases/conformance/statements/returnStatements/invalidReturnStatements.ts ===
// all the following should be error
function fn1(): number {  }
>fn1 : () => 数字

function fn2(): string { }
>fn2 : () => 文字

function fn3(): boolean { }
>fn3 : () => 真假

function fn4(): Date {  }
>fn4 : () => Date
>Date : Date

function fn7(): any {  } // should be valid: any includes void
>fn7 : () => 任意

interface I { id: number }
>I : I
>id : 数字
>类型别名 :=> 数字

class C implements I {
>C : C
>I : I

    id: number;
>id : 数字
>类型别名 :=> 数字

    dispose() {}
>dispose : () => 无值
}
class D extends C {
>D : D
>C : C

    name: string;
>name : 文字
>类型别名 :=> 文字
}
function fn10(): D { return { id: 12 }; } 
>fn10 : () => D
>D : D
>{ id: 12 } : { id: 数字; }
>id : 数字
>类型别名 :=> 数字
>12 : 12

function fn11(): D { return new C(); }
>fn11 : () => D
>D : D
>new C() : C
>C : 类为 C


