=== tests/cases/conformance/jsx/file.tsx ===
import React = require('react');
>React : typeof React

function EmptySFC1() {
>EmptySFC1 : () => JSX.Element

    return <div>Hi</div>
><div>Hi</div> : JSX.Element
>div : any
>类型别名 :=> 任意
>div : any
>类型别名 :=> 任意
}

function EmptySFC2() {
>EmptySFC2 : () => JSX.Element

    return <div>Hello</div>
><div>Hello</div> : JSX.Element
>div : any
>类型别名 :=> 任意
>div : any
>类型别名 :=> 任意
}

function SFC2(prop: { x: boolean }) {
>SFC2 : (prop: { x: boolean; }) => JSX.Element
>prop : { x: boolean; }
>x : boolean
>类型别名 :=> 真假

    return <h1>World</h1>;
><h1>World</h1> : JSX.Element
>h1 : any
>类型别名 :=> 任意
>h1 : any
>类型别名 :=> 任意
}

var EmptySFCComp = EmptySFC1 || EmptySFC2;
>EmptySFCComp : () => JSX.Element
>EmptySFC1 || EmptySFC2 : () => JSX.Element
>EmptySFC1 : () => JSX.Element
>EmptySFC2 : () => JSX.Element

var SFC2AndEmptyComp = SFC2 || EmptySFC1;
>SFC2AndEmptyComp : (prop: { x: boolean; }) => JSX.Element
>SFC2 || EmptySFC1 : (prop: { x: boolean; }) => JSX.Element
>SFC2 : (prop: { x: boolean; }) => JSX.Element
>EmptySFC1 : () => JSX.Element

// Error
let a = <EmptySFCComp x />;
>a : JSX.Element
><EmptySFCComp x /> : JSX.Element
>EmptySFCComp : () => JSX.Element
>x : true
>类型别名 :=> 为真

let b = <SFC2AndEmptyComp x="hi" />;
>b : JSX.Element
><SFC2AndEmptyComp x="hi" /> : JSX.Element
>SFC2AndEmptyComp : (prop: { x: boolean; }) => JSX.Element
>x : string
>类型别名 :=> 文字

let c = <SFC2AndEmptyComp />;
>c : JSX.Element
><SFC2AndEmptyComp /> : JSX.Element
>SFC2AndEmptyComp : (prop: { x: boolean; }) => JSX.Element

let d = <SFC2AndEmptyComp data-prop />;
>d : JSX.Element
><SFC2AndEmptyComp data-prop /> : JSX.Element
>SFC2AndEmptyComp : (prop: { x: boolean; }) => JSX.Element
>data-prop : true
>类型别名 :=> 为真


