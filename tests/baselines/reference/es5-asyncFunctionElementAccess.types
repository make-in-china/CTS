=== tests/cases/compiler/es5-asyncFunctionElementAccess.ts ===
declare var x, y, z, a, b, c;
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意
>b : 任意
>类型别名 :=> 任意
>c : 任意
>类型别名 :=> 任意

async function elementAccess0() {
>elementAccess0 : () => Promise<无值>

    z = await x[y];
>z = await x[y] : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
>await x[y] : 任意
>类型别名 :=> 任意
>x[y] : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
}

async function elementAccess1() {
>elementAccess1 : () => Promise<无值>

    z = (await x)[y];
>z = (await x)[y] : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
>(await x)[y] : 任意
>类型别名 :=> 任意
>(await x) : 任意
>类型别名 :=> 任意
>await x : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
}

async function elementAccess2() {
>elementAccess2 : () => Promise<无值>

    z = x[await y];
>z = x[await y] : 任意
>类型别名 :=> 任意
>z : 任意
>类型别名 :=> 任意
>x[await y] : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>await y : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
}

