=== tests/cases/conformance/es6/newTarget/invalidNewTarget.es6.ts ===
const a = new.target;
>a : 任意
>类型别名 :=> 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

const b = () => new.target;
>b : () => 任意
>() => new.target : () => 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

class C {
>C : C

    [new.target]() { }
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    c() { return new.target; }
>c : () => 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    get d() { return new.target; }
>d : 任意
>类型别名 :=> 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    set e(_) { _ = new.target; }
>e : 任意
>类型别名 :=> 任意
>_ : 任意
>类型别名 :=> 任意
>_ = new.target : 任意
>类型别名 :=> 任意
>_ : 任意
>类型别名 :=> 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    f = () => new.target;
>f : () => 任意
>() => new.target : () => 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    static [new.target]() { }
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    static g() { return new.target; }
>g : () => 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    static get h() { return new.target; }
>h : 任意
>类型别名 :=> 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    static set i(_) { _ = new.target; }
>i : 任意
>类型别名 :=> 任意
>_ : 任意
>类型别名 :=> 任意
>_ = new.target : 任意
>类型别名 :=> 任意
>_ : 任意
>类型别名 :=> 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    static j = () => new.target;
>j : () => 任意
>() => new.target : () => 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意
}

const O = {
>O : { [x: 数字]: 任意; k(): 任意; 只读 l: 任意; m: 任意; n: 任意; }
>{    [new.target]: undefined,    k() { return new.target; },    get l() { return new.target; },    set m(_) { _ = new.target; },    n: new.target,} : { [x: 数字]: 未定; k(): 任意; 只读 l: 任意; m: 任意; n: 任意; }

    [new.target]: undefined,
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意
>undefined : 未定
>类型别名 :=> 未定

    k() { return new.target; },
>k : () => 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    get l() { return new.target; },
>l : 任意
>类型别名 :=> 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    set m(_) { _ = new.target; },
>m : 任意
>类型别名 :=> 任意
>_ : 任意
>类型别名 :=> 任意
>_ = new.target : 任意
>类型别名 :=> 任意
>_ : 任意
>类型别名 :=> 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

    n: new.target,
>n : 任意
>类型别名 :=> 任意
>new.target : 任意
>类型别名 :=> 任意
>target : 任意
>类型别名 :=> 任意

};
