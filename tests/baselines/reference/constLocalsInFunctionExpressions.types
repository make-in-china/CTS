=== tests/cases/conformance/controlFlow/constLocalsInFunctionExpressions.ts ===
declare function getStringOrNumber(): string | number;
>getStringOrNumber : () => 文字 | 数字

function f1() {
>f1 : () => 无值

    const x = getStringOrNumber();
>x : 文字 | 数字
>getStringOrNumber() : 文字 | 数字
>getStringOrNumber : () => 文字 | 数字

    if (typeof x === "string") {
>typeof x === "string" : 真假
>类型别名 :=> 真假
>typeof x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x : 文字 | 数字
>"string" : "string"

        const f = () => x.length;
>f : () => 数字
>() => x.length : () => 数字
>x.length : 数字
>类型别名 :=> 数字
>x : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
    }
}

function f2() {
>f2 : () => 无值

    const x = getStringOrNumber();
>x : 文字 | 数字
>getStringOrNumber() : 文字 | 数字
>getStringOrNumber : () => 文字 | 数字

    if (typeof x !== "string") {
>typeof x !== "string" : 真假
>类型别名 :=> 真假
>typeof x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x : 文字 | 数字
>"string" : "string"

        return;
    }
    const f = () => x.length;
>f : () => 数字
>() => x.length : () => 数字
>x.length : 数字
>类型别名 :=> 数字
>x : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
}

function f3() {
>f3 : () => 无值

    const x = getStringOrNumber();
>x : 文字 | 数字
>getStringOrNumber() : 文字 | 数字
>getStringOrNumber : () => 文字 | 数字

    if (typeof x === "string") {
>typeof x === "string" : 真假
>类型别名 :=> 真假
>typeof x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x : 文字 | 数字
>"string" : "string"

        const f = function() { return x.length; };
>f : () => 数字
>function() { return x.length; } : () => 数字
>x.length : 数字
>类型别名 :=> 数字
>x : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
    }
}

function f4() {
>f4 : () => 无值

    const x = getStringOrNumber();
>x : 文字 | 数字
>getStringOrNumber() : 文字 | 数字
>getStringOrNumber : () => 文字 | 数字

    if (typeof x !== "string") {
>typeof x !== "string" : 真假
>类型别名 :=> 真假
>typeof x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x : 文字 | 数字
>"string" : "string"

        return;
    }
    const f = function() { return x.length; };
>f : () => 数字
>function() { return x.length; } : () => 数字
>x.length : 数字
>类型别名 :=> 数字
>x : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
}

function f5() {
>f5 : () => 无值

    const x = getStringOrNumber();
>x : 文字 | 数字
>getStringOrNumber() : 文字 | 数字
>getStringOrNumber : () => 文字 | 数字

    if (typeof x === "string") {
>typeof x === "string" : 真假
>类型别名 :=> 真假
>typeof x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x : 文字 | 数字
>"string" : "string"

        const f = () => () => x.length;
>f : () => () => 数字
>() => () => x.length : () => () => 数字
>() => x.length : () => 数字
>x.length : 数字
>类型别名 :=> 数字
>x : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
    }
}
