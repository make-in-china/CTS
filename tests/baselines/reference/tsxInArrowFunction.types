=== tests/cases/conformance/jsx/tsxInArrowFunction.tsx ===
declare namespace JSX {
>JSX : 任意
>类型别名 :=> 任意

    interface Element { }
>Element : Element

    interface IntrinsicElements {
>IntrinsicElements : IntrinsicElements

        div: {
>div : { text?: 文字; }

            text?: string;
>text : 文字
>类型别名 :=> 文字
        }
    }
}


// didn't work
<div>{() => <div text="wat" />}</div>;
><div>{() => <div text="wat" />}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>() => <div text="wat" /> : () => JSX.Element
><div text="wat" /> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>text : 文字
>类型别名 :=> 文字
>div : 任意
>类型别名 :=> 任意

// didn't work
<div>{x => <div text="wat" />}</div>;
><div>{x => <div text="wat" />}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>x => <div text="wat" /> : (x: 任意) => JSX.Element
>x : 任意
>类型别名 :=> 任意
><div text="wat" /> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>text : 文字
>类型别名 :=> 文字
>div : 任意
>类型别名 :=> 任意

// worked
<div>{() => (<div text="wat" />)}</div>;
><div>{() => (<div text="wat" />)}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>() => (<div text="wat" />) : () => JSX.Element
>(<div text="wat" />) : JSX.Element
><div text="wat" /> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>text : 文字
>类型别名 :=> 文字
>div : 任意
>类型别名 :=> 任意

// worked (!)
<div>{() => <div text="wat"></div>}</div>;
><div>{() => <div text="wat"></div>}</div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>() => <div text="wat"></div> : () => JSX.Element
><div text="wat"></div> : JSX.Element
>div : 任意
>类型别名 :=> 任意
>text : 文字
>类型别名 :=> 文字
>div : 任意
>类型别名 :=> 任意
>div : 任意
>类型别名 :=> 任意

