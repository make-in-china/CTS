=== tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeEnumAndNumber.ts ===
enum E { a, b, c }
>E : E
>a : E.a
>b : E.b
>c : E.c

var a: E;
>a : E
>E : E

var b: number;
>b : 数字
>类型别名 :=> 数字

// operator <
var ra1 = a < b;
>ra1 : 真假
>类型别名 :=> 真假
>a < b : 真假
>类型别名 :=> 真假
>a : E
>b : 数字
>类型别名 :=> 数字

var ra2 = b < a;
>ra2 : 真假
>类型别名 :=> 真假
>b < a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>a : E

var ra3 = E.a < b;
>ra3 : 真假
>类型别名 :=> 真假
>E.a < b : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>b : 数字
>类型别名 :=> 数字

var ra4 = b < E.a;
>ra4 : 真假
>类型别名 :=> 真假
>b < E.a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>E.a : E.a
>E : 类为 E
>a : E.a

var ra5 = E.a < 0;
>ra5 : 真假
>类型别名 :=> 真假
>E.a < 0 : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>0 : 0

var ra6 = 0 < E.a;
>ra6 : 真假
>类型别名 :=> 真假
>0 < E.a : 真假
>类型别名 :=> 真假
>0 : 0
>E.a : E.a
>E : 类为 E
>a : E.a

// operator >
var rb1 = a > b;
>rb1 : 真假
>类型别名 :=> 真假
>a > b : 真假
>类型别名 :=> 真假
>a : E
>b : 数字
>类型别名 :=> 数字

var rb2 = b > a;
>rb2 : 真假
>类型别名 :=> 真假
>b > a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>a : E

var rb3 = E.a > b;
>rb3 : 真假
>类型别名 :=> 真假
>E.a > b : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>b : 数字
>类型别名 :=> 数字

var rb4 = b > E.a;
>rb4 : 真假
>类型别名 :=> 真假
>b > E.a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>E.a : E.a
>E : 类为 E
>a : E.a

var rb5 = E.a > 0;
>rb5 : 真假
>类型别名 :=> 真假
>E.a > 0 : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>0 : 0

var rb6 = 0 > E.a;
>rb6 : 真假
>类型别名 :=> 真假
>0 > E.a : 真假
>类型别名 :=> 真假
>0 : 0
>E.a : E.a
>E : 类为 E
>a : E.a

// operator <=
var rc1 = a <= b;
>rc1 : 真假
>类型别名 :=> 真假
>a <= b : 真假
>类型别名 :=> 真假
>a : E
>b : 数字
>类型别名 :=> 数字

var rc2 = b <= a;
>rc2 : 真假
>类型别名 :=> 真假
>b <= a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>a : E

var rc3 = E.a <= b;
>rc3 : 真假
>类型别名 :=> 真假
>E.a <= b : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>b : 数字
>类型别名 :=> 数字

var rc4 = b <= E.a;
>rc4 : 真假
>类型别名 :=> 真假
>b <= E.a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>E.a : E.a
>E : 类为 E
>a : E.a

var rc5 = E.a <= 0;
>rc5 : 真假
>类型别名 :=> 真假
>E.a <= 0 : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>0 : 0

var rc6 = 0 <= E.a;
>rc6 : 真假
>类型别名 :=> 真假
>0 <= E.a : 真假
>类型别名 :=> 真假
>0 : 0
>E.a : E.a
>E : 类为 E
>a : E.a

// operator >=
var rd1 = a >= b;
>rd1 : 真假
>类型别名 :=> 真假
>a >= b : 真假
>类型别名 :=> 真假
>a : E
>b : 数字
>类型别名 :=> 数字

var rd2 = b >= a;
>rd2 : 真假
>类型别名 :=> 真假
>b >= a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>a : E

var rd3 = E.a >= b;
>rd3 : 真假
>类型别名 :=> 真假
>E.a >= b : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>b : 数字
>类型别名 :=> 数字

var rd4 = b >= E.a;
>rd4 : 真假
>类型别名 :=> 真假
>b >= E.a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>E.a : E.a
>E : 类为 E
>a : E.a

var rd5 = E.a >= 0;
>rd5 : 真假
>类型别名 :=> 真假
>E.a >= 0 : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>0 : 0

var rd6 = 0 >= E.a;
>rd6 : 真假
>类型别名 :=> 真假
>0 >= E.a : 真假
>类型别名 :=> 真假
>0 : 0
>E.a : E.a
>E : 类为 E
>a : E.a

// operator ==
var re1 = a == b;
>re1 : 真假
>类型别名 :=> 真假
>a == b : 真假
>类型别名 :=> 真假
>a : E
>b : 数字
>类型别名 :=> 数字

var re2 = b == a;
>re2 : 真假
>类型别名 :=> 真假
>b == a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>a : E

var re3 = E.a == b;
>re3 : 真假
>类型别名 :=> 真假
>E.a == b : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>b : 数字
>类型别名 :=> 数字

var re4 = b == E.a;
>re4 : 真假
>类型别名 :=> 真假
>b == E.a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>E.a : E.a
>E : 类为 E
>a : E.a

var re5 = E.a == 0;
>re5 : 真假
>类型别名 :=> 真假
>E.a == 0 : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>0 : 0

var re6 = 0 == E.a;
>re6 : 真假
>类型别名 :=> 真假
>0 == E.a : 真假
>类型别名 :=> 真假
>0 : 0
>E.a : E.a
>E : 类为 E
>a : E.a

// operator !=
var rf1 = a != b;
>rf1 : 真假
>类型别名 :=> 真假
>a != b : 真假
>类型别名 :=> 真假
>a : E
>b : 数字
>类型别名 :=> 数字

var rf2 = b != a;
>rf2 : 真假
>类型别名 :=> 真假
>b != a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>a : E

var rf3 = E.a != b;
>rf3 : 真假
>类型别名 :=> 真假
>E.a != b : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>b : 数字
>类型别名 :=> 数字

var rf4 = b != E.a;
>rf4 : 真假
>类型别名 :=> 真假
>b != E.a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>E.a : E.a
>E : 类为 E
>a : E.a

var rf5 = E.a != 0;
>rf5 : 真假
>类型别名 :=> 真假
>E.a != 0 : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>0 : 0

var rf6 = 0 != E.a;
>rf6 : 真假
>类型别名 :=> 真假
>0 != E.a : 真假
>类型别名 :=> 真假
>0 : 0
>E.a : E.a
>E : 类为 E
>a : E.a

// operator ===
var rg1 = a === b;
>rg1 : 真假
>类型别名 :=> 真假
>a === b : 真假
>类型别名 :=> 真假
>a : E
>b : 数字
>类型别名 :=> 数字

var rg2 = b === a;
>rg2 : 真假
>类型别名 :=> 真假
>b === a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>a : E

var rg3 = E.a === b;
>rg3 : 真假
>类型别名 :=> 真假
>E.a === b : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>b : 数字
>类型别名 :=> 数字

var rg4 = b === E.a;
>rg4 : 真假
>类型别名 :=> 真假
>b === E.a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>E.a : E.a
>E : 类为 E
>a : E.a

var rg5 = E.a === 0;
>rg5 : 真假
>类型别名 :=> 真假
>E.a === 0 : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>0 : 0

var rg6 = 0 === E.a;
>rg6 : 真假
>类型别名 :=> 真假
>0 === E.a : 真假
>类型别名 :=> 真假
>0 : 0
>E.a : E.a
>E : 类为 E
>a : E.a

// operator !==
var rh1 = a !== b;
>rh1 : 真假
>类型别名 :=> 真假
>a !== b : 真假
>类型别名 :=> 真假
>a : E
>b : 数字
>类型别名 :=> 数字

var rh2 = b !== a;
>rh2 : 真假
>类型别名 :=> 真假
>b !== a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>a : E

var rh3 = E.a !== b;
>rh3 : 真假
>类型别名 :=> 真假
>E.a !== b : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>b : 数字
>类型别名 :=> 数字

var rh4 = b !== E.a;
>rh4 : 真假
>类型别名 :=> 真假
>b !== E.a : 真假
>类型别名 :=> 真假
>b : 数字
>类型别名 :=> 数字
>E.a : E.a
>E : 类为 E
>a : E.a

var rh5 = E.a !== 0;
>rh5 : 真假
>类型别名 :=> 真假
>E.a !== 0 : 真假
>类型别名 :=> 真假
>E.a : E.a
>E : 类为 E
>a : E.a
>0 : 0

var rh6 = 0 !== E.a;
>rh6 : 真假
>类型别名 :=> 真假
>0 !== E.a : 真假
>类型别名 :=> 真假
>0 : 0
>E.a : E.a
>E : 类为 E
>a : E.a

