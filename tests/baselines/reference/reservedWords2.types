=== tests/cases/compiler/reservedWords2.ts ===
import while = require("dfdf");
> : 任意
>类型别名 :=> 任意
>= require("dfdf") : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意
>require("dfdf") : 任意
>类型别名 :=> 任意
>require : 任意
>类型别名 :=> 任意
>"dfdf" : "dfdf"

import * as  while from "foo"
> : () => 任意
> : 任意
>类型别名 :=> 任意
>from : 任意
>类型别名 :=> 任意
>"foo" : "foo"

var typeof = 10;
>typeof : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
> : 任意
>类型别名 :=> 任意
>10 : 10

function throw() {}
> : () => 任意
>() {} : () => 无值

module void {}
>module : 任意
>类型别名 :=> 任意
>void {} : 未定
>类型别名 :=> 未定
>{} : {}

var {while, return} = { while: 1, return: 2 };
>while : 任意
>类型别名 :=> 任意
> : 数字
>类型别名 :=> 数字
>return : 任意
>类型别名 :=> 任意
> : 数字
>类型别名 :=> 数字
>{ while: 1, return: 2 } : { while: 数字; return: 数字; }
>while : 数字
>类型别名 :=> 数字
>1 : 1
>return : 数字
>类型别名 :=> 数字
>2 : 2

var {this, switch: { continue} } = { this: 1, switch: { continue: 2 }};
>this : 任意
>类型别名 :=> 任意
> : 数字
>类型别名 :=> 数字
>switch : 任意
>类型别名 :=> 任意
>continue : 任意
>类型别名 :=> 任意
> : 数字
>类型别名 :=> 数字
>{ this: 1, switch: { continue: 2 }} : { this: 数字; switch: { continue: 数字; }; }
>this : 数字
>类型别名 :=> 数字
>1 : 1
>switch : { continue: 数字; }
>{ continue: 2 } : { continue: 数字; }
>continue : 数字
>类型别名 :=> 数字
>2 : 2

var [debugger, if] = [1, 2];
> : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意
>[1, 2] : 数字[]
>1 : 1
>2 : 2

enum void {}
> : (Missing)
>void {} : 未定
>类型别名 :=> 未定
>{} : {}



