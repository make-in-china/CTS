=== tests/cases/conformance/types/contextualTypes/logicalAnd/contextuallyTypeLogicalAnd03.ts ===
let x: (a: string) => string;
>x : (a: string) => string
>a : string
>类型别名 :=> 文字

let y = true;
>y : boolean
>类型别名 :=> 真假
>true : true
>类型别名 :=> 为真

x = (a => a) && (b => b);
>x = (a => a) && (b => b) : (b: string) => string
>x : (a: string) => string
>(a => a) && (b => b) : (b: string) => string
>(a => a) : (a: any) => any
>a => a : (a: any) => any
>a : any
>类型别名 :=> 任意
>a : any
>类型别名 :=> 任意
>(b => b) : (b: string) => string
>b => b : (b: string) => string
>b : string
>类型别名 :=> 文字
>b : string
>类型别名 :=> 文字

