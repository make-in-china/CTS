=== tests/cases/conformance/expressions/unaryOperators/typeofOperator/typeofOperatorWithAnyOtherType.ts ===
// typeof  operator on any type

var ANY: any;
>ANY : any
>类型别名 :=> 任意

var ANY1;
>ANY1 : any
>类型别名 :=> 任意

var ANY2: any[] = ["", ""];
>ANY2 : any[]
>["", ""] : string[]
>"" : ""
>"" : ""

var obj: () => {}
>obj : () => {}

var obj1 = { x: "a", y: () => { }};
>obj1 : { x: string; y: () => void; }
>{ x: "a", y: () => { }} : { x: string; y: () => void; }
>x : string
>类型别名 :=> 文字
>"a" : "a"
>y : () => void
>() => { } : () => void

function foo(): any {
>foo : () => any

    var a;
>a : any
>类型别名 :=> 任意

    return a;
>a : any
>类型别名 :=> 任意
}
class A {
>A : A

    public a: any;
>a : any
>类型别名 :=> 任意

    static foo() {
>foo : () => any

        var a;
>a : any
>类型别名 :=> 任意

        return a;
>a : any
>类型别名 :=> 任意
    }
}
module M {
>M : typeof M

    export var n: any;
>n : any
>类型别名 :=> 任意
}
var objA = new A();
>objA : A
>new A() : A
>A : typeof A

// any type var
var ResultIsString1 = typeof ANY1;
>ResultIsString1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof ANY1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>ANY1 : any
>类型别名 :=> 任意

var ResultIsString2 = typeof ANY2;
>ResultIsString2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof ANY2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>ANY2 : any[]

var ResultIsString3 = typeof A;
>ResultIsString3 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof A : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>A : typeof A

var ResultIsString4 = typeof M;
>ResultIsString4 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof M : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>M : typeof M

var ResultIsString5 = typeof obj;
>ResultIsString5 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof obj : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>obj : () => {}

var ResultIsString6 = typeof obj1;
>ResultIsString6 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof obj1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>obj1 : { x: string; y: () => void; }

// any type literal
var ResultIsString7 = typeof undefined;
>ResultIsString7 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof undefined : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>undefined : undefined
>类型别名 :=> 未定

var ResultIsString8 = typeof null;
>ResultIsString8 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof null : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>null : null
>类型别名 :=> 空值

var ResultIsString9 = typeof {};
>ResultIsString9 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof {} : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>{} : {}

// any type expressions
var ResultIsString10 = typeof ANY2[0];
>ResultIsString10 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof ANY2[0] : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>ANY2[0] : any
>类型别名 :=> 任意
>ANY2 : any[]
>0 : 0

var ResultIsString11 = typeof objA.a;
>ResultIsString11 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof objA.a : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>objA.a : any
>类型别名 :=> 任意
>objA : A
>a : any
>类型别名 :=> 任意

var ResultIsString12 = typeof obj1.x;
>ResultIsString12 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof obj1.x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>obj1.x : string
>类型别名 :=> 文字
>obj1 : { x: string; y: () => void; }
>x : string
>类型别名 :=> 文字

var ResultIsString13 = typeof M.n;
>ResultIsString13 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof M.n : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>M.n : any
>类型别名 :=> 任意
>M : typeof M
>n : any
>类型别名 :=> 任意

var ResultIsString14 = typeof foo();
>ResultIsString14 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof foo() : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>foo() : any
>类型别名 :=> 任意
>foo : () => any

var ResultIsString15 = typeof A.foo();
>ResultIsString15 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof A.foo() : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>A.foo() : any
>类型别名 :=> 任意
>A.foo : () => any
>A : typeof A
>foo : () => any

var ResultIsString16 = typeof (ANY + ANY1);
>ResultIsString16 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof (ANY + ANY1) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>(ANY + ANY1) : any
>类型别名 :=> 任意
>ANY + ANY1 : any
>类型别名 :=> 任意
>ANY : any
>类型别名 :=> 任意
>ANY1 : any
>类型别名 :=> 任意

var ResultIsString17 = typeof (null + undefined);
>ResultIsString17 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof (null + undefined) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>(null + undefined) : any
>类型别名 :=> 任意
>null + undefined : any
>类型别名 :=> 任意
>null : null
>类型别名 :=> 空值
>undefined : undefined
>类型别名 :=> 未定

var ResultIsString18 = typeof (null + null);
>ResultIsString18 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof (null + null) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>(null + null) : any
>类型别名 :=> 任意
>null + null : any
>类型别名 :=> 任意
>null : null
>类型别名 :=> 空值
>null : null
>类型别名 :=> 空值

var ResultIsString19 = typeof (undefined + undefined);
>ResultIsString19 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof (undefined + undefined) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>(undefined + undefined) : any
>类型别名 :=> 任意
>undefined + undefined : any
>类型别名 :=> 任意
>undefined : undefined
>类型别名 :=> 未定
>undefined : undefined
>类型别名 :=> 未定

// multiple typeof  operators
var ResultIsString20 = typeof typeof ANY;
>ResultIsString20 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof typeof ANY : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof ANY : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>ANY : any
>类型别名 :=> 任意

var ResultIsString21 = typeof typeof typeof (ANY + ANY1);
>ResultIsString21 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof typeof typeof (ANY + ANY1) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof typeof (ANY + ANY1) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>typeof (ANY + ANY1) : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>(ANY + ANY1) : any
>类型别名 :=> 任意
>ANY + ANY1 : any
>类型别名 :=> 任意
>ANY : any
>类型别名 :=> 任意
>ANY1 : any
>类型别名 :=> 任意

// miss assignment operators
typeof ANY;
>typeof ANY : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>ANY : any
>类型别名 :=> 任意

typeof ANY1;
>typeof ANY1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>ANY1 : any
>类型别名 :=> 任意

typeof ANY2[0];
>typeof ANY2[0] : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>ANY2[0] : any
>类型别名 :=> 任意
>ANY2 : any[]
>0 : 0

typeof ANY, ANY1;
>typeof ANY, ANY1 : any
>类型别名 :=> 任意
>typeof ANY : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>ANY : any
>类型别名 :=> 任意
>ANY1 : any
>类型别名 :=> 任意

typeof obj1;
>typeof obj1 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>obj1 : { x: string; y: () => void; }

typeof obj1.x;
>typeof obj1.x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>obj1.x : string
>类型别名 :=> 文字
>obj1 : { x: string; y: () => void; }
>x : string
>类型别名 :=> 文字

typeof objA.a;
>typeof objA.a : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>objA.a : any
>类型别名 :=> 任意
>objA : A
>a : any
>类型别名 :=> 任意

typeof M.n;
>typeof M.n : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>M.n : any
>类型别名 :=> 任意
>M : typeof M
>n : any
>类型别名 :=> 任意

// use typeof in type query
var z: any;
>z : any
>类型别名 :=> 任意

var x: any[];
>x : any[]

var r: () => any;
>r : () => any

z: typeof ANY;
>z : any
>类型别名 :=> 任意
>typeof ANY : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>ANY : any
>类型别名 :=> 任意

x: typeof ANY2;
>x : any
>类型别名 :=> 任意
>typeof ANY2 : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>ANY2 : any[]

r: typeof foo;
>r : any
>类型别名 :=> 任意
>typeof foo : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>foo : () => any

z: typeof objA.a;
>z : any
>类型别名 :=> 任意
>typeof objA.a : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>objA.a : any
>类型别名 :=> 任意
>objA : A
>a : any
>类型别名 :=> 任意

z: typeof A.foo;
>z : any
>类型别名 :=> 任意
>typeof A.foo : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>A.foo : () => any
>A : typeof A
>foo : () => any

z: typeof M.n;
>z : any
>类型别名 :=> 任意
>typeof M.n : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>M.n : any
>类型别名 :=> 任意
>M : typeof M
>n : any
>类型别名 :=> 任意

z: typeof obj1.x;
>z : any
>类型别名 :=> 任意
>typeof obj1.x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>obj1.x : string
>类型别名 :=> 文字
>obj1 : { x: string; y: () => void; }
>x : string
>类型别名 :=> 文字

