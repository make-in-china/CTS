=== tests/cases/compiler/computedPropertiesInDestructuring1.ts ===
// destructuring in variable declarations
let foo = "bar";
>foo : string
>类型别名 :=> 文字
>"bar" : "bar"

let {[foo]: bar} = {bar: "bar"};
>foo : string
>类型别名 :=> 文字
>bar : any
>类型别名 :=> 任意
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

let {["bar"]: bar2} = {bar: "bar"};
>"bar" : "bar"
>bar2 : string
>类型别名 :=> 文字
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

let foo2 = () => "bar";
>foo2 : () => string
>() => "bar" : () => string
>"bar" : "bar"

let {[foo2()]: bar3} = {bar: "bar"};
>foo2() : string
>类型别名 :=> 文字
>foo2 : () => string
>bar3 : any
>类型别名 :=> 任意
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

let [{[foo]: bar4}] = [{bar: "bar"}];
>foo : string
>类型别名 :=> 文字
>bar4 : any
>类型别名 :=> 任意
>[{bar: "bar"}] : [{ bar: string; }]
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

let [{[foo2()]: bar5}] = [{bar: "bar"}];
>foo2() : string
>类型别名 :=> 文字
>foo2 : () => string
>bar5 : any
>类型别名 :=> 任意
>[{bar: "bar"}] : [{ bar: string; }]
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

function f1({["bar"]: x}: { bar: number }) {}
>f1 : ({ ["bar"]: x }: { bar: number; }) => void
>"bar" : "bar"
>x : number
>类型别名 :=> 数字
>bar : number
>类型别名 :=> 数字

function f2({[foo]: x}: { bar: number }) {}
>f2 : ({ [foo]: x }: { bar: number; }) => void
>foo : string
>类型别名 :=> 文字
>x : any
>类型别名 :=> 任意
>bar : number
>类型别名 :=> 数字

function f3({[foo2()]: x}: { bar: number }) {}
>f3 : ({ [foo2()]: x }: { bar: number; }) => void
>foo2() : string
>类型别名 :=> 文字
>foo2 : () => string
>x : any
>类型别名 :=> 任意
>bar : number
>类型别名 :=> 数字

function f4([{[foo]: x}]: [{ bar: number }]) {}
>f4 : ([{ [foo]: x }]: [{ bar: number; }]) => void
>foo : string
>类型别名 :=> 文字
>x : any
>类型别名 :=> 任意
>bar : number
>类型别名 :=> 数字

function f5([{[foo2()]: x}]: [{ bar: number }]) {}
>f5 : ([{ [foo2()]: x }]: [{ bar: number; }]) => void
>foo2() : string
>类型别名 :=> 文字
>foo2 : () => string
>x : any
>类型别名 :=> 任意
>bar : number
>类型别名 :=> 数字

// report errors on type errors in computed properties used in destructuring
let [{[foo()]: bar6}] = [{bar: "bar"}];
>foo() : any
>类型别名 :=> 任意
>foo : string
>类型别名 :=> 文字
>bar6 : any
>类型别名 :=> 任意
>[{bar: "bar"}] : [{ bar: string; }]
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

let [{[foo.toExponential()]: bar7}] = [{bar: "bar"}];
>foo.toExponential() : any
>类型别名 :=> 任意
>foo.toExponential : any
>类型别名 :=> 任意
>foo : string
>类型别名 :=> 文字
>toExponential : any
>类型别名 :=> 任意
>bar7 : any
>类型别名 :=> 任意
>[{bar: "bar"}] : [{ bar: string; }]
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

// destructuring assignment
({[foo]: bar} = {bar: "bar"});
>({[foo]: bar} = {bar: "bar"}) : { bar: string; }
>{[foo]: bar} = {bar: "bar"} : { bar: string; }
>{[foo]: bar} : { [x: string]: any; }
>foo : string
>类型别名 :=> 文字
>bar : any
>类型别名 :=> 任意
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

({["bar"]: bar2} = {bar: "bar"});
>({["bar"]: bar2} = {bar: "bar"}) : { bar: string; }
>{["bar"]: bar2} = {bar: "bar"} : { bar: string; }
>{["bar"]: bar2} : { ["bar"]: string; }
>"bar" : "bar"
>bar2 : string
>类型别名 :=> 文字
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

({[foo2()]: bar3} = {bar: "bar"});
>({[foo2()]: bar3} = {bar: "bar"}) : { bar: string; }
>{[foo2()]: bar3} = {bar: "bar"} : { bar: string; }
>{[foo2()]: bar3} : { [x: string]: any; }
>foo2() : string
>类型别名 :=> 文字
>foo2 : () => string
>bar3 : any
>类型别名 :=> 任意
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

[{[foo]: bar4}] = [{bar: "bar"}];
>[{[foo]: bar4}] = [{bar: "bar"}] : [{ bar: string; }]
>[{[foo]: bar4}] : [{ [x: string]: any; }]
>{[foo]: bar4} : { [x: string]: any; }
>foo : string
>类型别名 :=> 文字
>bar4 : any
>类型别名 :=> 任意
>[{bar: "bar"}] : [{ bar: string; }]
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

[{[foo2()]: bar5}] = [{bar: "bar"}];
>[{[foo2()]: bar5}] = [{bar: "bar"}] : [{ bar: string; }]
>[{[foo2()]: bar5}] : [{ [x: string]: any; }]
>{[foo2()]: bar5} : { [x: string]: any; }
>foo2() : string
>类型别名 :=> 文字
>foo2 : () => string
>bar5 : any
>类型别名 :=> 任意
>[{bar: "bar"}] : [{ bar: string; }]
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

[{[foo()]: bar4}] = [{bar: "bar"}];
>[{[foo()]: bar4}] = [{bar: "bar"}] : [{ bar: string; }]
>[{[foo()]: bar4}] : [{ [x: number]: any; }]
>{[foo()]: bar4} : { [x: number]: any; }
>foo() : any
>类型别名 :=> 任意
>foo : string
>类型别名 :=> 文字
>bar4 : any
>类型别名 :=> 任意
>[{bar: "bar"}] : [{ bar: string; }]
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"

[{[(1 + {})]: bar4}] = [{bar: "bar"}];
>[{[(1 + {})]: bar4}] = [{bar: "bar"}] : [{ bar: string; }]
>[{[(1 + {})]: bar4}] : [{ [x: number]: any; }]
>{[(1 + {})]: bar4} : { [x: number]: any; }
>(1 + {}) : any
>类型别名 :=> 任意
>1 + {} : any
>类型别名 :=> 任意
>1 : 1
>{} : {}
>bar4 : any
>类型别名 :=> 任意
>[{bar: "bar"}] : [{ bar: string; }]
>{bar: "bar"} : { bar: string; }
>bar : string
>类型别名 :=> 文字
>"bar" : "bar"



