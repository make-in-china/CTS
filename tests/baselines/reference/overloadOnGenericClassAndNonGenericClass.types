=== tests/cases/compiler/overloadOnGenericClassAndNonGenericClass.ts ===
class A { a; }
>A : A
>a : 任意
>类型别名 :=> 任意

class B { b; }
>B : B
>b : 任意
>类型别名 :=> 任意

class C { c; }
>C : C
>c : 任意
>类型别名 :=> 任意

class X<T> { x: T; }
>X : X<T>
>T : T
>x : T
>T : T

class X1 { x: string; }
>X1 : X1
>x : 文字
>类型别名 :=> 文字

class X2 { x: string; }
>X2 : X2
>x : 文字
>类型别名 :=> 文字

function f(a: X1): A;
>f : { (a: X1): A; <T>(a: X<T>): B; }
>a : X1
>X1 : X1
>A : A

function f<T>(a: X<T>): B;
>f : { (a: X1): A; <T>(a: X<T>): B; }
>T : T
>a : X<T>
>X : X<T>
>T : T
>B : B

function f(a): any {
>f : { (a: X1): A; <T>(a: X<T>): B; }
>a : 任意
>类型别名 :=> 任意
}

var xs: X<string>;
>xs : X<文字>
>X : X<T>

var t3 = f(xs);
>t3 : A
>f(xs) : A
>f : { (a: X1): A; <T>(a: X<T>): B; }
>xs : X<文字>

var t3: A; // should not error
>t3 : A
>A : A

