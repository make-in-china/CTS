=== tests/cases/compiler/json.stringify.ts ===
var value = null;
>value : 空值
>类型别名 :=> 空值
>null : 空值
>类型别名 :=> 空值

JSON.stringify(value, undefined, 2);
>JSON.stringify(value, undefined, 2) : 文字
>类型别名 :=> 文字
>JSON.stringify : { (value: 任意, replacer?: ((key: 文字, value: 任意) => 任意) | 未定, space?: 文字 | 数字 | 未定): 文字; (value: 任意, replacer?: (文字 | 数字)[] | 空值 | 未定, space?: 文字 | 数字 | 未定): 文字; }
>JSON : JSON
>stringify : { (value: 任意, replacer?: ((key: 文字, value: 任意) => 任意) | 未定, space?: 文字 | 数字 | 未定): 文字; (value: 任意, replacer?: (文字 | 数字)[] | 空值 | 未定, space?: 文字 | 数字 | 未定): 文字; }
>value : 空值
>类型别名 :=> 空值
>undefined : 未定
>类型别名 :=> 未定
>2 : 2

JSON.stringify(value, null, 2);
>JSON.stringify(value, null, 2) : 文字
>类型别名 :=> 文字
>JSON.stringify : { (value: 任意, replacer?: ((key: 文字, value: 任意) => 任意) | 未定, space?: 文字 | 数字 | 未定): 文字; (value: 任意, replacer?: (文字 | 数字)[] | 空值 | 未定, space?: 文字 | 数字 | 未定): 文字; }
>JSON : JSON
>stringify : { (value: 任意, replacer?: ((key: 文字, value: 任意) => 任意) | 未定, space?: 文字 | 数字 | 未定): 文字; (value: 任意, replacer?: (文字 | 数字)[] | 空值 | 未定, space?: 文字 | 数字 | 未定): 文字; }
>value : 空值
>类型别名 :=> 空值
>null : 空值
>类型别名 :=> 空值
>2 : 2

JSON.stringify(value, ["a", 1], 2);
>JSON.stringify(value, ["a", 1], 2) : 文字
>类型别名 :=> 文字
>JSON.stringify : { (value: 任意, replacer?: ((key: 文字, value: 任意) => 任意) | 未定, space?: 文字 | 数字 | 未定): 文字; (value: 任意, replacer?: (文字 | 数字)[] | 空值 | 未定, space?: 文字 | 数字 | 未定): 文字; }
>JSON : JSON
>stringify : { (value: 任意, replacer?: ((key: 文字, value: 任意) => 任意) | 未定, space?: 文字 | 数字 | 未定): 文字; (value: 任意, replacer?: (文字 | 数字)[] | 空值 | 未定, space?: 文字 | 数字 | 未定): 文字; }
>value : 空值
>类型别名 :=> 空值
>["a", 1] : (文字 | 数字)[]
>"a" : "a"
>1 : 1
>2 : 2

JSON.stringify(value, (k) => undefined, 2);
>JSON.stringify(value, (k) => undefined, 2) : 文字
>类型别名 :=> 文字
>JSON.stringify : { (value: 任意, replacer?: ((key: 文字, value: 任意) => 任意) | 未定, space?: 文字 | 数字 | 未定): 文字; (value: 任意, replacer?: (文字 | 数字)[] | 空值 | 未定, space?: 文字 | 数字 | 未定): 文字; }
>JSON : JSON
>stringify : { (value: 任意, replacer?: ((key: 文字, value: 任意) => 任意) | 未定, space?: 文字 | 数字 | 未定): 文字; (value: 任意, replacer?: (文字 | 数字)[] | 空值 | 未定, space?: 文字 | 数字 | 未定): 文字; }
>value : 空值
>类型别名 :=> 空值
>(k) => undefined : (k: 文字) => 未定
>k : 文字
>类型别名 :=> 文字
>undefined : 未定
>类型别名 :=> 未定
>2 : 2

JSON.stringify(value, undefined, 2);
>JSON.stringify(value, undefined, 2) : 文字
>类型别名 :=> 文字
>JSON.stringify : { (value: 任意, replacer?: ((key: 文字, value: 任意) => 任意) | 未定, space?: 文字 | 数字 | 未定): 文字; (value: 任意, replacer?: (文字 | 数字)[] | 空值 | 未定, space?: 文字 | 数字 | 未定): 文字; }
>JSON : JSON
>stringify : { (value: 任意, replacer?: ((key: 文字, value: 任意) => 任意) | 未定, space?: 文字 | 数字 | 未定): 文字; (value: 任意, replacer?: (文字 | 数字)[] | 空值 | 未定, space?: 文字 | 数字 | 未定): 文字; }
>value : 空值
>类型别名 :=> 空值
>undefined : 未定
>类型别名 :=> 未定
>2 : 2

