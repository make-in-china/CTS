=== tests/cases/conformance/expressions/typeGuards/typeGuardsInForStatement.ts ===
let cond: boolean;
>cond : 真假
>类型别名 :=> 真假

function a(x: string | number) {
>a : (x: 文字 | 数字) => 无值
>x : 文字 | 数字

    for (x = undefined; typeof x !== "number"; x = undefined) {
>x = undefined : 未定
>类型别名 :=> 未定
>x : 文字 | 数字
>undefined : 未定
>类型别名 :=> 未定
>typeof x !== "number" : 真假
>类型别名 :=> 真假
>typeof x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x : 文字 | 数字
>"number" : "number"
>x = undefined : 未定
>类型别名 :=> 未定
>x : 文字 | 数字
>undefined : 未定
>类型别名 :=> 未定

        x; // string
>x : 文字
>类型别名 :=> 文字
    }
    x; // number
>x : 数字
>类型别名 :=> 数字
}
function b(x: string | number) {
>b : (x: 文字 | 数字) => 无值
>x : 文字 | 数字

    for (x = undefined; typeof x !== "number"; x = undefined) {
>x = undefined : 未定
>类型别名 :=> 未定
>x : 文字 | 数字
>undefined : 未定
>类型别名 :=> 未定
>typeof x !== "number" : 真假
>类型别名 :=> 真假
>typeof x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x : 文字 | 数字
>"number" : "number"
>x = undefined : 未定
>类型别名 :=> 未定
>x : 文字 | 数字
>undefined : 未定
>类型别名 :=> 未定

        x; // string
>x : 文字
>类型别名 :=> 文字

        if (cond) continue;
>cond : 真假
>类型别名 :=> 真假
    }
    x; // number
>x : 数字
>类型别名 :=> 数字
}
function c(x: string | number) {
>c : (x: 文字 | 数字) => 无值
>x : 文字 | 数字

    for (x = undefined; typeof x !== "number"; x = undefined) {
>x = undefined : 未定
>类型别名 :=> 未定
>x : 文字 | 数字
>undefined : 未定
>类型别名 :=> 未定
>typeof x !== "number" : 真假
>类型别名 :=> 真假
>typeof x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x : 文字 | 数字
>"number" : "number"
>x = undefined : 未定
>类型别名 :=> 未定
>x : 文字 | 数字
>undefined : 未定
>类型别名 :=> 未定

        x; // string
>x : 文字
>类型别名 :=> 文字

        if (cond) break;
>cond : 真假
>类型别名 :=> 真假
    }
    x; // string | number
>x : 文字 | 数字
}

