=== tests/cases/compiler/specializedSignatureAsCallbackParameter1.ts ===
function x3(a: number, cb: (x: number) => number);
>x3 : { (a: number, cb: (x: number) => number): any; (a: string, cb: (x: number) => number): any; }
>a : number
>类型别名 :=> 数字
>cb : (x: number) => number
>x : number
>类型别名 :=> 数字

function x3(a: string, cb: (x: number) => number);
>x3 : { (a: number, cb: (x: number) => number): any; (a: string, cb: (x: number) => number): any; }
>a : string
>类型别名 :=> 文字
>cb : (x: number) => number
>x : number
>类型别名 :=> 数字

function x3(a: any, cb: (x: number) => number) {
>x3 : { (a: number, cb: (x: number) => number): any; (a: string, cb: (x: number) => number): any; }
>a : any
>类型别名 :=> 任意
>cb : (x: number) => number
>x : number
>类型别名 :=> 数字

   cb(a);
>cb(a) : number
>类型别名 :=> 数字
>cb : (x: number) => number
>a : any
>类型别名 :=> 任意
}
// both are errors
x3(1, (x: string) => 1); 
>x3(1, (x: string) => 1) : any
>类型别名 :=> 任意
>x3 : { (a: number, cb: (x: number) => number): any; (a: string, cb: (x: number) => number): any; }
>1 : 1
>(x: string) => 1 : (x: string) => number
>x : string
>类型别名 :=> 文字
>1 : 1

x3(1, (x: 'hm') => 1); 
>x3(1, (x: 'hm') => 1) : any
>类型别名 :=> 任意
>x3 : { (a: number, cb: (x: number) => number): any; (a: string, cb: (x: number) => number): any; }
>1 : 1
>(x: 'hm') => 1 : (x: "hm") => number
>x : "hm"
>1 : 1

