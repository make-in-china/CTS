=== tests/cases/compiler/inferenceFromParameterlessLambda.ts ===
function foo<T>(o: Take<T>, i: Make<T>) { }
>foo : <T>(o: Take<T>, i: Make<T>) => 无值
>T : T
>o : Take<T>
>Take : Take<T>
>T : T
>i : Make<T>
>Make : Make<T>
>T : T

interface Make<T> {
>Make : Make<T>
>T : T

    (): T;
>T : T
}
interface Take<T> {
>Take : Take<T>
>T : T

    (n: T): void;
>n : T
>T : T
}
// Infer string from second argument because it isn't context sensitive
foo(n => n.length, () => 'hi');
>foo(n => n.length, () => 'hi') : 无值
>类型别名 :=> 无值
>foo : <T>(o: Take<T>, i: Make<T>) => 无值
>n => n.length : (n: 文字) => 数字
>n : 文字
>类型别名 :=> 文字
>n.length : 数字
>类型别名 :=> 数字
>n : 文字
>类型别名 :=> 文字
>length : 数字
>类型别名 :=> 数字
>() => 'hi' : () => 文字
>'hi' : "hi"

