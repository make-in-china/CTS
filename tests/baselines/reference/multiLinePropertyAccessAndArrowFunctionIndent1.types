=== tests/cases/compiler/multiLinePropertyAccessAndArrowFunctionIndent1.ts ===
return this.edit(role)
>this.edit(role)    .then((role: Role) =>        this.roleService.add(role)            .then((data: ng.IHttpPromiseCallbackArg<Role>) => data.data)) : any
>类型别名 :=> 任意
>this.edit(role)    .then : any
>类型别名 :=> 任意
>this.edit(role) : any
>类型别名 :=> 任意
>this.edit : any
>类型别名 :=> 任意
>this : any
>类型别名 :=> 任意
>edit : any
>类型别名 :=> 任意
>role : any
>类型别名 :=> 任意

    .then((role: Role) =>
>then : any
>类型别名 :=> 任意
>(role: Role) =>        this.roleService.add(role)            .then((data: ng.IHttpPromiseCallbackArg<Role>) => data.data) : (role: any) => any
>role : any
>类型别名 :=> 任意
>Role : No type information available!

        this.roleService.add(role)
>this.roleService.add(role)            .then((data: ng.IHttpPromiseCallbackArg<Role>) => data.data) : any
>类型别名 :=> 任意
>this.roleService.add(role)            .then : any
>类型别名 :=> 任意
>this.roleService.add(role) : any
>类型别名 :=> 任意
>this.roleService.add : any
>类型别名 :=> 任意
>this.roleService : any
>类型别名 :=> 任意
>this : any
>类型别名 :=> 任意
>roleService : any
>类型别名 :=> 任意
>add : any
>类型别名 :=> 任意
>role : any
>类型别名 :=> 任意

            .then((data: ng.IHttpPromiseCallbackArg<Role>) => data.data));
>then : any
>类型别名 :=> 任意
>(data: ng.IHttpPromiseCallbackArg<Role>) => data.data : (data: any) => any
>data : any
>类型别名 :=> 任意
>ng : any
>类型别名 :=> 任意
>IHttpPromiseCallbackArg : No type information available!
>Role : No type information available!
>data.data : any
>类型别名 :=> 任意
>data : any
>类型别名 :=> 任意
>data : any
>类型别名 :=> 任意

