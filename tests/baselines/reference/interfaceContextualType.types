=== tests/cases/compiler/interfaceContextualType.ts ===
export interface IOptions {
>IOptions : IOptions

    italic?: boolean;
>italic : boolean
>类型别名 :=> 真假

    bold?: boolean;
>bold : boolean
>类型别名 :=> 真假
}
export interface IMap {
>IMap : IMap

    [s: string]: IOptions;
>s : string
>类型别名 :=> 文字
>IOptions : IOptions
}

class Bug {
>Bug : Bug

    public values: IMap;
>values : IMap
>IMap : IMap

    ok() {
>ok : () => void

        this.values = {};
>this.values = {} : {}
>this.values : IMap
>this : this
>values : IMap
>{} : {}

        this.values['comments'] = { italic: true };
>this.values['comments'] = { italic: true } : { italic: true; }
>this.values['comments'] : IOptions
>this.values : IMap
>this : this
>values : IMap
>'comments' : "comments"
>{ italic: true } : { italic: true; }
>italic : boolean
>类型别名 :=> 真假
>true : true
>类型别名 :=> 为真
    }
    shouldBeOK() {
>shouldBeOK : () => void

        this.values = {
>this.values = {            comments: { italic: true }        } : { comments: { italic: true; }; }
>this.values : IMap
>this : this
>values : IMap
>{            comments: { italic: true }        } : { comments: { italic: true; }; }

            comments: { italic: true }
>comments : { italic: true; }
>{ italic: true } : { italic: true; }
>italic : boolean
>类型别名 :=> 真假
>true : true
>类型别名 :=> 为真

        };
    }
}

