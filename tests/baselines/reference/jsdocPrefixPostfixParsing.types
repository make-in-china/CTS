=== tests/cases/conformance/jsdoc/prefixPostfix.js ===
/**
 * @param {number![]} x - number[]
 * @param {!number[]} y - number[]
 * @param {(number[])!} z - number[]
 * @param {number?[]} a - (number | null)[]
 * @param {?number[]} b - number[] | null
 * @param {(number[])?} c - number[] | null
 * @param {?...number} d - number[] | null
 * @param {...?number} e - (number | null)[]
 * @param {...number?} f - number[] | null
 * @param {...number!?} g - number[] | null
 * @param {...number?!} h - number[] | null
 * @param {...number[]} i - number[][]
 * @param {...number![]?} j - number[][] | null
 * @param {...number?[]!} k - (number[] | null)[]
 */
function f(x, y, z, a, b, c, d, e, f, g, h, i, j, k) {
>f : (x: 数字[], y: 数字[], z: 数字[], a: (数字 | 空值)[], b: 数字[] | 空值, c: 数字[] | 空值, d: 数字[] | 空值, e: (数字 | 空值)[], f: 数字[] | 空值, g: 数字[] | 空值, h: 数字[] | 空值, i: 数字[][], j: 数字[][] | 空值, k: (数字[] | 空值)[]) => 无值
>x : 数字[]
>y : 数字[]
>z : 数字[]
>a : (数字 | 空值)[]
>b : 数字[] | 空值
>c : 数字[] | 空值
>d : 数字[] | 空值
>e : (数字 | 空值)[]
>f : 数字[] | 空值
>g : 数字[] | 空值
>h : 数字[] | 空值
>i : 数字[][]
>j : 数字[][] | 空值
>k : (数字[] | 空值)[]
}

