=== tests/cases/compiler/newExpressionWithCast.ts ===
function Test() { }
>Test : () => 无值

// valid but error with noImplicitAny
var test = new Test();
>test : 任意
>类型别名 :=> 任意
>new Test() : 任意
>类型别名 :=> 任意
>Test : () => 无值

function Test2() { }
>Test2 : () => 无值

// parse error
var test2 = new <any>Test2();
>test2 : 真假
>类型别名 :=> 真假
>new <any>Test2() : 真假
>类型别名 :=> 真假
>new <any : 真假
>类型别名 :=> 真假
>new : 任意
>类型别名 :=> 任意
> : 任意
>类型别名 :=> 任意
>any : 任意
>类型别名 :=> 任意
>Test2() : 无值
>类型别名 :=> 无值
>Test2 : () => 无值

function Test3() { }
>Test3 : () => 无值

// valid with noImplicitAny
var test3 = new (<any>Test3)();
>test3 : 任意
>类型别名 :=> 任意
>new (<any>Test3)() : 任意
>类型别名 :=> 任意
>(<any>Test3) : 任意
>类型别名 :=> 任意
><any>Test3 : 任意
>类型别名 :=> 任意
>Test3 : () => 无值


