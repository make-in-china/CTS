=== tests/cases/compiler/f1.ts ===
export class A {}
>A : A

=== tests/cases/compiler/f2.ts ===
export class B {
>B : B

    n: number;
>n : 数字
>类型别名 :=> 数字
}

=== tests/cases/compiler/f3.ts ===
import {A} from "./f1";
>A : 类为 A

import {B} from "./f2";
>B : 类为 B

A.prototype.foo = function () { return undefined; }
>A.prototype.foo = function () { return undefined; } : () => 任意
>A.prototype.foo : () => B
>A.prototype : A
>A : 类为 A
>prototype : A
>foo : () => B
>function () { return undefined; } : () => 任意
>undefined : 未定
>类型别名 :=> 未定

declare module "./f1" {
    interface A {
>A : A

        foo(): B;
>foo : () => B
>B : B
    }
}

=== tests/cases/compiler/f4.ts ===
import {A} from "./f1";
>A : 类为 A

import "./f3";

let a: A;
>a : A
>A : A

let b = a.foo().n;
>b : 数字
>类型别名 :=> 数字
>a.foo().n : 数字
>类型别名 :=> 数字
>a.foo() : B
>a.foo : () => B
>a : A
>foo : () => B
>n : 数字
>类型别名 :=> 数字

