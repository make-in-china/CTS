=== tests/cases/compiler/collisionArgumentsArrowFunctions.ts ===
var f1 = (i: number, ...arguments) => { //arguments is error
>f1 : (i: 数字, ...arguments: 任意[]) => 无值
>(i: number, ...arguments) => { //arguments is error    var arguments: any[]; // no error} : (i: 数字, ...arguments: 任意[]) => 无值
>i : 数字
>类型别名 :=> 数字
>arguments : 任意[]

    var arguments: any[]; // no error
>arguments : 任意[]
}
var f12 = (arguments: number, ...rest) => { //arguments is error
>f12 : (arguments: 数字, ...rest: 任意[]) => 无值
>(arguments: number, ...rest) => { //arguments is error    var arguments = 10; // no error} : (arguments: 数字, ...rest: 任意[]) => 无值
>arguments : 数字
>类型别名 :=> 数字
>rest : 任意[]

    var arguments = 10; // no error
>arguments : 数字
>类型别名 :=> 数字
>10 : 10
}
var f1NoError = (arguments: number) => { // no error
>f1NoError : (arguments: 数字) => 无值
>(arguments: number) => { // no error    var arguments = 10; // no error} : (arguments: 数字) => 无值
>arguments : 数字
>类型别名 :=> 数字

    var arguments = 10; // no error
>arguments : 数字
>类型别名 :=> 数字
>10 : 10
}

var f2 = (...restParameters) => {
>f2 : (...restParameters: 任意[]) => 无值
>(...restParameters) => {    var arguments = 10; // No Error} : (...restParameters: 任意[]) => 无值
>restParameters : 任意[]

    var arguments = 10; // No Error
>arguments : 数字
>类型别名 :=> 数字
>10 : 10
}
var f2NoError = () => {
>f2NoError : () => 无值
>() => {    var arguments = 10; // no error} : () => 无值

    var arguments = 10; // no error
>arguments : 数字
>类型别名 :=> 数字
>10 : 10
}
