=== tests/cases/conformance/expressions/typeGuards/typeGuardsWithInstanceOf.ts ===
interface I { global: string; }
>I : I
>global : 文字
>类型别名 :=> 文字

var result: I;
>result : I
>I : I

var result2: I;
>result2 : I
>I : I

if (!(result instanceof RegExp)) {
>!(result instanceof RegExp) : 真假
>类型别名 :=> 真假
>(result instanceof RegExp) : 真假
>类型别名 :=> 真假
>result instanceof RegExp : 真假
>类型别名 :=> 真假
>result : I
>RegExp : RegExpConstructor

    result = result2;
>result = result2 : I
>result : I
>result2 : I

} else if (!result.global) {
>!result.global : 真假
>类型别名 :=> 真假
>result.global : (文字 & 为真) | (文字 & 为假)
>result : I & RegExp
>global : (文字 & 为真) | (文字 & 为假)
}
