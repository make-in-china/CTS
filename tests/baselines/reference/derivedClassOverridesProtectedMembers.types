=== tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassOverridesProtectedMembers.ts ===
var x: { foo: string; }
>x : { foo: 文字; }
>foo : 文字
>类型别名 :=> 文字

var y: { foo: string; bar: string; }
>y : { foo: 文字; bar: 文字; }
>foo : 文字
>类型别名 :=> 文字
>bar : 文字
>类型别名 :=> 文字

class Base {
>Base : Base

    protected a: typeof x;
>a : { foo: 文字; }
>x : { foo: 文字; }

    protected b(a: typeof x) { }
>b : (a: { foo: 文字; }) => 无值
>a : { foo: 文字; }
>x : { foo: 文字; }

    protected get c() { return x; }
>c : { foo: 文字; }
>x : { foo: 文字; }

    protected set c(v: typeof x) { }
>c : { foo: 文字; }
>v : { foo: 文字; }
>x : { foo: 文字; }

    protected d: (a: typeof x) => void;
>d : (a: { foo: 文字; }) => 无值
>a : { foo: 文字; }
>x : { foo: 文字; }

    protected static r: typeof x;
>r : { foo: 文字; }
>x : { foo: 文字; }

    protected static s(a: typeof x) { }
>s : (a: { foo: 文字; }) => 无值
>a : { foo: 文字; }
>x : { foo: 文字; }

    protected static get t() { return x; }
>t : { foo: 文字; }
>x : { foo: 文字; }

    protected static set t(v: typeof x) { }
>t : { foo: 文字; }
>v : { foo: 文字; }
>x : { foo: 文字; }

    protected static u: (a: typeof x) => void;
>u : (a: { foo: 文字; }) => 无值
>a : { foo: 文字; }
>x : { foo: 文字; }

    constructor(a: typeof x) { }
>a : { foo: 文字; }
>x : { foo: 文字; }
}

class Derived extends Base {
>Derived : Derived
>Base : Base

    protected a: typeof y;
>a : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }

    protected b(a: typeof y) { }
>b : (a: { foo: 文字; bar: 文字; }) => 无值
>a : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }

    protected get c() { return y; }
>c : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }

    protected set c(v: typeof y) { }
>c : { foo: 文字; bar: 文字; }
>v : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }

    protected d: (a: typeof y) => void;
>d : (a: { foo: 文字; bar: 文字; }) => 无值
>a : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }

    protected static r: typeof y;
>r : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }

    protected static s(a: typeof y) { }
>s : (a: { foo: 文字; bar: 文字; }) => 无值
>a : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }

    protected static get t() { return y; }
>t : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }

    protected static set t(a: typeof y) { }
>t : { foo: 文字; bar: 文字; }
>a : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }

    protected static u: (a: typeof y) => void;
>u : (a: { foo: 文字; bar: 文字; }) => 无值
>a : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }

    constructor(a: typeof y) { super(x) }
>a : { foo: 文字; bar: 文字; }
>y : { foo: 文字; bar: 文字; }
>super(x) : 无值
>类型别名 :=> 无值
>super : 类为 Base
>x : { foo: 文字; }
}

