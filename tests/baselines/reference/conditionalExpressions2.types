=== tests/cases/compiler/conditionalExpressions2.ts ===
var a = false ? 1 : null;
>a : number
>类型别名 :=> 数字
>false ? 1 : null : 1
>false : false
>类型别名 :=> 为假
>1 : 1
>null : null
>类型别名 :=> 空值

var b = false ? undefined : 0;
>b : number
>类型别名 :=> 数字
>false ? undefined : 0 : 0
>false : false
>类型别名 :=> 为假
>undefined : undefined
>类型别名 :=> 未定
>0 : 0

var c = false ? 1 : 0;
>c : number
>类型别名 :=> 数字
>false ? 1 : 0 : 1 | 0
>false : false
>类型别名 :=> 为假
>1 : 1
>0 : 0

var d = false ? false : true;
>d : boolean
>类型别名 :=> 真假
>false ? false : true : boolean
>类型别名 :=> 真假
>false : false
>类型别名 :=> 为假
>false : false
>类型别名 :=> 为假
>true : true
>类型别名 :=> 为真

var e = false ? "foo" : "bar";
>e : string
>类型别名 :=> 文字
>false ? "foo" : "bar" : "foo" | "bar"
>false : false
>类型别名 :=> 为假
>"foo" : "foo"
>"bar" : "bar"

var f = false ? null : undefined;
>f : any
>类型别名 :=> 任意
>false ? null : undefined : null
>类型别名 :=> 空值
>false : false
>类型别名 :=> 为假
>null : null
>类型别名 :=> 空值
>undefined : undefined
>类型别名 :=> 未定

var g = true ? {g:5} : null;
>g : { g: number; }
>true ? {g:5} : null : { g: number; }
>true : true
>类型别名 :=> 为真
>{g:5} : { g: number; }
>g : number
>类型别名 :=> 数字
>5 : 5
>null : null
>类型别名 :=> 空值

var h = [{h:5}, null];
>h : { h: number; }[]
>[{h:5}, null] : { h: number; }[]
>{h:5} : { h: number; }
>h : number
>类型别名 :=> 数字
>5 : 5
>null : null
>类型别名 :=> 空值

function i() { if (true) { return { x: 5 }; } else { return null; } }
>i : () => { x: number; }
>true : true
>类型别名 :=> 为真
>{ x: 5 } : { x: number; }
>x : number
>类型别名 :=> 数字
>5 : 5
>null : null
>类型别名 :=> 空值

