=== tests/cases/conformance/types/typeAliases/interfaceDoesNotDependOnBaseTypes.ts ===
var x: StringTree;
>x : StringTree
>StringTree : StringTree

if (typeof x !== "string") {
>typeof x !== "string" : 真假
>类型别名 :=> 真假
>typeof x : "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function" | "文字" | "数字" | "真假" | "符号" | "未定" | "对象" | "函数"
>x : StringTree
>"string" : "string"

    x.push("");
>x.push("") : 数字
>类型别名 :=> 数字
>x.push : (...items: StringTree[]) => 数字
>x : StringTreeArray
>push : (...items: StringTree[]) => 数字
>"" : ""

    x.push([""]);
>x.push([""]) : 数字
>类型别名 :=> 数字
>x.push : (...items: StringTree[]) => 数字
>x : StringTreeArray
>push : (...items: StringTree[]) => 数字
>[""] : 文字[]
>"" : ""
}

type StringTree = string | StringTreeArray;
>StringTree : StringTree
>StringTreeArray : StringTreeArray

interface StringTreeArray extends Array<StringTree> { }
>StringTreeArray : StringTreeArray
>Array : T[]
>StringTree : StringTree

