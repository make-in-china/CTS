=== tests/cases/compiler/classExpressionWithStaticPropertiesES63.ts ===
declare var console: any;
>console : 任意
>类型别名 :=> 任意

const arr: {y(): number}[] = [];
>arr : { y(): 数字; }[]
>y : () => 数字
>[] : 未定[]

for (let i = 0; i < 3; i++) {
>i : 数字
>类型别名 :=> 数字
>0 : 0
>i < 3 : 真假
>类型别名 :=> 真假
>i : 数字
>类型别名 :=> 数字
>3 : 3
>i++ : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

    arr.push(class C {
>arr.push(class C {        static x = i;        static y = () => C.x * 2;    }) : 数字
>类型别名 :=> 数字
>arr.push : (...items: { y(): 数字; }[]) => 数字
>arr : { y(): 数字; }[]
>push : (...items: { y(): 数字; }[]) => 数字
>class C {        static x = i;        static y = () => C.x * 2;    } : 类为 C
>C : 类为 C

        static x = i;
>x : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字

        static y = () => C.x * 2;
>y : () => 数字
>() => C.x * 2 : () => 数字
>C.x * 2 : 数字
>类型别名 :=> 数字
>C.x : 数字
>类型别名 :=> 数字
>C : 类为 C
>x : 数字
>类型别名 :=> 数字
>2 : 2

    });
}
arr.forEach(C => console.log(C.y()));
>arr.forEach(C => console.log(C.y())) : 无值
>类型别名 :=> 无值
>arr.forEach : (callbackfn: (value: { y(): 数字; }, index: 数字, array: { y(): 数字; }[]) => 无值, thisArg?: 任意) => 无值
>arr : { y(): 数字; }[]
>forEach : (callbackfn: (value: { y(): 数字; }, index: 数字, array: { y(): 数字; }[]) => 无值, thisArg?: 任意) => 无值
>C => console.log(C.y()) : (C: { y(): 数字; }) => 任意
>C : { y(): 数字; }
>console.log(C.y()) : 任意
>类型别名 :=> 任意
>console.log : 任意
>类型别名 :=> 任意
>console : 任意
>类型别名 :=> 任意
>log : 任意
>类型别名 :=> 任意
>C.y() : 数字
>类型别名 :=> 数字
>C.y : () => 数字
>C : { y(): 数字; }
>y : () => 数字

