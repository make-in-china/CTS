=== tests/cases/compiler/enumPropertyAccess.ts ===
enum Colors {
>Colors : Colors

    Red,
>Red : Colors.Red

    Green
>Green : Colors.Green
}

var x = Colors.Red; // type of 'x' should be 'Colors'
>x : Colors
>Colors.Red : Colors.Red
>Colors : 类为 Colors
>Red : Colors.Red

var p = x.Green; // error
>p : 任意
>类型别名 :=> 任意
>x.Green : 任意
>类型别名 :=> 任意
>x : Colors.Red
>Green : 任意
>类型别名 :=> 任意

x.toFixed(); // ok
>x.toFixed() : 文字
>类型别名 :=> 文字
>x.toFixed : (fractionDigits?: 数字) => 文字
>x : Colors.Red
>toFixed : (fractionDigits?: 数字) => 文字

// Now with generics
function fill<B extends Colors>(f: B) {
>fill : <B 扩展 Colors>(f: B) => 无值
>B : B
>Colors : Colors
>f : B
>B : B

    f.Green; // error
>f.Green : 任意
>类型别名 :=> 任意
>f : B
>Green : 任意
>类型别名 :=> 任意

    f.toFixed(); // ok
>f.toFixed() : 文字
>类型别名 :=> 文字
>f.toFixed : (fractionDigits?: 数字) => 文字
>f : B
>toFixed : (fractionDigits?: 数字) => 文字
}
