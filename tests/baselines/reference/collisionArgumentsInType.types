=== tests/cases/compiler/collisionArgumentsInType.ts ===
var v1: (i: number, ...arguments) => void; // no error - no code gen
>v1 : (i: 数字, ...arguments: 任意[]) => 无值
>i : 数字
>类型别名 :=> 数字
>arguments : 任意[]

var v12: (arguments: number, ...restParameters) => void; // no error - no code gen
>v12 : (arguments: 数字, ...restParameters: 任意[]) => 无值
>arguments : 数字
>类型别名 :=> 数字
>restParameters : 任意[]

var v2: {
>v2 : { (arguments: 数字, ...restParameters: 任意[]): 任意; 新建 (arguments: 数字, ...restParameters: 任意[]): 任意; foo(arguments: 数字, ...restParameters: 任意[]): 任意; prop: (arguments: 数字, ...restParameters: 任意[]) => 无值; }

    (arguments: number, ...restParameters); // no error - no code gen
>arguments : 数字
>类型别名 :=> 数字
>restParameters : 任意[]

    new (arguments: number, ...restParameters); // no error - no code gen
>arguments : 数字
>类型别名 :=> 数字
>restParameters : 任意[]

    foo(arguments: number, ...restParameters); // no error - no code gen
>foo : (arguments: 数字, ...restParameters: 任意[]) => 任意
>arguments : 数字
>类型别名 :=> 数字
>restParameters : 任意[]

    prop: (arguments: number, ...restParameters) => void; // no error - no code gen
>prop : (arguments: 数字, ...restParameters: 任意[]) => 无值
>arguments : 数字
>类型别名 :=> 数字
>restParameters : 任意[]
}
var v21: {
>v21 : { (i: 数字, ...arguments: 任意[]): 任意; 新建 (i: 数字, ...arguments: 任意[]): 任意; foo(i: 数字, ...arguments: 任意[]): 任意; prop: (i: 数字, ...arguments: 任意[]) => 无值; }

    (i: number, ...arguments); // no error - no code gen
>i : 数字
>类型别名 :=> 数字
>arguments : 任意[]

    new (i: number, ...arguments); // no error - no code gen
>i : 数字
>类型别名 :=> 数字
>arguments : 任意[]

    foo(i: number, ...arguments); // no error - no code gen
>foo : (i: 数字, ...arguments: 任意[]) => 任意
>i : 数字
>类型别名 :=> 数字
>arguments : 任意[]

    prop: (i: number, ...arguments) => void; // no error - no code gen
>prop : (i: 数字, ...arguments: 任意[]) => 无值
>i : 数字
>类型别名 :=> 数字
>arguments : 任意[]
}
