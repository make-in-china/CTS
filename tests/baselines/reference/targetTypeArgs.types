=== tests/cases/compiler/targetTypeArgs.ts ===
function foo(callback: (x: string) => void) {
>foo : (callback: (x: 文字) => 无值) => 无值
>callback : (x: 文字) => 无值
>x : 文字
>类型别名 :=> 文字

    callback("hello");   
>callback("hello") : 无值
>类型别名 :=> 无值
>callback : (x: 文字) => 无值
>"hello" : "hello"
}

foo(function(x) { x });
>foo(function(x) { x }) : 无值
>类型别名 :=> 无值
>foo : (callback: (x: 文字) => 无值) => 无值
>function(x) { x } : (x: 文字) => 无值
>x : 文字
>类型别名 :=> 文字
>x : 文字
>类型别名 :=> 文字

[1].forEach(function(v,i,a) { v });
>[1].forEach(function(v,i,a) { v }) : 无值
>类型别名 :=> 无值
>[1].forEach : (callbackfn: (value: 数字, index: 数字, array: 数字[]) => 无值, thisArg?: 任意) => 无值
>[1] : 数字[]
>1 : 1
>forEach : (callbackfn: (value: 数字, index: 数字, array: 数字[]) => 无值, thisArg?: 任意) => 无值
>function(v,i,a) { v } : (v: 数字, i: 数字, a: 数字[]) => 无值
>v : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字
>a : 数字[]
>v : 数字
>类型别名 :=> 数字

["hello"].every(function(v,i,a) {return true;});
>["hello"].every(function(v,i,a) {return true;}) : 真假
>类型别名 :=> 真假
>["hello"].every : (callbackfn: (value: 文字, index: 数字, array: 文字[]) => 真假, thisArg?: 任意) => 真假
>["hello"] : 文字[]
>"hello" : "hello"
>every : (callbackfn: (value: 文字, index: 数字, array: 文字[]) => 真假, thisArg?: 任意) => 真假
>function(v,i,a) {return true;} : (v: 文字, i: 数字, a: 文字[]) => 为真
>v : 文字
>类型别名 :=> 文字
>i : 数字
>类型别名 :=> 数字
>a : 文字[]
>true : 为真
>类型别名 :=> 为真

[1].every(function(v,i,a) {return true;});
>[1].every(function(v,i,a) {return true;}) : 真假
>类型别名 :=> 真假
>[1].every : (callbackfn: (value: 数字, index: 数字, array: 数字[]) => 真假, thisArg?: 任意) => 真假
>[1] : 数字[]
>1 : 1
>every : (callbackfn: (value: 数字, index: 数字, array: 数字[]) => 真假, thisArg?: 任意) => 真假
>function(v,i,a) {return true;} : (v: 数字, i: 数字, a: 数字[]) => 为真
>v : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字
>a : 数字[]
>true : 为真
>类型别名 :=> 为真

[1].every(function(v,i,a) {return true;});
>[1].every(function(v,i,a) {return true;}) : 真假
>类型别名 :=> 真假
>[1].every : (callbackfn: (value: 数字, index: 数字, array: 数字[]) => 真假, thisArg?: 任意) => 真假
>[1] : 数字[]
>1 : 1
>every : (callbackfn: (value: 数字, index: 数字, array: 数字[]) => 真假, thisArg?: 任意) => 真假
>function(v,i,a) {return true;} : (v: 数字, i: 数字, a: 数字[]) => 为真
>v : 数字
>类型别名 :=> 数字
>i : 数字
>类型别名 :=> 数字
>a : 数字[]
>true : 为真
>类型别名 :=> 为真

["s"].every(function(v,i,a) {return true;});
>["s"].every(function(v,i,a) {return true;}) : 真假
>类型别名 :=> 真假
>["s"].every : (callbackfn: (value: 文字, index: 数字, array: 文字[]) => 真假, thisArg?: 任意) => 真假
>["s"] : 文字[]
>"s" : "s"
>every : (callbackfn: (value: 文字, index: 数字, array: 文字[]) => 真假, thisArg?: 任意) => 真假
>function(v,i,a) {return true;} : (v: 文字, i: 数字, a: 文字[]) => 为真
>v : 文字
>类型别名 :=> 文字
>i : 数字
>类型别名 :=> 数字
>a : 文字[]
>true : 为真
>类型别名 :=> 为真

["s"].forEach(function(v,i,a) { v });
>["s"].forEach(function(v,i,a) { v }) : 无值
>类型别名 :=> 无值
>["s"].forEach : (callbackfn: (value: 文字, index: 数字, array: 文字[]) => 无值, thisArg?: 任意) => 无值
>["s"] : 文字[]
>"s" : "s"
>forEach : (callbackfn: (value: 文字, index: 数字, array: 文字[]) => 无值, thisArg?: 任意) => 无值
>function(v,i,a) { v } : (v: 文字, i: 数字, a: 文字[]) => 无值
>v : 文字
>类型别名 :=> 文字
>i : 数字
>类型别名 :=> 数字
>a : 文字[]
>v : 文字
>类型别名 :=> 文字


