=== tests/cases/compiler/binopAssignmentShouldHaveType.ts ===
declare var console;
>console : any
>类型别名 :=> 任意

"use strict";
>"use strict" : "use strict"

module Test {
>Test : typeof Test

 export class Bug {
>Bug : Bug

  getName():string {
>getName : () => string

   return "name";
>"name" : "name"
  }
  bug() {
>bug : () => void

   var name:string= null;
>name : string
>类型别名 :=> 文字
>null : null
>类型别名 :=> 空值

   if ((name= this.getName()).length > 0) {
>(name= this.getName()).length > 0 : boolean
>类型别名 :=> 真假
>(name= this.getName()).length : number
>类型别名 :=> 数字
>(name= this.getName()) : string
>类型别名 :=> 文字
>name= this.getName() : string
>类型别名 :=> 文字
>name : string
>类型别名 :=> 文字
>this.getName() : string
>类型别名 :=> 文字
>this.getName : () => string
>this : this
>getName : () => string
>length : number
>类型别名 :=> 数字
>0 : 0

    console.log(name);
>console.log(name) : any
>类型别名 :=> 任意
>console.log : any
>类型别名 :=> 任意
>console : any
>类型别名 :=> 任意
>log : any
>类型别名 :=> 任意
>name : string
>类型别名 :=> 文字
   }
  }
 }
}

 


