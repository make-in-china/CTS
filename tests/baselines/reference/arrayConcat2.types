=== tests/cases/compiler/arrayConcat2.ts ===
var a: string[] = [];
>a : 文字[]
>[] : 未定[]

a.concat("hello", 'world');
>a.concat("hello", 'world') : 文字[]
>a.concat : { (...items: ReadonlyArray<文字>[]): 文字[]; (...items: (文字 | ReadonlyArray<文字>)[]): 文字[]; }
>a : 文字[]
>concat : { (...items: ReadonlyArray<文字>[]): 文字[]; (...items: (文字 | ReadonlyArray<文字>)[]): 文字[]; }
>"hello" : "hello"
>'world' : "world"

a.concat('Hello');
>a.concat('Hello') : 文字[]
>a.concat : { (...items: ReadonlyArray<文字>[]): 文字[]; (...items: (文字 | ReadonlyArray<文字>)[]): 文字[]; }
>a : 文字[]
>concat : { (...items: ReadonlyArray<文字>[]): 文字[]; (...items: (文字 | ReadonlyArray<文字>)[]): 文字[]; }
>'Hello' : "Hello"

var b = new Array<string>();
>b : 文字[]
>new Array<string>() : 文字[]
>Array : ArrayConstructor

b.concat('hello');
>b.concat('hello') : 文字[]
>b.concat : { (...items: ReadonlyArray<文字>[]): 文字[]; (...items: (文字 | ReadonlyArray<文字>)[]): 文字[]; }
>b : 文字[]
>concat : { (...items: ReadonlyArray<文字>[]): 文字[]; (...items: (文字 | ReadonlyArray<文字>)[]): 文字[]; }
>'hello' : "hello"

