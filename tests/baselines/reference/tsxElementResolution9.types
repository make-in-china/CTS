=== tests/cases/conformance/jsx/file.tsx ===
declare module JSX {
>JSX : any
>类型别名 :=> 任意

	interface Element { something; }
>Element : Element
>something : any
>类型别名 :=> 任意

	interface IntrinsicElements { }
>IntrinsicElements : IntrinsicElements
}

interface Obj1 {
>Obj1 : Obj1

	new(n: string): { x: number };
>n : string
>类型别名 :=> 文字
>x : number
>类型别名 :=> 数字

	new(n: number): { y: string };
>n : number
>类型别名 :=> 数字
>y : string
>类型别名 :=> 文字
}
var Obj1: Obj1;
>Obj1 : Obj1
>Obj1 : Obj1

<Obj1 />; // Error, return type is not an object type
><Obj1 /> : JSX.Element
>Obj1 : Obj1

interface Obj2 {
>Obj2 : Obj2

	(n: string): { x: number };
>n : string
>类型别名 :=> 文字
>x : number
>类型别名 :=> 数字

	(n: number): { y: string };
>n : number
>类型别名 :=> 数字
>y : string
>类型别名 :=> 文字
}
var Obj2: Obj2;
>Obj2 : Obj2
>Obj2 : Obj2

<Obj2 />; // Error, return type is not an object type
><Obj2 /> : JSX.Element
>Obj2 : Obj2

interface Obj3 {
>Obj3 : Obj3

	(n: string): { x: number };
>n : string
>类型别名 :=> 文字
>x : number
>类型别名 :=> 数字

	(n: number): { x: number; y: string };
>n : number
>类型别名 :=> 数字
>x : number
>类型别名 :=> 数字
>y : string
>类型别名 :=> 文字
}
var Obj3: Obj3;
>Obj3 : Obj3
>Obj3 : Obj3

<Obj3 x={42} />; // OK
><Obj3 x={42} /> : JSX.Element
>Obj3 : Obj3
>x : number
>类型别名 :=> 数字
>42 : 42

