=== tests/cases/compiler/assignToExistingClass.ts ===
module Test {
>Test : 类为 Test

    class Mocked {
>Mocked : Mocked

        myProp: string;
>myProp : 文字
>类型别名 :=> 文字
    }

    class Tester {
>Tester : Tester

        willThrowError() {
>willThrowError : () => 无值

            Mocked = Mocked || function () { // => Error: Invalid left-hand side of assignment expression.
>Mocked = Mocked || function () { // => Error: Invalid left-hand side of assignment expression.                return { myProp: "test" };            } : 类为 Mocked | (() => { myProp: 文字; })
>Mocked : 任意
>类型别名 :=> 任意
>Mocked || function () { // => Error: Invalid left-hand side of assignment expression.                return { myProp: "test" };            } : 类为 Mocked | (() => { myProp: 文字; })
>Mocked : 类为 Mocked
>function () { // => Error: Invalid left-hand side of assignment expression.                return { myProp: "test" };            } : () => { myProp: 文字; }

                return { myProp: "test" };
>{ myProp: "test" } : { myProp: 文字; }
>myProp : 文字
>类型别名 :=> 文字
>"test" : "test"

            };
        }
    }
 
}

