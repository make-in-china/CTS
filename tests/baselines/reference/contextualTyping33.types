=== tests/cases/compiler/contextualTyping33.ts ===
function foo(param: {():number; (i:number):number; }[]) { }; foo([function(){return 1;}, function(){return "foo"}]);
>foo : (param: { (): number; (i: number): number; }[]) => void
>param : { (): number; (i: number): number; }[]
>i : number
>类型别名 :=> 数字
>foo([function(){return 1;}, function(){return "foo"}]) : void
>类型别名 :=> 无值
>foo : (param: { (): number; (i: number): number; }[]) => void
>[function(){return 1;}, function(){return "foo"}] : ((() => number) | (() => string))[]
>function(){return 1;} : () => number
>1 : 1
>function(){return "foo"} : () => string
>"foo" : "foo"

