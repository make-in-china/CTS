=== tests/cases/conformance/jsdoc/0.js ===
// @ts-check
var lol = "hello Lol"
>lol : 文字
>类型别名 :=> 文字
>"hello Lol" : "hello Lol"

const obj = {
>obj : { [x: 文字]: 任意; foo: 文字 | 未定; bar: 文字 | 未定; method1(arg0: 数字): 数字; lol: 文字; arrowFunc: (arg0: 数字) => 数字; }
>{  /** @type {string|undefined} */  foo: undefined,  /** @type {string|undefined} */  bar: "42",  /** @type {function(number): number} */  method1(n1) {      return n1 + 42;  },  /** @type {string} */  lol,  /** @type {number} */  ['b' + 'ar1']: 42,  /** @type {function(number): number} */  arrowFunc: (num) => num + 42} : { [x: 文字]: 任意; foo: 文字 | 未定; bar: 文字 | 未定; method1(arg0: 数字): 数字; lol: 文字; arrowFunc: (arg0: 数字) => 数字; }

  /** @type {string|undefined} */
  foo: undefined,
>foo : 文字 | 未定
>undefined : 未定
>类型别名 :=> 未定

  /** @type {string|undefined} */
  bar: "42",
>bar : 文字 | 未定
>"42" : "42"

  /** @type {function(number): number} */
  method1(n1) {
>method1 : (n1: 任意) => 任意
>n1 : 任意
>类型别名 :=> 任意

      return n1 + 42;
>n1 + 42 : 任意
>类型别名 :=> 任意
>n1 : 任意
>类型别名 :=> 任意
>42 : 42

  },
  /** @type {string} */
  lol,
>lol : 文字
>类型别名 :=> 文字

  /** @type {number} */
  ['b' + 'ar1']: 42,
>'b' + 'ar1' : 文字
>类型别名 :=> 文字
>'b' : "b"
>'ar1' : "ar1"
>42 : 42

  /** @type {function(number): number} */
  arrowFunc: (num) => num + 42
>arrowFunc : (arg0: 数字) => 数字
>(num) => num + 42 : (num: 任意) => 任意
>num : 任意
>类型别名 :=> 任意
>num + 42 : 任意
>类型别名 :=> 任意
>num : 任意
>类型别名 :=> 任意
>42 : 42
}
obj.foo = 'string'
>obj.foo = 'string' : "string"
>obj.foo : 文字 | 未定
>obj : { [x: 文字]: 任意; foo: 文字 | 未定; bar: 文字 | 未定; method1(arg0: 数字): 数字; lol: 文字; arrowFunc: (arg0: 数字) => 数字; }
>foo : 文字 | 未定
>'string' : "string"

obj.lol
>obj.lol : 文字
>类型别名 :=> 文字
>obj : { [x: 文字]: 任意; foo: 文字 | 未定; bar: 文字 | 未定; method1(arg0: 数字): 数字; lol: 文字; arrowFunc: (arg0: 数字) => 数字; }
>lol : 文字
>类型别名 :=> 文字

obj.bar = undefined;
>obj.bar = undefined : 未定
>类型别名 :=> 未定
>obj.bar : 文字 | 未定
>obj : { [x: 文字]: 任意; foo: 文字 | 未定; bar: 文字 | 未定; method1(arg0: 数字): 数字; lol: 文字; arrowFunc: (arg0: 数字) => 数字; }
>bar : 文字 | 未定
>undefined : 未定
>类型别名 :=> 未定

var k = obj.method1(0);
>k : 数字
>类型别名 :=> 数字
>obj.method1(0) : 数字
>类型别名 :=> 数字
>obj.method1 : (arg0: 数字) => 数字
>obj : { [x: 文字]: 任意; foo: 文字 | 未定; bar: 文字 | 未定; method1(arg0: 数字): 数字; lol: 文字; arrowFunc: (arg0: 数字) => 数字; }
>method1 : (arg0: 数字) => 数字
>0 : 0

obj.bar1 = "42";
>obj.bar1 = "42" : "42"
>obj.bar1 : 任意
>类型别名 :=> 任意
>obj : { [x: 文字]: 任意; foo: 文字 | 未定; bar: 文字 | 未定; method1(arg0: 数字): 数字; lol: 文字; arrowFunc: (arg0: 数字) => 数字; }
>bar1 : 任意
>类型别名 :=> 任意
>"42" : "42"

obj.arrowFunc(0);
>obj.arrowFunc(0) : 数字
>类型别名 :=> 数字
>obj.arrowFunc : (arg0: 数字) => 数字
>obj : { [x: 文字]: 任意; foo: 文字 | 未定; bar: 文字 | 未定; method1(arg0: 数字): 数字; lol: 文字; arrowFunc: (arg0: 数字) => 数字; }
>arrowFunc : (arg0: 数字) => 数字
>0 : 0

