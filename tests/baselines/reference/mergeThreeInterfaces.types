=== tests/cases/conformance/interfaces/declarationMerging/mergeThreeInterfaces.ts ===
// interfaces with the same root module should merge

// basic case
interface A {
>A : A

    foo: string;
>foo : string
>类型别名 :=> 文字
}

interface A {
>A : A

    bar: number;
>bar : number
>类型别名 :=> 数字
}

interface A {
>A : A

    baz: boolean;
>baz : boolean
>类型别名 :=> 真假
}

var a: A;
>a : A
>A : A

var r1 = a.foo
>r1 : string
>类型别名 :=> 文字
>a.foo : string
>类型别名 :=> 文字
>a : A
>foo : string
>类型别名 :=> 文字

var r2 = a.bar;
>r2 : number
>类型别名 :=> 数字
>a.bar : number
>类型别名 :=> 数字
>a : A
>bar : number
>类型别名 :=> 数字

var r3 = a.baz;
>r3 : boolean
>类型别名 :=> 真假
>a.baz : boolean
>类型别名 :=> 真假
>a : A
>baz : boolean
>类型别名 :=> 真假

// basic generic case
interface B<T> {
>B : B<T>
>T : T

    foo: T;
>foo : T
>T : T
}

interface B<T> {
>B : B<T>
>T : T

    bar: T;
>bar : T
>T : T
}

interface B<T> {
>B : B<T>
>T : T

    baz: T;
>baz : T
>T : T
}

var b: B<string>;
>b : B<string>
>B : B<T>

var r4 = b.foo
>r4 : string
>类型别名 :=> 文字
>b.foo : string
>类型别名 :=> 文字
>b : B<string>
>foo : string
>类型别名 :=> 文字

var r5 = b.bar;
>r5 : string
>类型别名 :=> 文字
>b.bar : string
>类型别名 :=> 文字
>b : B<string>
>bar : string
>类型别名 :=> 文字

var r6 = b.baz;
>r6 : string
>类型别名 :=> 文字
>b.baz : string
>类型别名 :=> 文字
>b : B<string>
>baz : string
>类型别名 :=> 文字

// basic non-generic and generic case inside a module
module M {
>M : typeof M

    interface A {
>A : A

        foo: string;
>foo : string
>类型别名 :=> 文字
    }

    interface A {
>A : A

        bar: number;
>bar : number
>类型别名 :=> 数字
    }

    interface A {
>A : A

        baz: boolean;
>baz : boolean
>类型别名 :=> 真假
    }

    var a: A;
>a : A
>A : A

    var r1 = a.foo;
>r1 : string
>类型别名 :=> 文字
>a.foo : string
>类型别名 :=> 文字
>a : A
>foo : string
>类型别名 :=> 文字

    // BUG 856491
    var r2 = a.bar; // any, should be number
>r2 : number
>类型别名 :=> 数字
>a.bar : number
>类型别名 :=> 数字
>a : A
>bar : number
>类型别名 :=> 数字

    // BUG 856491
    var r3 = a.baz; // any, should be boolean
>r3 : boolean
>类型别名 :=> 真假
>a.baz : boolean
>类型别名 :=> 真假
>a : A
>baz : boolean
>类型别名 :=> 真假

    interface B<T> {
>B : B<T>
>T : T

        foo: T;
>foo : T
>T : T
    }

    interface B<T> {
>B : B<T>
>T : T

        bar: T;
>bar : T
>T : T
    }

    interface B<T> {
>B : B<T>
>T : T

        baz: T;
>baz : T
>T : T
    }

    var b: B<string>;
>b : B<string>
>B : B<T>

    var r4 = b.foo
>r4 : string
>类型别名 :=> 文字
>b.foo : string
>类型别名 :=> 文字
>b : B<string>
>foo : string
>类型别名 :=> 文字

    // BUG 856491
    var r5 = b.bar; // any, should be number
>r5 : string
>类型别名 :=> 文字
>b.bar : string
>类型别名 :=> 文字
>b : B<string>
>bar : string
>类型别名 :=> 文字

    // BUG 856491
    var r6 = b.baz; // any, should be boolean
>r6 : string
>类型别名 :=> 文字
>b.baz : string
>类型别名 :=> 文字
>b : B<string>
>baz : string
>类型别名 :=> 文字
}
