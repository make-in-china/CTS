=== tests/cases/conformance/types/tuple/arityAndOrderCompatibility01.ts ===
interface StrNum extends Array<string|number> {
>StrNum : StrNum
>Array : T[]

    0: string;
    1: number;
}

var x: [string, number];
>x : [文字, 数字]

var y: StrNum
>y : StrNum
>StrNum : StrNum

var z: {
>z : { 0: 文字; 1: 数字; }

    0: string;
    1: number;
}

var [a, b, c] = x;
>a : 文字
>类型别名 :=> 文字
>b : 数字
>类型别名 :=> 数字
>c : 任意
>类型别名 :=> 任意
>x : [文字, 数字]

var [d, e, f] = y;
>d : 文字
>类型别名 :=> 文字
>e : 数字
>类型别名 :=> 数字
>f : 任意
>类型别名 :=> 任意
>y : StrNum

var [g, h, i] = z;
>g : 文字
>类型别名 :=> 文字
>h : 数字
>类型别名 :=> 数字
>i : 任意
>类型别名 :=> 任意
>z : { 0: 文字; 1: 数字; }

var j1: [number, number, number] = x;
>j1 : [数字, 数字, 数字]
>x : [文字, 数字]

var j2: [number, number, number] = y;
>j2 : [数字, 数字, 数字]
>y : StrNum

var j3: [number, number, number] = z;
>j3 : [数字, 数字, 数字]
>z : { 0: 文字; 1: 数字; }

var k1: [string, number, number] = x;
>k1 : [文字, 数字, 数字]
>x : [文字, 数字]

var k2: [string, number, number] = y;
>k2 : [文字, 数字, 数字]
>y : StrNum

var k3: [string, number, number] = z;
>k3 : [文字, 数字, 数字]
>z : { 0: 文字; 1: 数字; }

var l1: [number] = x;
>l1 : [数字]
>x : [文字, 数字]

var l2: [number] = y;
>l2 : [数字]
>y : StrNum

var l3: [number] = z;
>l3 : [数字]
>z : { 0: 文字; 1: 数字; }

var m1: [string] = x;
>m1 : [文字]
>x : [文字, 数字]

var m2: [string] = y;
>m2 : [文字]
>y : StrNum

var m3: [string] = z;
>m3 : [文字]
>z : { 0: 文字; 1: 数字; }

var n1: [number, string] = x;
>n1 : [数字, 文字]
>x : [文字, 数字]

var n2: [number, string] = y;
>n2 : [数字, 文字]
>y : StrNum

var n3: [number, string] = z;
>n3 : [数字, 文字]
>z : { 0: 文字; 1: 数字; }

var o1: [string, number] = x;
>o1 : [文字, 数字]
>x : [文字, 数字]

var o2: [string, number] = y;
>o2 : [文字, 数字]
>y : StrNum

var o3: [string, number] = y;
>o3 : [文字, 数字]
>y : StrNum

