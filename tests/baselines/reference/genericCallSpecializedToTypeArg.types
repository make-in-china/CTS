=== tests/cases/compiler/genericCallSpecializedToTypeArg.ts ===
function dupe<T>(x: T): T {
>dupe : <T>(x: T) => T
>T : T
>x : T
>T : T
>T : T

  return x;
>x : T
}
function dupeAndGetDist<U>(x: U): U {
>dupeAndGetDist : <U>(x: U) => U
>U : U
>x : U
>U : U
>U : U

  var y = dupe(x); //<-- dupe has incorrect type here
>y : U
>dupe(x) : U
>dupe : <T>(x: T) => T
>x : U

  y.getDist();     //<-- this requires a missing constraint, but it's not caught
>y.getDist() : any
>类型别名 :=> 任意
>y.getDist : any
>类型别名 :=> 任意
>y : U
>getDist : any
>类型别名 :=> 任意

  return y;
>y : U
}

