=== tests/cases/compiler/incrementOnNullAssertion.ts ===
interface Dictionary<T> {
>Dictionary : Dictionary<T>
>T : T

    [myFavouriteType: string]: T | undefined
>myFavouriteType : string
>类型别名 :=> 文字
>T : T
}
const x = 'bar'
>x : "bar"
>'bar' : "bar"

let foo: Dictionary<number> = {}
>foo : Dictionary<number>
>Dictionary : Dictionary<T>
>{} : {}

if (foo[x] === undefined) {
>foo[x] === undefined : boolean
>类型别名 :=> 真假
>foo[x] : number | undefined
>foo : Dictionary<number>
>x : "bar"
>undefined : undefined
>类型别名 :=> 未定

    foo[x] = 1
>foo[x] = 1 : 1
>foo[x] : number | undefined
>foo : Dictionary<number>
>x : "bar"
>1 : 1
}
else {
    let nu = foo[x]
>nu : number | undefined
>foo[x] : number | undefined
>foo : Dictionary<number>
>x : "bar"

    let n = foo[x]
>n : number | undefined
>foo[x] : number | undefined
>foo : Dictionary<number>
>x : "bar"

    foo[x]!++
>foo[x]!++ : number
>类型别名 :=> 数字
>foo[x]! : number
>类型别名 :=> 数字
>foo[x] : number | undefined
>foo : Dictionary<number>
>x : "bar"
}

