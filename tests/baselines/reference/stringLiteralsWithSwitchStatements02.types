=== tests/cases/conformance/types/literal/stringLiteralsWithSwitchStatements02.ts ===
let x: "foo";
>x : "foo"

let y: "foo" | "bar";
>y : "foo" | "bar"

let b: boolean;
>b : boolean
>类型别名 :=> 真假

b = x == y;
>b = x == y : boolean
>类型别名 :=> 真假
>b : boolean
>类型别名 :=> 真假
>x == y : boolean
>类型别名 :=> 真假
>x : "foo"
>y : "foo" | "bar"

b = "foo" == y
>b = "foo" == y : boolean
>类型别名 :=> 真假
>b : boolean
>类型别名 :=> 真假
>"foo" == y : boolean
>类型别名 :=> 真假
>"foo" : "foo"
>y : "foo" | "bar"

b = y == "foo";
>b = y == "foo" : boolean
>类型别名 :=> 真假
>b : boolean
>类型别名 :=> 真假
>y == "foo" : boolean
>类型别名 :=> 真假
>y : "foo" | "bar"
>"foo" : "foo"

b = "foo" == "bar";
>b = "foo" == "bar" : boolean
>类型别名 :=> 真假
>b : boolean
>类型别名 :=> 真假
>"foo" == "bar" : boolean
>类型别名 :=> 真假
>"foo" : "foo"
>"bar" : "bar"

b = x != y;
>b = x != y : boolean
>类型别名 :=> 真假
>b : boolean
>类型别名 :=> 真假
>x != y : boolean
>类型别名 :=> 真假
>x : "foo"
>y : "foo" | "bar"

b = "foo" != y
>b = "foo" != y : boolean
>类型别名 :=> 真假
>b : boolean
>类型别名 :=> 真假
>"foo" != y : boolean
>类型别名 :=> 真假
>"foo" : "foo"
>y : "foo" | "bar"

b = y != "foo";
>b = y != "foo" : boolean
>类型别名 :=> 真假
>b : boolean
>类型别名 :=> 真假
>y != "foo" : boolean
>类型别名 :=> 真假
>y : "foo" | "bar"
>"foo" : "foo"

b = "foo" != "bar";
>b = "foo" != "bar" : boolean
>类型别名 :=> 真假
>b : boolean
>类型别名 :=> 真假
>"foo" != "bar" : boolean
>类型别名 :=> 真假
>"foo" : "foo"
>"bar" : "bar"


