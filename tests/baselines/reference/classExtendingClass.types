=== tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/classExtendingClass.ts ===
class C {
>C : C

    foo: string;
>foo : 文字
>类型别名 :=> 文字

    thing() { }
>thing : () => 无值

    static other() { }
>other : () => 无值
}

class D extends C {
>D : D
>C : C

    bar: string;
>bar : 文字
>类型别名 :=> 文字
}

var d: D;
>d : D
>D : D

var r = d.foo;
>r : 文字
>类型别名 :=> 文字
>d.foo : 文字
>类型别名 :=> 文字
>d : D
>foo : 文字
>类型别名 :=> 文字

var r2 = d.bar;
>r2 : 文字
>类型别名 :=> 文字
>d.bar : 文字
>类型别名 :=> 文字
>d : D
>bar : 文字
>类型别名 :=> 文字

var r3 = d.thing();
>r3 : 无值
>类型别名 :=> 无值
>d.thing() : 无值
>类型别名 :=> 无值
>d.thing : () => 无值
>d : D
>thing : () => 无值

var r4 = D.other();
>r4 : 无值
>类型别名 :=> 无值
>D.other() : 无值
>类型别名 :=> 无值
>D.other : () => 无值
>D : 类为 D
>other : () => 无值

class C2<T> {
>C2 : C2<T>
>T : T

    foo: T;
>foo : T
>T : T

    thing(x: T) { }
>thing : (x: T) => 无值
>x : T
>T : T

    static other<T>(x: T) { }
>other : <T>(x: T) => 无值
>T : T
>x : T
>T : T
}

class D2<T> extends C2<T> {
>D2 : D2<T>
>T : T
>C2 : C2<T>
>T : T

    bar: string;
>bar : 文字
>类型别名 :=> 文字
}

var d2: D2<string>;
>d2 : D2<文字>
>D2 : D2<T>

var r5 = d2.foo;
>r5 : 文字
>类型别名 :=> 文字
>d2.foo : 文字
>类型别名 :=> 文字
>d2 : D2<文字>
>foo : 文字
>类型别名 :=> 文字

var r6 = d2.bar;
>r6 : 文字
>类型别名 :=> 文字
>d2.bar : 文字
>类型别名 :=> 文字
>d2 : D2<文字>
>bar : 文字
>类型别名 :=> 文字

var r7 = d2.thing('');
>r7 : 无值
>类型别名 :=> 无值
>d2.thing('') : 无值
>类型别名 :=> 无值
>d2.thing : (x: 文字) => 无值
>d2 : D2<文字>
>thing : (x: 文字) => 无值
>'' : ""

var r8 = D2.other(1);
>r8 : 无值
>类型别名 :=> 无值
>D2.other(1) : 无值
>类型别名 :=> 无值
>D2.other : <T>(x: T) => 无值
>D2 : 类为 D2
>other : <T>(x: T) => 无值
>1 : 1

