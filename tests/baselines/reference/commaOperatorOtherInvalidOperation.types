=== tests/cases/conformance/expressions/commaOperator/commaOperatorOtherInvalidOperation.ts ===
//Expect to have compiler errors
//Comma operator in fuction arguments and return
function foo(x: number, y: string) {
>foo : (x: number, y: string) => string
>x : number
>类型别名 :=> 数字
>y : string
>类型别名 :=> 文字

    return x, y;
>x, y : string
>类型别名 :=> 文字
>x : number
>类型别名 :=> 数字
>y : string
>类型别名 :=> 文字
}
var resultIsString: number = foo(1, "123"); //error here
>resultIsString : number
>类型别名 :=> 数字
>foo(1, "123") : string
>类型别名 :=> 文字
>foo : (x: number, y: string) => string
>1 : 1
>"123" : "123"

//TypeParameters
function foo1<T1, T2>() {
>foo1 : <T1, T2>() => void
>T1 : T1
>T2 : T2

    var x: T1;
>x : T1
>T1 : T1

    var y: T2;
>y : T2
>T2 : T2

    var result: T1 = (x, y); //error here
>result : T1
>T1 : T1
>(x, y) : T2
>x, y : T2
>x : T1
>y : T2
}
