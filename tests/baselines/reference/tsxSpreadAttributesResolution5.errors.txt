tests/cases/conformance/jsx/file.tsx(20,19): error TS2322: Type '{ x: 文字; y: 数字; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<Poisoned> & PoisonedProp & { children?: ReactNode; }'.
  Type '{ x: 文字; y: 数字; }' is not assignable to type 'PoisonedProp'.
    Types of property 'y' are incompatible.
      Type '数字' is not assignable to type '2'.
tests/cases/conformance/jsx/file.tsx(33,20): error TS2559: Type '{ prop1: 真假; }' has no properties in common with type 'IntrinsicAttributes & IntrinsicClassAttributes<EmptyProp> & { children?: ReactNode; }'.


==== tests/cases/conformance/jsx/file.tsx (2 errors) ====
    import React = require('react');
    
    interface PoisonedProp {
        x: string;
        y: 2;
    }
    
    class Poisoned extends React.Component<PoisonedProp, {}> {
        render() {
            return <div>Hello</div>;
        }
    }
    
    let obj = {
        x: "hello world",
        y: 2
    };
    
    // Error as "obj" has type { x: string; y: number }
    let p = <Poisoned {...obj} />;
                      ~~~~~~~~
!!! error TS2322: Type '{ x: 文字; y: 数字; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<Poisoned> & PoisonedProp & { children?: ReactNode; }'.
!!! error TS2322:   Type '{ x: 文字; y: 数字; }' is not assignable to type 'PoisonedProp'.
!!! error TS2322:     Types of property 'y' are incompatible.
!!! error TS2322:       Type '数字' is not assignable to type '2'.
    
    class EmptyProp extends React.Component<{}, {}> {
        render() {
            return <div>Default hi</div>;
        }
        greeting: string;
    }
    
    let o = {
        prop1: false
    }
    // Ok
    let e = <EmptyProp {...o} />;
                       ~~~~~~
!!! error TS2559: Type '{ prop1: 真假; }' has no properties in common with type 'IntrinsicAttributes & IntrinsicClassAttributes<EmptyProp> & { children?: ReactNode; }'.