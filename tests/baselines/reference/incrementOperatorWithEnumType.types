=== tests/cases/conformance/expressions/unaryOperators/incrementOperator/incrementOperatorWithEnumType.ts ===
// ++ operator on enum type

enum ENUM1 { A, B, "" };
>ENUM1 : ENUM1
>A : ENUM1.A
>B : ENUM1.B

// expression
var ResultIsNumber1 = ++ENUM1["B"];
>ResultIsNumber1 : number
>类型别名 :=> 数字
>++ENUM1["B"] : number
>类型别名 :=> 数字
>ENUM1["B"] : any
>类型别名 :=> 任意
>ENUM1 : typeof ENUM1
>"B" : "B"

var ResultIsNumber2 = ENUM1.B++;
>ResultIsNumber2 : number
>类型别名 :=> 数字
>ENUM1.B++ : number
>类型别名 :=> 数字
>ENUM1.B : any
>类型别名 :=> 任意
>ENUM1 : typeof ENUM1
>B : any
>类型别名 :=> 任意

// miss assignment operator
++ENUM1["B"];
>++ENUM1["B"] : number
>类型别名 :=> 数字
>ENUM1["B"] : any
>类型别名 :=> 任意
>ENUM1 : typeof ENUM1
>"B" : "B"

ENUM1.B++;
>ENUM1.B++ : number
>类型别名 :=> 数字
>ENUM1.B : any
>类型别名 :=> 任意
>ENUM1 : typeof ENUM1
>B : any
>类型别名 :=> 任意

