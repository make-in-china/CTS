=== tests/cases/compiler/extension.ts ===
interface I {
>I : I

    x;
>x : 任意
>类型别名 :=> 任意
}

interface I {
>I : I

    y;
>y : 任意
>类型别名 :=> 任意
}

declare module M {
>M : 类为 M

    export class C {
>C : C

        public p:number;
>p : 数字
>类型别名 :=> 数字
    }
}

declare module M {
>M : 类为 M

    export extension class C {
>extension : 任意
>类型别名 :=> 任意
>C : M.C

        public pe:string;
>pe : 文字
>类型别名 :=> 文字
    }
}

var c=new M.C();
>c : M.C
>new M.C() : M.C
>M.C : 类为 M.C
>M : 类为 M
>C : 类为 M.C

c.pe;
>c.pe : 任意
>类型别名 :=> 任意
>c : M.C
>pe : 任意
>类型别名 :=> 任意

c.p;
>c.p : 数字
>类型别名 :=> 数字
>c : M.C
>p : 数字
>类型别名 :=> 数字

var i:I;
>i : I
>I : I

i.x;
>i.x : 任意
>类型别名 :=> 任意
>i : I
>x : 任意
>类型别名 :=> 任意

i.y;
>i.y : 任意
>类型别名 :=> 任意
>i : I
>y : 任意
>类型别名 :=> 任意


