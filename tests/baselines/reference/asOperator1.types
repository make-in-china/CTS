=== tests/cases/conformance/expressions/asOperator/asOperator1.ts ===
var as = 43;
>as : 数字
>类型别名 :=> 数字
>43 : 43

var x = undefined as number;
>x : 数字
>类型别名 :=> 数字
>undefined as number : 数字
>类型别名 :=> 数字
>undefined : 未定
>类型别名 :=> 未定

var y = (null as string).length;
>y : 数字
>类型别名 :=> 数字
>(null as string).length : 数字
>类型别名 :=> 数字
>(null as string) : 文字
>类型别名 :=> 文字
>null as string : 文字
>类型别名 :=> 文字
>null : 空值
>类型别名 :=> 空值
>length : 数字
>类型别名 :=> 数字

var z = Date as any as string;
>z : 文字
>类型别名 :=> 文字
>Date as any as string : 文字
>类型别名 :=> 文字
>Date as any : 任意
>类型别名 :=> 任意
>Date : DateConstructor

// Should parse as a union type, not a bitwise 'or' of (32 as number) and 'string'
var j = 32 as number|string;
>j : 文字 | 数字
>32 as number|string : 文字 | 数字
>32 : 32

j = '';
>j = '' : ""
>j : 文字 | 数字
>'' : ""

