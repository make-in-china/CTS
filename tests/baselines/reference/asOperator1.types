=== tests/cases/conformance/expressions/asOperator/asOperator1.ts ===
var as = 43;
>as : number
>类型别名 :=> 数字
>43 : 43

var x = undefined as number;
>x : number
>类型别名 :=> 数字
>undefined as number : number
>类型别名 :=> 数字
>undefined : undefined
>类型别名 :=> 未定

var y = (null as string).length;
>y : number
>类型别名 :=> 数字
>(null as string).length : number
>类型别名 :=> 数字
>(null as string) : string
>类型别名 :=> 文字
>null as string : string
>类型别名 :=> 文字
>null : null
>类型别名 :=> 空值
>length : number
>类型别名 :=> 数字

var z = Date as any as string;
>z : string
>类型别名 :=> 文字
>Date as any as string : string
>类型别名 :=> 文字
>Date as any : any
>类型别名 :=> 任意
>Date : DateConstructor

// Should parse as a union type, not a bitwise 'or' of (32 as number) and 'string'
var j = 32 as number|string;
>j : string | number
>32 as number|string : string | number
>32 : 32

j = '';
>j = '' : ""
>j : string | number
>'' : ""

