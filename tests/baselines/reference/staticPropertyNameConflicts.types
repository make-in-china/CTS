=== tests/cases/conformance/classes/propertyMemberDeclarations/staticPropertyNameConflicts.ts ===
// name
class StaticName {
>StaticName : StaticName

    static name: number; // error
>name : 数字
>类型别名 :=> 数字

    name: string; // ok
>name : 文字
>类型别名 :=> 文字
}

class StaticNameFn {
>StaticNameFn : StaticNameFn

    static name() {} // error
>name : () => 无值

    name() {} // ok
>name : () => 无值
}

// length
class StaticLength {
>StaticLength : StaticLength

    static length: number; // error
>length : 数字
>类型别名 :=> 数字

    length: string; // ok
>length : 文字
>类型别名 :=> 文字
}

class StaticLengthFn {
>StaticLengthFn : StaticLengthFn

    static length() {} // error
>length : () => 无值

    length() {} // ok
>length : () => 无值
}

// prototype
class StaticPrototype {
>StaticPrototype : StaticPrototype

    static prototype: number; // error
>prototype : StaticPrototype

    prototype: string; // ok
>prototype : 文字
>类型别名 :=> 文字
}

class StaticPrototypeFn {
>StaticPrototypeFn : StaticPrototypeFn

    static prototype() {} // error
>prototype : () => 无值

    prototype() {} // ok
>prototype : () => 无值
}

// caller
class StaticCaller {
>StaticCaller : StaticCaller

    static caller: number; // error
>caller : 数字
>类型别名 :=> 数字

    caller: string; // ok
>caller : 文字
>类型别名 :=> 文字
}

class StaticCallerFn {
>StaticCallerFn : StaticCallerFn

    static caller() {} // error
>caller : () => 无值

    caller() {} // ok
>caller : () => 无值
}

// arguments
class StaticArguments {
>StaticArguments : StaticArguments

    static arguments: number; // error
>arguments : 数字
>类型别名 :=> 数字

    arguments: string; // ok
>arguments : 文字
>类型别名 :=> 文字
}

class StaticArgumentsFn {
>StaticArgumentsFn : StaticArgumentsFn

    static arguments() {} // error
>arguments : () => 无值

    arguments() {} // ok
>arguments : () => 无值
}



// === Static properties on anonymous classes ===

// name
var StaticName_Anonymous = class {
>StaticName_Anonymous : 类为 StaticName_Anonymous
>class {    static name: number; // error    name: string; // ok} : 类为 StaticName_Anonymous

    static name: number; // error
>name : 数字
>类型别名 :=> 数字

    name: string; // ok
>name : 文字
>类型别名 :=> 文字
}

var StaticNameFn_Anonymous = class {
>StaticNameFn_Anonymous : 类为 StaticNameFn_Anonymous
>class {    static name() {} // error    name() {} // ok} : 类为 StaticNameFn_Anonymous

    static name() {} // error
>name : () => 无值

    name() {} // ok
>name : () => 无值
}

// length
var StaticLength_Anonymous = class {
>StaticLength_Anonymous : 类为 StaticLength_Anonymous
>class {    static length: number; // error    length: string; // ok} : 类为 StaticLength_Anonymous

    static length: number; // error
>length : 数字
>类型别名 :=> 数字

    length: string; // ok
>length : 文字
>类型别名 :=> 文字
}

var StaticLengthFn_Anonymous = class {
>StaticLengthFn_Anonymous : 类为 StaticLengthFn_Anonymous
>class {    static length() {} // error    length() {} // ok} : 类为 StaticLengthFn_Anonymous

    static length() {} // error
>length : () => 无值

    length() {} // ok
>length : () => 无值
}

// prototype
var StaticPrototype_Anonymous = class {
>StaticPrototype_Anonymous : 类为 StaticPrototype_Anonymous
>class {    static prototype: number; // error    prototype: string; // ok} : 类为 StaticPrototype_Anonymous

    static prototype: number; // error
>prototype : StaticPrototype_Anonymous

    prototype: string; // ok
>prototype : 文字
>类型别名 :=> 文字
}

var StaticPrototypeFn_Anonymous = class {
>StaticPrototypeFn_Anonymous : 类为 StaticPrototypeFn_Anonymous
>class {    static prototype() {} // error    prototype() {} // ok} : 类为 StaticPrototypeFn_Anonymous

    static prototype() {} // error
>prototype : () => 无值

    prototype() {} // ok
>prototype : () => 无值
}

// caller
var StaticCaller_Anonymous = class {
>StaticCaller_Anonymous : 类为 StaticCaller_Anonymous
>class {    static caller: number; // error    caller: string; // ok} : 类为 StaticCaller_Anonymous

    static caller: number; // error
>caller : 数字
>类型别名 :=> 数字

    caller: string; // ok
>caller : 文字
>类型别名 :=> 文字
}

var StaticCallerFn_Anonymous = class {
>StaticCallerFn_Anonymous : 类为 StaticCallerFn_Anonymous
>class {    static caller() {} // error    caller() {} // ok} : 类为 StaticCallerFn_Anonymous

    static caller() {} // error
>caller : () => 无值

    caller() {} // ok
>caller : () => 无值
}

// arguments
var StaticArguments_Anonymous = class {
>StaticArguments_Anonymous : 类为 StaticArguments_Anonymous
>class {    static arguments: number; // error    arguments: string; // ok} : 类为 StaticArguments_Anonymous

    static arguments: number; // error
>arguments : 数字
>类型别名 :=> 数字

    arguments: string; // ok
>arguments : 文字
>类型别名 :=> 文字
}

var StaticArgumentsFn_Anonymous = class {
>StaticArgumentsFn_Anonymous : 类为 StaticArgumentsFn_Anonymous
>class {    static arguments() {} // error    arguments() {} // ok} : 类为 StaticArgumentsFn_Anonymous

    static arguments() {} // error
>arguments : () => 无值

    arguments() {} // ok
>arguments : () => 无值
}


// === Static properties on default exported classes ===

// name
module TestOnDefaultExportedClass_1 {
>TestOnDefaultExportedClass_1 : 类为 TestOnDefaultExportedClass_1

    class StaticName {
>StaticName : StaticName

        static name: number; // error
>name : 数字
>类型别名 :=> 数字

        name: string; // ok
>name : 文字
>类型别名 :=> 文字
    }
}

module TestOnDefaultExportedClass_2 {
>TestOnDefaultExportedClass_2 : 类为 TestOnDefaultExportedClass_2

    class StaticNameFn {
>StaticNameFn : StaticNameFn

        static name() {} // error
>name : () => 无值

        name() {} // ok
>name : () => 无值
    }
}

// length
module TestOnDefaultExportedClass_3 {
>TestOnDefaultExportedClass_3 : 类为 TestOnDefaultExportedClass_3

    export default class StaticLength {
>StaticLength : StaticLength

        static length: number; // error
>length : 数字
>类型别名 :=> 数字

        length: string; // ok
>length : 文字
>类型别名 :=> 文字
    }
}

module TestOnDefaultExportedClass_4 {
>TestOnDefaultExportedClass_4 : 类为 TestOnDefaultExportedClass_4

    export default class StaticLengthFn {
>StaticLengthFn : StaticLengthFn

        static length() {} // error
>length : () => 无值

        length() {} // ok
>length : () => 无值
    }
}

// prototype
module TestOnDefaultExportedClass_5 {    
>TestOnDefaultExportedClass_5 : 类为 TestOnDefaultExportedClass_5

    export default class StaticPrototype {
>StaticPrototype : StaticPrototype

        static prototype: number; // error
>prototype : StaticPrototype

        prototype: string; // ok
>prototype : 文字
>类型别名 :=> 文字
    }
}

module TestOnDefaultExportedClass_6 {
>TestOnDefaultExportedClass_6 : 类为 TestOnDefaultExportedClass_6

    export default class StaticPrototypeFn {
>StaticPrototypeFn : StaticPrototypeFn

        static prototype() {} // error
>prototype : () => 无值

        prototype() {} // ok
>prototype : () => 无值
    }
}

// caller
module TestOnDefaultExportedClass_7 {
>TestOnDefaultExportedClass_7 : 类为 TestOnDefaultExportedClass_7

    export default class StaticCaller {
>StaticCaller : StaticCaller

        static caller: number; // error
>caller : 数字
>类型别名 :=> 数字

        caller: string; // ok
>caller : 文字
>类型别名 :=> 文字
    }
}

module TestOnDefaultExportedClass_8 {
>TestOnDefaultExportedClass_8 : 类为 TestOnDefaultExportedClass_8

    export default class StaticCallerFn {
>StaticCallerFn : StaticCallerFn

        static caller() {} // error
>caller : () => 无值

        caller() {} // ok
>caller : () => 无值
    }
}

// arguments
module TestOnDefaultExportedClass_9 {
>TestOnDefaultExportedClass_9 : 类为 TestOnDefaultExportedClass_9

    export default class StaticArguments {
>StaticArguments : StaticArguments

        static arguments: number; // error
>arguments : 数字
>类型别名 :=> 数字

        arguments: string; // ok
>arguments : 文字
>类型别名 :=> 文字
    }
}

module TestOnDefaultExportedClass_10 {
>TestOnDefaultExportedClass_10 : 类为 TestOnDefaultExportedClass_10

    export default class StaticArgumentsFn {
>StaticArgumentsFn : StaticArgumentsFn

        static arguments() {} // error
>arguments : () => 无值

        arguments() {} // ok
>arguments : () => 无值
    }
}
