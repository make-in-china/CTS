=== tests/cases/compiler/capturedLetConstInLoop4.ts ===
//======let
export function exportedFoo() {
>exportedFoo : () => 文字

    return v0 + v00 + v1 + v2 + v3 + v4 + v5 + v6 + v7 + v8;
>v0 + v00 + v1 + v2 + v3 + v4 + v5 + v6 + v7 + v8 : 文字
>类型别名 :=> 文字
>v0 + v00 + v1 + v2 + v3 + v4 + v5 + v6 + v7 : 文字
>类型别名 :=> 文字
>v0 + v00 + v1 + v2 + v3 + v4 + v5 + v6 : 文字
>类型别名 :=> 文字
>v0 + v00 + v1 + v2 + v3 + v4 + v5 : 文字
>类型别名 :=> 文字
>v0 + v00 + v1 + v2 + v3 + v4 : 文字
>类型别名 :=> 文字
>v0 + v00 + v1 + v2 + v3 : 文字
>类型别名 :=> 文字
>v0 + v00 + v1 + v2 : 文字
>类型别名 :=> 文字
>v0 + v00 + v1 : 文字
>类型别名 :=> 文字
>v0 + v00 : 文字
>类型别名 :=> 文字
>v0 : 任意
>类型别名 :=> 任意
>v00 : 文字
>类型别名 :=> 文字
>v1 : 数字
>类型别名 :=> 数字
>v2 : 任意
>类型别名 :=> 任意
>v3 : 任意
>类型别名 :=> 任意
>v4 : 数字
>类型别名 :=> 数字
>v5 : 数字
>类型别名 :=> 数字
>v6 : 任意
>类型别名 :=> 任意
>v7 : 任意
>类型别名 :=> 任意
>v8 : 数字
>类型别名 :=> 数字
}

for (let x of []) {
>x : 任意
>类型别名 :=> 任意
>[] : 未定[]

    var v0 = x;
>v0 : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意

    (function() { return x + v0});
>(function() { return x + v0}) : () => 任意
>function() { return x + v0} : () => 任意
>x + v0 : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>v0 : 任意
>类型别名 :=> 任意

    (() => x);    
>(() => x) : () => 任意
>() => x : () => 任意
>x : 任意
>类型别名 :=> 任意
}

for (let x in []) {
>x : 文字
>类型别名 :=> 文字
>[] : 未定[]

    var v00 = x;
>v00 : 文字
>类型别名 :=> 文字
>x : 文字
>类型别名 :=> 文字

    (function() { return x + v00});
>(function() { return x + v00}) : () => 文字
>function() { return x + v00} : () => 文字
>x + v00 : 文字
>类型别名 :=> 文字
>x : 文字
>类型别名 :=> 文字
>v00 : 文字
>类型别名 :=> 文字

    (() => x);    
>(() => x) : () => 文字
>() => x : () => 文字
>x : 文字
>类型别名 :=> 文字
}

for (let x = 0; x < 1; ++x) {
>x : 数字
>类型别名 :=> 数字
>0 : 0
>x < 1 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>1 : 1
>++x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

    var v1 = x;
>v1 : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

    (function() { return x + v1});
>(function() { return x + v1}) : () => 数字
>function() { return x + v1} : () => 数字
>x + v1 : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>v1 : 数字
>类型别名 :=> 数字

    (() => x);
>(() => x) : () => 数字
>() => x : () => 数字
>x : 数字
>类型别名 :=> 数字
}

while (1 === 1) {
>1 === 1 : 真假
>类型别名 :=> 真假
>1 : 1
>1 : 1

    let x;
>x : 任意
>类型别名 :=> 任意

    var v2 = x;
>v2 : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意

    (function() { return x + v2});
>(function() { return x + v2}) : () => 任意
>function() { return x + v2} : () => 任意
>x + v2 : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>v2 : 任意
>类型别名 :=> 任意

    (() => x);
>(() => x) : () => 任意
>() => x : () => 任意
>x : 任意
>类型别名 :=> 任意
}

do {
    let x;
>x : 任意
>类型别名 :=> 任意

    var v3 = x;
>v3 : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意

    (function() { return x + v3});
>(function() { return x + v3}) : () => 任意
>function() { return x + v3} : () => 任意
>x + v3 : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>v3 : 任意
>类型别名 :=> 任意

    (() => x);
>(() => x) : () => 任意
>() => x : () => 任意
>x : 任意
>类型别名 :=> 任意

} while (1 === 1)
>1 === 1 : 真假
>类型别名 :=> 真假
>1 : 1
>1 : 1

for (let y = 0; y < 1; ++y) {
>y : 数字
>类型别名 :=> 数字
>0 : 0
>y < 1 : 真假
>类型别名 :=> 真假
>y : 数字
>类型别名 :=> 数字
>1 : 1
>++y : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

    let x = 1;
>x : 数字
>类型别名 :=> 数字
>1 : 1

    var v4 = x;
>v4 : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

    (function() { return x + v4});
>(function() { return x + v4}) : () => 数字
>function() { return x + v4} : () => 数字
>x + v4 : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>v4 : 数字
>类型别名 :=> 数字

    (() => x);
>(() => x) : () => 数字
>() => x : () => 数字
>x : 数字
>类型别名 :=> 数字
}

for (let x = 0, y = 1; x < 1; ++x) {
>x : 数字
>类型别名 :=> 数字
>0 : 0
>y : 数字
>类型别名 :=> 数字
>1 : 1
>x < 1 : 真假
>类型别名 :=> 真假
>x : 数字
>类型别名 :=> 数字
>1 : 1
>++x : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

    var v5 = x;
>v5 : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

    (function() { return x + y + v5});
>(function() { return x + y + v5}) : () => 数字
>function() { return x + y + v5} : () => 数字
>x + y + v5 : 数字
>类型别名 :=> 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字
>v5 : 数字
>类型别名 :=> 数字

    (() => x + y);
>(() => x + y) : () => 数字
>() => x + y : () => 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字
}

while (1 === 1) {
>1 === 1 : 真假
>类型别名 :=> 真假
>1 : 1
>1 : 1

    let x, y;
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

    var v6 = x;
>v6 : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意

    (function() { return x + y + v6});
>(function() { return x + y + v6}) : () => 任意
>function() { return x + y + v6} : () => 任意
>x + y + v6 : 任意
>类型别名 :=> 任意
>x + y : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>v6 : 任意
>类型别名 :=> 任意

    (() => x + y);
>(() => x + y) : () => 任意
>() => x + y : () => 任意
>x + y : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
}

do {
    let x, y;
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

    var v7 = x;
>v7 : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意

    (function() { return x + y + v7});
>(function() { return x + y + v7}) : () => 任意
>function() { return x + y + v7} : () => 任意
>x + y + v7 : 任意
>类型别名 :=> 任意
>x + y : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意
>v7 : 任意
>类型别名 :=> 任意

    (() => x + y);
>(() => x + y) : () => 任意
>() => x + y : () => 任意
>x + y : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>y : 任意
>类型别名 :=> 任意

} while (1 === 1)
>1 === 1 : 真假
>类型别名 :=> 真假
>1 : 1
>1 : 1

for (let y = 0; y < 1; ++y) {
>y : 数字
>类型别名 :=> 数字
>0 : 0
>y < 1 : 真假
>类型别名 :=> 真假
>y : 数字
>类型别名 :=> 数字
>1 : 1
>++y : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字

    let x = 1;
>x : 数字
>类型别名 :=> 数字
>1 : 1

    var v8 = x;
>v8 : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字

    (function() { return x + y + v8});
>(function() { return x + y + v8}) : () => 数字
>function() { return x + y + v8} : () => 数字
>x + y + v8 : 数字
>类型别名 :=> 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字
>v8 : 数字
>类型别名 :=> 数字

    (() => x + y);
>(() => x + y) : () => 数字
>() => x + y : () => 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 数字
>类型别名 :=> 数字
>y : 数字
>类型别名 :=> 数字
}

//======const
export function exportedFoo2() {
>exportedFoo2 : () => 文字

    return v0_c + v00_c + v1_c + v2_c + v3_c + v4_c + v5_c + v6_c + v7_c + v8_c;
>v0_c + v00_c + v1_c + v2_c + v3_c + v4_c + v5_c + v6_c + v7_c + v8_c : 文字
>类型别名 :=> 文字
>v0_c + v00_c + v1_c + v2_c + v3_c + v4_c + v5_c + v6_c + v7_c : 文字
>类型别名 :=> 文字
>v0_c + v00_c + v1_c + v2_c + v3_c + v4_c + v5_c + v6_c : 文字
>类型别名 :=> 文字
>v0_c + v00_c + v1_c + v2_c + v3_c + v4_c + v5_c : 文字
>类型别名 :=> 文字
>v0_c + v00_c + v1_c + v2_c + v3_c + v4_c : 文字
>类型别名 :=> 文字
>v0_c + v00_c + v1_c + v2_c + v3_c : 文字
>类型别名 :=> 文字
>v0_c + v00_c + v1_c + v2_c : 文字
>类型别名 :=> 文字
>v0_c + v00_c + v1_c : 文字
>类型别名 :=> 文字
>v0_c + v00_c : 文字
>类型别名 :=> 文字
>v0_c : 任意
>类型别名 :=> 任意
>v00_c : 文字
>类型别名 :=> 文字
>v1_c : 数字
>类型别名 :=> 数字
>v2_c : 数字
>类型别名 :=> 数字
>v3_c : 数字
>类型别名 :=> 数字
>v4_c : 数字
>类型别名 :=> 数字
>v5_c : 数字
>类型别名 :=> 数字
>v6_c : 数字
>类型别名 :=> 数字
>v7_c : 数字
>类型别名 :=> 数字
>v8_c : 数字
>类型别名 :=> 数字
}

for (const x of []) {
>x : 任意
>类型别名 :=> 任意
>[] : 未定[]

    var v0_c = x;
>v0_c : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意

    (function() { return x + v0_c});
>(function() { return x + v0_c}) : () => 任意
>function() { return x + v0_c} : () => 任意
>x + v0_c : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
>v0_c : 任意
>类型别名 :=> 任意

    (() => x);    
>(() => x) : () => 任意
>() => x : () => 任意
>x : 任意
>类型别名 :=> 任意
}

for (const x in []) {
>x : 文字
>类型别名 :=> 文字
>[] : 未定[]

    var v00_c = x;
>v00_c : 文字
>类型别名 :=> 文字
>x : 文字
>类型别名 :=> 文字

    (function() { return x + v00});
>(function() { return x + v00}) : () => 文字
>function() { return x + v00} : () => 文字
>x + v00 : 文字
>类型别名 :=> 文字
>x : 文字
>类型别名 :=> 文字
>v00 : 文字
>类型别名 :=> 文字

    (() => x);    
>(() => x) : () => 文字
>() => x : () => 文字
>x : 文字
>类型别名 :=> 文字
}

for (const x = 0; x < 1;) {
>x : 0
>0 : 0
>x < 1 : 真假
>类型别名 :=> 真假
>x : 0
>1 : 1

    var v1_c = x;
>v1_c : 数字
>类型别名 :=> 数字
>x : 0

    (function() { return x + v1_c});
>(function() { return x + v1_c}) : () => 数字
>function() { return x + v1_c} : () => 数字
>x + v1_c : 数字
>类型别名 :=> 数字
>x : 0
>v1_c : 数字
>类型别名 :=> 数字

    (() => x);
>(() => x) : () => 数字
>() => x : () => 数字
>x : 0
}

while (1 === 1) {
>1 === 1 : 真假
>类型别名 :=> 真假
>1 : 1
>1 : 1

    const x =1;
>x : 1
>1 : 1

    var v2_c = x;
>v2_c : 数字
>类型别名 :=> 数字
>x : 1

    (function() { return x + v2_c});
>(function() { return x + v2_c}) : () => 数字
>function() { return x + v2_c} : () => 数字
>x + v2_c : 数字
>类型别名 :=> 数字
>x : 1
>v2_c : 数字
>类型别名 :=> 数字

    (() => x);
>(() => x) : () => 数字
>() => x : () => 数字
>x : 1
}

do {
    const x = 1;
>x : 1
>1 : 1

    var v3_c = x;
>v3_c : 数字
>类型别名 :=> 数字
>x : 1

    (function() { return x + v3_c});
>(function() { return x + v3_c}) : () => 数字
>function() { return x + v3_c} : () => 数字
>x + v3_c : 数字
>类型别名 :=> 数字
>x : 1
>v3_c : 数字
>类型别名 :=> 数字

    (() => x);
>(() => x) : () => 数字
>() => x : () => 数字
>x : 1

} while (1 === 1)
>1 === 1 : 真假
>类型别名 :=> 真假
>1 : 1
>1 : 1

for (const y = 0; y < 1;) {
>y : 0
>0 : 0
>y < 1 : 真假
>类型别名 :=> 真假
>y : 0
>1 : 1

    const x = 1;
>x : 1
>1 : 1

    var v4_c = x;
>v4_c : 数字
>类型别名 :=> 数字
>x : 1

    (function() { return x + v4_c});
>(function() { return x + v4_c}) : () => 数字
>function() { return x + v4_c} : () => 数字
>x + v4_c : 数字
>类型别名 :=> 数字
>x : 1
>v4_c : 数字
>类型别名 :=> 数字

    (() => x);
>(() => x) : () => 数字
>() => x : () => 数字
>x : 1
}

for (const x = 0, y = 1; x < 1;) {
>x : 0
>0 : 0
>y : 1
>1 : 1
>x < 1 : 真假
>类型别名 :=> 真假
>x : 0
>1 : 1

    var v5_c = x;
>v5_c : 数字
>类型别名 :=> 数字
>x : 0

    (function() { return x + y + v5_c});
>(function() { return x + y + v5_c}) : () => 数字
>function() { return x + y + v5_c} : () => 数字
>x + y + v5_c : 数字
>类型别名 :=> 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 0
>y : 1
>v5_c : 数字
>类型别名 :=> 数字

    (() => x + y);
>(() => x + y) : () => 数字
>() => x + y : () => 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 0
>y : 1
}

while (1 === 1) {
>1 === 1 : 真假
>类型别名 :=> 真假
>1 : 1
>1 : 1

    const x = 1, y = 1;
>x : 1
>1 : 1
>y : 1
>1 : 1

    var v6_c = x;
>v6_c : 数字
>类型别名 :=> 数字
>x : 1

    (function() { return x + y + v6_c});
>(function() { return x + y + v6_c}) : () => 数字
>function() { return x + y + v6_c} : () => 数字
>x + y + v6_c : 数字
>类型别名 :=> 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 1
>y : 1
>v6_c : 数字
>类型别名 :=> 数字

    (() => x + y);
>(() => x + y) : () => 数字
>() => x + y : () => 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 1
>y : 1
}

do {
    const x = 1, y = 1;
>x : 1
>1 : 1
>y : 1
>1 : 1

    var v7_c = x;
>v7_c : 数字
>类型别名 :=> 数字
>x : 1

    (function() { return x + y + v7_c});
>(function() { return x + y + v7_c}) : () => 数字
>function() { return x + y + v7_c} : () => 数字
>x + y + v7_c : 数字
>类型别名 :=> 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 1
>y : 1
>v7_c : 数字
>类型别名 :=> 数字

    (() => x + y);
>(() => x + y) : () => 数字
>() => x + y : () => 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 1
>y : 1

} while (1 === 1)
>1 === 1 : 真假
>类型别名 :=> 真假
>1 : 1
>1 : 1

for (const y = 0; y < 1;) {
>y : 0
>0 : 0
>y < 1 : 真假
>类型别名 :=> 真假
>y : 0
>1 : 1

    const x = 1;
>x : 1
>1 : 1

    var v8_c = x;
>v8_c : 数字
>类型别名 :=> 数字
>x : 1

    (function() { return x + y + v8_c});
>(function() { return x + y + v8_c}) : () => 数字
>function() { return x + y + v8_c} : () => 数字
>x + y + v8_c : 数字
>类型别名 :=> 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 1
>y : 0
>v8_c : 数字
>类型别名 :=> 数字

    (() => x + y);
>(() => x + y) : () => 数字
>() => x + y : () => 数字
>x + y : 数字
>类型别名 :=> 数字
>x : 1
>y : 0
}

