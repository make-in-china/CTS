=== tests/cases/compiler/jsDocOptionality.js ===
function MyClass() {
>MyClass : () => 无值

  this.prop = null;
>this.prop = null : 空值
>类型别名 :=> 空值
>this.prop : 任意
>类型别名 :=> 任意
>this : 任意
>类型别名 :=> 任意
>prop : 任意
>类型别名 :=> 任意
>null : 空值
>类型别名 :=> 空值
}
/**
 * @param  {string} required
 * @param  {string} [notRequired]
 * @returns {MyClass}
 */
MyClass.prototype.optionalParam = function(required, notRequired) {
>MyClass.prototype.optionalParam = function(required, notRequired) {    return this;} : (required: 文字, notRequired?: 文字) => { prop: 任意; optionalParam: 任意; }
>MyClass.prototype.optionalParam : 任意
>类型别名 :=> 任意
>MyClass.prototype : 任意
>类型别名 :=> 任意
>MyClass : () => 无值
>prototype : 任意
>类型别名 :=> 任意
>optionalParam : 任意
>类型别名 :=> 任意
>function(required, notRequired) {    return this;} : (required: 文字, notRequired?: 文字) => { prop: 任意; optionalParam: 任意; }
>required : 文字
>类型别名 :=> 文字
>notRequired : 文字
>类型别名 :=> 文字

    return this;
>this : { prop: 任意; optionalParam: (required: 文字, notRequired?: 文字) => 类为 MyClass; }

};
let pInst = new MyClass();
>pInst : { prop: 任意; optionalParam: (required: 文字, notRequired?: 文字) => 类为 MyClass; }
>new MyClass() : { prop: 任意; optionalParam: (required: 文字, notRequired?: 文字) => 类为 MyClass; }
>MyClass : () => 无值

let c1 = pInst.optionalParam('hello')
>c1 : { prop: 任意; optionalParam: (required: 文字, notRequired?: 文字) => 类为 MyClass; }
>pInst.optionalParam('hello') : { prop: 任意; optionalParam: (required: 文字, notRequired?: 文字) => 类为 MyClass; }
>pInst.optionalParam : (required: 文字, notRequired?: 文字) => { prop: 任意; optionalParam: 任意; }
>pInst : { prop: 任意; optionalParam: (required: 文字, notRequired?: 文字) => 类为 MyClass; }
>optionalParam : (required: 文字, notRequired?: 文字) => { prop: 任意; optionalParam: 任意; }
>'hello' : "hello"

let c2 = pInst.optionalParam('hello', null)
>c2 : { prop: 任意; optionalParam: (required: 文字, notRequired?: 文字) => 类为 MyClass; }
>pInst.optionalParam('hello', null) : { prop: 任意; optionalParam: (required: 文字, notRequired?: 文字) => 类为 MyClass; }
>pInst.optionalParam : (required: 文字, notRequired?: 文字) => { prop: 任意; optionalParam: 任意; }
>pInst : { prop: 任意; optionalParam: (required: 文字, notRequired?: 文字) => 类为 MyClass; }
>optionalParam : (required: 文字, notRequired?: 文字) => { prop: 任意; optionalParam: 任意; }
>'hello' : "hello"
>null : 空值
>类型别名 :=> 空值

