=== tests/cases/conformance/jsx/file.tsx ===
declare module JSX {
>JSX : 任意
>类型别名 :=> 任意

	interface Element { }
>Element : Element

	interface ElementAttributesProperty { pr: any; }
>ElementAttributesProperty : ElementAttributesProperty
>pr : 任意
>类型别名 :=> 任意

	interface IntrinsicElements { }
>IntrinsicElements : IntrinsicElements
}

interface Obj1type {
>Obj1type : Obj1type

	new(n: string): any;
>n : 文字
>类型别名 :=> 文字
}
var Obj1: Obj1type;
>Obj1 : Obj1type
>Obj1type : Obj1type

<Obj1 x={10} />; // OK
><Obj1 x={10} /> : JSX.Element
>Obj1 : Obj1type
>x : 数字
>类型别名 :=> 数字
>10 : 10

interface Obj2type {
>Obj2type : Obj2type

	new(n: string): { q?: number; pr: any };
>n : 文字
>类型别名 :=> 文字
>q : 数字
>类型别名 :=> 数字
>pr : 任意
>类型别名 :=> 任意
}
var Obj2: Obj2type;
>Obj2 : Obj2type
>Obj2type : Obj2type

<Obj2 x={10} />; // OK
><Obj2 x={10} /> : JSX.Element
>Obj2 : Obj2type
>x : 数字
>类型别名 :=> 数字
>10 : 10

interface Obj3type {
>Obj3type : Obj3type

	new(n: string): { x: number; };
>n : 文字
>类型别名 :=> 文字
>x : 数字
>类型别名 :=> 数字
}
var Obj3: Obj3type;
>Obj3 : Obj3type
>Obj3type : Obj3type

<Obj3 x={10} />; // Error
><Obj3 x={10} /> : JSX.Element
>Obj3 : Obj3type
>x : 数字
>类型别名 :=> 数字
>10 : 10

var attributes: any;
>attributes : 任意
>类型别名 :=> 任意

<Obj3 {...attributes} />; // Error
><Obj3 {...attributes} /> : JSX.Element
>Obj3 : Obj3type
>attributes : 任意
>类型别名 :=> 任意

<Obj3 {...{}} />; // OK
><Obj3 {...{}} /> : JSX.Element
>Obj3 : Obj3type
>{} : {}

interface Obj4type {
>Obj4type : Obj4type

	new(n: string): { x: number; pr: { x: number; } };
>n : 文字
>类型别名 :=> 文字
>x : 数字
>类型别名 :=> 数字
>pr : { x: 数字; }
>x : 数字
>类型别名 :=> 数字
}
var Obj4: Obj4type;
>Obj4 : Obj4type
>Obj4type : Obj4type

<Obj4 x={10} />; // OK
><Obj4 x={10} /> : JSX.Element
>Obj4 : Obj4type
>x : 数字
>类型别名 :=> 数字
>10 : 10

<Obj4 x={'10'} />; // Error
><Obj4 x={'10'} /> : JSX.Element
>Obj4 : Obj4type
>x : 文字
>类型别名 :=> 文字
>'10' : "10"

