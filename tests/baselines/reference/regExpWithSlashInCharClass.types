=== tests/cases/compiler/regExpWithSlashInCharClass.ts ===
var foo1 = "a/".replace(/.[/]/, "");
>foo1 : 文字
>类型别名 :=> 文字
>"a/".replace(/.[/]/, "") : 文字
>类型别名 :=> 文字
>"a/".replace : { (searchValue: 文字 | RegExp, replaceValue: 文字): 文字; (searchValue: 文字 | RegExp, replacer: (substring: 文字, ...args: 任意[]) => 文字): 文字; }
>"a/" : "a/"
>replace : { (searchValue: 文字 | RegExp, replaceValue: 文字): 文字; (searchValue: 文字 | RegExp, replacer: (substring: 文字, ...args: 任意[]) => 文字): 文字; }
>/.[/]/ : RegExp
>"" : ""

var foo2 = "a//".replace(/.[//]/g, "");
>foo2 : 文字
>类型别名 :=> 文字
>"a//".replace(/.[//]/g, "") : 文字
>类型别名 :=> 文字
>"a//".replace : { (searchValue: 文字 | RegExp, replaceValue: 文字): 文字; (searchValue: 文字 | RegExp, replacer: (substring: 文字, ...args: 任意[]) => 文字): 文字; }
>"a//" : "a//"
>replace : { (searchValue: 文字 | RegExp, replaceValue: 文字): 文字; (searchValue: 文字 | RegExp, replacer: (substring: 文字, ...args: 任意[]) => 文字): 文字; }
>/.[//]/g : RegExp
>"" : ""

var foo3 = "a/".replace(/.[/no sleep /till/]/, "bugfix");
>foo3 : 文字
>类型别名 :=> 文字
>"a/".replace(/.[/no sleep /till/]/, "bugfix") : 文字
>类型别名 :=> 文字
>"a/".replace : { (searchValue: 文字 | RegExp, replaceValue: 文字): 文字; (searchValue: 文字 | RegExp, replacer: (substring: 文字, ...args: 任意[]) => 文字): 文字; }
>"a/" : "a/"
>replace : { (searchValue: 文字 | RegExp, replaceValue: 文字): 文字; (searchValue: 文字 | RegExp, replacer: (substring: 文字, ...args: 任意[]) => 文字): 文字; }
>/.[/no sleep /till/]/ : RegExp
>"bugfix" : "bugfix"

