=== tests/cases/compiler/objectLiteralParameterResolution.ts ===
interface Foo{
>Foo : Foo

    extend<T>(target: T, ...objs: any[]): T;
>extend : { <T>(target: T, ...objs: 任意[]): T; <T>(deep: 真假, target: T, ...objs: 任意[]): T; }
>T : T
>target : T
>T : T
>objs : 任意[]
>T : T

    extend<T>(deep: boolean, target: T, ...objs: any[]): T;
>extend : { <T>(target: T, ...objs: 任意[]): T; <T>(deep: 真假, target: T, ...objs: 任意[]): T; }
>T : T
>deep : 真假
>类型别名 :=> 真假
>target : T
>T : T
>objs : 任意[]
>T : T
}
declare var $: Foo;
>$ : Foo
>Foo : Foo

var s = $.extend({
>s : { type: 文字; data: 文字; success: 任意; error: 任意; dataType: 文字; converters: { "text json": 文字; }; traditional: 真假; timeout: 数字; }
>$.extend({    type: "GET" ,    data: "data" ,    success: wrapSuccessCallback(requestContext, callback) ,    error: wrapErrorCallback(requestContext, errorCallback) ,    dataType: "json" ,    converters: { "text json": "" },    traditional: true ,    timeout: 12,    }, "") : { type: 文字; data: 文字; success: 任意; error: 任意; dataType: 文字; converters: { "text json": 文字; }; traditional: 真假; timeout: 数字; }
>$.extend : { <T>(target: T, ...objs: 任意[]): T; <T>(deep: 真假, target: T, ...objs: 任意[]): T; }
>$ : Foo
>extend : { <T>(target: T, ...objs: 任意[]): T; <T>(deep: 真假, target: T, ...objs: 任意[]): T; }
>{    type: "GET" ,    data: "data" ,    success: wrapSuccessCallback(requestContext, callback) ,    error: wrapErrorCallback(requestContext, errorCallback) ,    dataType: "json" ,    converters: { "text json": "" },    traditional: true ,    timeout: 12,    } : { type: 文字; data: 文字; success: 任意; error: 任意; dataType: 文字; converters: { "text json": 文字; }; traditional: 为真; timeout: 数字; }

    type: "GET" ,
>type : 文字
>类型别名 :=> 文字
>"GET" : "GET"

    data: "data" ,
>data : 文字
>类型别名 :=> 文字
>"data" : "data"

    success: wrapSuccessCallback(requestContext, callback) ,
>success : 任意
>类型别名 :=> 任意
>wrapSuccessCallback(requestContext, callback) : 任意
>类型别名 :=> 任意
>wrapSuccessCallback : 任意
>类型别名 :=> 任意
>requestContext : 任意
>类型别名 :=> 任意
>callback : 任意
>类型别名 :=> 任意

    error: wrapErrorCallback(requestContext, errorCallback) ,
>error : 任意
>类型别名 :=> 任意
>wrapErrorCallback(requestContext, errorCallback) : 任意
>类型别名 :=> 任意
>wrapErrorCallback : 任意
>类型别名 :=> 任意
>requestContext : 任意
>类型别名 :=> 任意
>errorCallback : 任意
>类型别名 :=> 任意

    dataType: "json" ,
>dataType : 文字
>类型别名 :=> 文字
>"json" : "json"

    converters: { "text json": "" },
>converters : { "text json": 文字; }
>{ "text json": "" } : { "text json": 文字; }
>"" : ""

    traditional: true ,
>traditional : 真假
>类型别名 :=> 真假
>true : 为真
>类型别名 :=> 为真

    timeout: 12,
>timeout : 数字
>类型别名 :=> 数字
>12 : 12

    }, "");
>"" : ""

