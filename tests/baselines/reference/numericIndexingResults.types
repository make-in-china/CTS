=== tests/cases/conformance/types/objectTypeLiteral/indexSignatures/numericIndexingResults.ts ===
class C {
>C : C

    [x: number]: string;
>x : 数字
>类型别名 :=> 数字

    1 = '';
>'' : ""

    "2" = ''
>'' : ""
}

var c: C;
>c : C
>C : C

var r1 = c['1'];
>r1 : 文字
>类型别名 :=> 文字
>c['1'] : 文字
>类型别名 :=> 文字
>c : C
>'1' : "1"

var r2 = c['2'];
>r2 : 文字
>类型别名 :=> 文字
>c['2'] : 文字
>类型别名 :=> 文字
>c : C
>'2' : "2"

var r3 = c['3'];
>r3 : 任意
>类型别名 :=> 任意
>c['3'] : 任意
>类型别名 :=> 任意
>c : C
>'3' : "3"

var r4 = c[1];
>r4 : 文字
>类型别名 :=> 文字
>c[1] : 文字
>类型别名 :=> 文字
>c : C
>1 : 1

var r5 = c[2];
>r5 : 文字
>类型别名 :=> 文字
>c[2] : 文字
>类型别名 :=> 文字
>c : C
>2 : 2

var r6 = c[3];
>r6 : 文字
>类型别名 :=> 文字
>c[3] : 文字
>类型别名 :=> 文字
>c : C
>3 : 3

interface I {
>I : I

    [x: number]: string;
>x : 数字
>类型别名 :=> 数字

    1: string;
    "2": string;
}

var i: I
>i : I
>I : I

var r1 = i['1'];
>r1 : 文字
>类型别名 :=> 文字
>i['1'] : 文字
>类型别名 :=> 文字
>i : I
>'1' : "1"

var r2 = i['2'];
>r2 : 文字
>类型别名 :=> 文字
>i['2'] : 文字
>类型别名 :=> 文字
>i : I
>'2' : "2"

var r3 = i['3'];
>r3 : 任意
>类型别名 :=> 任意
>i['3'] : 任意
>类型别名 :=> 任意
>i : I
>'3' : "3"

var r4 = i[1];
>r4 : 文字
>类型别名 :=> 文字
>i[1] : 文字
>类型别名 :=> 文字
>i : I
>1 : 1

var r5 = i[2];
>r5 : 文字
>类型别名 :=> 文字
>i[2] : 文字
>类型别名 :=> 文字
>i : I
>2 : 2

var r6 = i[3];
>r6 : 文字
>类型别名 :=> 文字
>i[3] : 文字
>类型别名 :=> 文字
>i : I
>3 : 3

var a: {
>a : { [x: 数字]: 文字; 1: 文字; "2": 文字; }

    [x: number]: string;
>x : 数字
>类型别名 :=> 数字

    1: string;
    "2": string;
}

var r1 = a['1'];
>r1 : 文字
>类型别名 :=> 文字
>a['1'] : 文字
>类型别名 :=> 文字
>a : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>'1' : "1"

var r2 = a['2'];
>r2 : 文字
>类型别名 :=> 文字
>a['2'] : 文字
>类型别名 :=> 文字
>a : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>'2' : "2"

var r3 = a['3'];
>r3 : 任意
>类型别名 :=> 任意
>a['3'] : 任意
>类型别名 :=> 任意
>a : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>'3' : "3"

var r4 = a[1];
>r4 : 文字
>类型别名 :=> 文字
>a[1] : 文字
>类型别名 :=> 文字
>a : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>1 : 1

var r5 = a[2];
>r5 : 文字
>类型别名 :=> 文字
>a[2] : 文字
>类型别名 :=> 文字
>a : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>2 : 2

var r6 = a[3];
>r6 : 文字
>类型别名 :=> 文字
>a[3] : 文字
>类型别名 :=> 文字
>a : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>3 : 3

var b: { [x: number]: string } = { 1: '', "2": '' }
>b : { [x: 数字]: 文字; }
>x : 数字
>类型别名 :=> 数字
>{ 1: '', "2": '' } : { 1: 文字; "2": 文字; }
>'' : ""
>'' : ""

var r1a = b['1'];
>r1a : 任意
>类型别名 :=> 任意
>b['1'] : 任意
>类型别名 :=> 任意
>b : { [x: 数字]: 文字; }
>'1' : "1"

var r2a = b['2'];
>r2a : 任意
>类型别名 :=> 任意
>b['2'] : 任意
>类型别名 :=> 任意
>b : { [x: 数字]: 文字; }
>'2' : "2"

var r3 = b['3'];
>r3 : 任意
>类型别名 :=> 任意
>b['3'] : 任意
>类型别名 :=> 任意
>b : { [x: 数字]: 文字; }
>'3' : "3"

var r4 = b[1];
>r4 : 文字
>类型别名 :=> 文字
>b[1] : 文字
>类型别名 :=> 文字
>b : { [x: 数字]: 文字; }
>1 : 1

var r5 = b[2];
>r5 : 文字
>类型别名 :=> 文字
>b[2] : 文字
>类型别名 :=> 文字
>b : { [x: 数字]: 文字; }
>2 : 2

var r6 = b[3];
>r6 : 文字
>类型别名 :=> 文字
>b[3] : 文字
>类型别名 :=> 文字
>b : { [x: 数字]: 文字; }
>3 : 3

var b2: { [x: number]: string; 1: string; "2": string; } = { 1: '', "2": '' }
>b2 : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>x : 数字
>类型别名 :=> 数字
>{ 1: '', "2": '' } : { 1: 文字; "2": 文字; }
>'' : ""
>'' : ""

var r1b = b2['1'];
>r1b : 文字
>类型别名 :=> 文字
>b2['1'] : 文字
>类型别名 :=> 文字
>b2 : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>'1' : "1"

var r2b = b2['2'];
>r2b : 文字
>类型别名 :=> 文字
>b2['2'] : 文字
>类型别名 :=> 文字
>b2 : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>'2' : "2"

var r3 = b2['3'];
>r3 : 任意
>类型别名 :=> 任意
>b2['3'] : 任意
>类型别名 :=> 任意
>b2 : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>'3' : "3"

var r4 = b2[1];
>r4 : 文字
>类型别名 :=> 文字
>b2[1] : 文字
>类型别名 :=> 文字
>b2 : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>1 : 1

var r5 = b2[2];
>r5 : 文字
>类型别名 :=> 文字
>b2[2] : 文字
>类型别名 :=> 文字
>b2 : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>2 : 2

var r6 = b2[3];
>r6 : 文字
>类型别名 :=> 文字
>b2[3] : 文字
>类型别名 :=> 文字
>b2 : { [x: 数字]: 文字; 1: 文字; "2": 文字; }
>3 : 3

