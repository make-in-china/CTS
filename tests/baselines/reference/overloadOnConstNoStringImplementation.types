=== tests/cases/compiler/overloadOnConstNoStringImplementation.ts ===
function x2(a: number, cb: (x: 'hi') => number);
>x2 : { (a: 数字, cb: (x: "hi") => 数字): 任意; (a: 数字, cb: (x: "bye") => 数字): 任意; }
>a : 数字
>类型别名 :=> 数字
>cb : (x: "hi") => 数字
>x : "hi"

function x2(a: number, cb: (x: 'bye') => number);
>x2 : { (a: 数字, cb: (x: "hi") => 数字): 任意; (a: 数字, cb: (x: "bye") => 数字): 任意; }
>a : 数字
>类型别名 :=> 数字
>cb : (x: "bye") => 数字
>x : "bye"

function x2(a: number, cb: (x: any) => number) {
>x2 : { (a: 数字, cb: (x: "hi") => 数字): 任意; (a: 数字, cb: (x: "bye") => 数字): 任意; }
>a : 数字
>类型别名 :=> 数字
>cb : (x: 任意) => 数字
>x : 任意
>类型别名 :=> 任意

    cb('hi');
>cb('hi') : 数字
>类型别名 :=> 数字
>cb : (x: 任意) => 数字
>'hi' : "hi"

    cb('bye');
>cb('bye') : 数字
>类型别名 :=> 数字
>cb : (x: 任意) => 数字
>'bye' : "bye"

    var hm = 'hm';
>hm : 文字
>类型别名 :=> 文字
>'hm' : "hm"

    cb(hm); // should this work without a string definition?
>cb(hm) : 数字
>类型别名 :=> 数字
>cb : (x: 任意) => 数字
>hm : 文字
>类型别名 :=> 文字

    cb('uh');
>cb('uh') : 数字
>类型别名 :=> 数字
>cb : (x: 任意) => 数字
>'uh' : "uh"

    cb(1); 
>cb(1) : 数字
>类型别名 :=> 数字
>cb : (x: 任意) => 数字
>1 : 1
}

var cb: (number) => number = (x: number) => 1;
>cb : (number: 任意) => 数字
>number : 任意
>类型别名 :=> 任意
>(x: number) => 1 : (x: 数字) => 数字
>x : 数字
>类型别名 :=> 数字
>1 : 1

x2(1, cb); // error
>x2(1, cb) : 任意
>类型别名 :=> 任意
>x2 : { (a: 数字, cb: (x: "hi") => 数字): 任意; (a: 数字, cb: (x: "bye") => 数字): 任意; }
>1 : 1
>cb : (number: 任意) => 数字

x2(1, (x: 'hi') => 1); // error
>x2(1, (x: 'hi') => 1) : 任意
>类型别名 :=> 任意
>x2 : { (a: 数字, cb: (x: "hi") => 数字): 任意; (a: 数字, cb: (x: "bye") => 数字): 任意; }
>1 : 1
>(x: 'hi') => 1 : (x: "hi") => 数字
>x : "hi"
>1 : 1

x2(1, (x: string) => 1);
>x2(1, (x: string) => 1) : 任意
>类型别名 :=> 任意
>x2 : { (a: 数字, cb: (x: "hi") => 数字): 任意; (a: 数字, cb: (x: "bye") => 数字): 任意; }
>1 : 1
>(x: string) => 1 : (x: 文字) => 数字
>x : 文字
>类型别名 :=> 文字
>1 : 1

