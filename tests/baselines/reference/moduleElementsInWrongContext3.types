=== tests/cases/compiler/moduleElementsInWrongContext3.ts ===
module P {
>P : typeof P
    {
        module M { }
>M : any
>类型别名 :=> 任意

        export namespace N {
>N : any
>类型别名 :=> 任意

            export interface I { }
>I : I
        }

        namespace Q.K { }
>Q : any
>类型别名 :=> 任意
>K : any
>类型别名 :=> 任意

        declare module "ambient" {

        }

        export = M;
>M : any
>类型别名 :=> 任意

        var v;
>v : any
>类型别名 :=> 任意

        function foo() { }
>foo : () => void

        export * from "ambient";
        export { foo };
>foo : () => void

        export { baz as b } from "ambient";
>baz : any
>类型别名 :=> 任意
>b : any
>类型别名 :=> 任意

        export default v;
>v : any
>类型别名 :=> 任意

        export default class C { }
>C : C

        export function bee() { }
>bee : () => void

        import I = M;
>I : any
>类型别名 :=> 任意
>M : any
>类型别名 :=> 任意

        import I2 = require("foo");
>I2 : any
>类型别名 :=> 任意

        import * as Foo from "ambient";
>Foo : any
>类型别名 :=> 任意

        import bar from "ambient";
>bar : any
>类型别名 :=> 任意

        import { baz } from "ambient";
>baz : any
>类型别名 :=> 任意

        import "ambient";
    }
}
