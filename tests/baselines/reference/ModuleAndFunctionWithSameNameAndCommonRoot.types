=== tests/cases/conformance/internalModules/DeclarationMerging/module.ts ===
module A {
>A : 类为 A

    export module Point {
>Point : 类为 Point

        export var Origin = { x: 0, y: 0 };
>Origin : { x: 数字; y: 数字; }
>{ x: 0, y: 0 } : { x: 数字; y: 数字; }
>x : 数字
>类型别名 :=> 数字
>0 : 0
>y : 数字
>类型别名 :=> 数字
>0 : 0
    }
}

=== tests/cases/conformance/internalModules/DeclarationMerging/function.ts ===
module A {
>A : 类为 A

    // duplicate identifier error
    export function Point() {
>Point : 类为 Point

        return { x: 0, y: 0 };
>{ x: 0, y: 0 } : { x: 数字; y: 数字; }
>x : 数字
>类型别名 :=> 数字
>0 : 0
>y : 数字
>类型别名 :=> 数字
>0 : 0
    }
}

=== tests/cases/conformance/internalModules/DeclarationMerging/simple.ts ===
module B {
>B : 类为 B

    export module Point {
>Point : 类为 Point

        export var Origin = { x: 0, y: 0 };
>Origin : { x: 数字; y: 数字; }
>{ x: 0, y: 0 } : { x: 数字; y: 数字; }
>x : 数字
>类型别名 :=> 数字
>0 : 0
>y : 数字
>类型别名 :=> 数字
>0 : 0
    }

    // duplicate identifier error
    export function Point() {
>Point : 类为 Point

        return { x: 0, y: 0 };
>{ x: 0, y: 0 } : { x: 数字; y: 数字; }
>x : 数字
>类型别名 :=> 数字
>0 : 0
>y : 数字
>类型别名 :=> 数字
>0 : 0
    }
}

