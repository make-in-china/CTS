=== tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.ts ===
declare var console: {
>console : { log(msg: 任意): 无值; }

    log(msg: any): void;
>log : (msg: 任意) => 无值
>msg : 任意
>类型别名 :=> 任意
}
type Robot = [number, string, string];
>Robot : [数字, 文字, 文字]

type MultiSkilledRobot = [string, [string, string]];
>MultiSkilledRobot : [文字, [文字, 文字]]

var robotA: Robot = [1, "mower", "mowing"];
>robotA : [数字, 文字, 文字]
>Robot : [数字, 文字, 文字]
>[1, "mower", "mowing"] : [数字, 文字, 文字]
>1 : 1
>"mower" : "mower"
>"mowing" : "mowing"

var robotB: Robot = [2, "trimmer", "trimming"];
>robotB : [数字, 文字, 文字]
>Robot : [数字, 文字, 文字]
>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>2 : 2
>"trimmer" : "trimmer"
>"trimming" : "trimming"

var multiRobotA: MultiSkilledRobot = ["mower", ["mowing", ""]];
>multiRobotA : [文字, [文字, 文字]]
>MultiSkilledRobot : [文字, [文字, 文字]]
>["mower", ["mowing", ""]] : [文字, [文字, 文字]]
>"mower" : "mower"
>["mowing", ""] : [文字, 文字]
>"mowing" : "mowing"
>"" : ""

var multiRobotB: MultiSkilledRobot = ["trimmer", ["trimming", "edging"]];
>multiRobotB : [文字, [文字, 文字]]
>MultiSkilledRobot : [文字, [文字, 文字]]
>["trimmer", ["trimming", "edging"]] : [文字, [文字, 文字]]
>"trimmer" : "trimmer"
>["trimming", "edging"] : [文字, 文字]
>"trimming" : "trimming"
>"edging" : "edging"

let nameA: string, numberB: number, nameB: string, skillB: string;
>nameA : 文字
>类型别名 :=> 文字
>numberB : 数字
>类型别名 :=> 数字
>nameB : 文字
>类型别名 :=> 文字
>skillB : 文字
>类型别名 :=> 文字

let robotAInfo: (number | string)[];
>robotAInfo : (文字 | 数字)[]

let multiSkillB: [string, string], nameMB: string, primarySkillB: string, secondarySkillB: string;
>multiSkillB : [文字, 文字]
>nameMB : 文字
>类型别名 :=> 文字
>primarySkillB : 文字
>类型别名 :=> 文字
>secondarySkillB : 文字
>类型别名 :=> 文字

let multiRobotAInfo: (string | [string, string])[];
>multiRobotAInfo : (文字 | [文字, 文字])[]

[, nameA] = robotA;
>[, nameA] = robotA : [数字, 文字, 文字]
>[, nameA] : [未定, 文字]
> : 未定
>类型别名 :=> 未定
>nameA : 文字
>类型别名 :=> 文字
>robotA : [数字, 文字, 文字]

[, nameB] = getRobotB();
>[, nameB] = getRobotB() : [数字, 文字, 文字]
>[, nameB] : [未定, 文字]
> : 未定
>类型别名 :=> 未定
>nameB : 文字
>类型别名 :=> 文字
>getRobotB() : [数字, 文字, 文字]
>getRobotB : () => [数字, 文字, 文字]

[, nameB] = [2, "trimmer", "trimming"];
>[, nameB] = [2, "trimmer", "trimming"] : [数字, 文字, 文字]
>[, nameB] : [未定, 文字]
> : 未定
>类型别名 :=> 未定
>nameB : 文字
>类型别名 :=> 文字
>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>2 : 2
>"trimmer" : "trimmer"
>"trimming" : "trimming"

[, multiSkillB] = multiRobotB;
>[, multiSkillB] = multiRobotB : [文字, [文字, 文字]]
>[, multiSkillB] : [未定, [文字, 文字]]
> : 未定
>类型别名 :=> 未定
>multiSkillB : [文字, 文字]
>multiRobotB : [文字, [文字, 文字]]

[, multiSkillB] = getMultiRobotB();
>[, multiSkillB] = getMultiRobotB() : [文字, [文字, 文字]]
>[, multiSkillB] : [未定, [文字, 文字]]
> : 未定
>类型别名 :=> 未定
>multiSkillB : [文字, 文字]
>getMultiRobotB() : [文字, [文字, 文字]]
>getMultiRobotB : () => [文字, [文字, 文字]]

[, multiSkillB] = ["roomba", ["vaccum", "mopping"]];
>[, multiSkillB] = ["roomba", ["vaccum", "mopping"]] : [文字, [文字, 文字]]
>[, multiSkillB] : [未定, [文字, 文字]]
> : 未定
>类型别名 :=> 未定
>multiSkillB : [文字, 文字]
>["roomba", ["vaccum", "mopping"]] : [文字, [文字, 文字]]
>"roomba" : "roomba"
>["vaccum", "mopping"] : [文字, 文字]
>"vaccum" : "vaccum"
>"mopping" : "mopping"

[numberB] = robotB;
>[numberB] = robotB : [数字, 文字, 文字]
>[numberB] : [数字]
>numberB : 数字
>类型别名 :=> 数字
>robotB : [数字, 文字, 文字]

[numberB] = getRobotB();
>[numberB] = getRobotB() : [数字, 文字, 文字]
>[numberB] : [数字]
>numberB : 数字
>类型别名 :=> 数字
>getRobotB() : [数字, 文字, 文字]
>getRobotB : () => [数字, 文字, 文字]

[numberB] = [2, "trimmer", "trimming"];
>[numberB] = [2, "trimmer", "trimming"] : [数字, 文字, 文字]
>[numberB] : [数字]
>numberB : 数字
>类型别名 :=> 数字
>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>2 : 2
>"trimmer" : "trimmer"
>"trimming" : "trimming"

[nameMB] = multiRobotB;
>[nameMB] = multiRobotB : [文字, [文字, 文字]]
>[nameMB] : [文字]
>nameMB : 文字
>类型别名 :=> 文字
>multiRobotB : [文字, [文字, 文字]]

[nameMB] = getMultiRobotB();
>[nameMB] = getMultiRobotB() : [文字, [文字, 文字]]
>[nameMB] : [文字]
>nameMB : 文字
>类型别名 :=> 文字
>getMultiRobotB() : [文字, [文字, 文字]]
>getMultiRobotB : () => [文字, [文字, 文字]]

[nameMB] = ["trimmer", ["trimming", "edging"]];
>[nameMB] = ["trimmer", ["trimming", "edging"]] : [文字, 文字[]]
>[nameMB] : [文字]
>nameMB : 文字
>类型别名 :=> 文字
>["trimmer", ["trimming", "edging"]] : [文字, 文字[]]
>"trimmer" : "trimmer"
>["trimming", "edging"] : 文字[]
>"trimming" : "trimming"
>"edging" : "edging"

[numberB, nameB, skillB] = robotB;
>[numberB, nameB, skillB] = robotB : [数字, 文字, 文字]
>[numberB, nameB, skillB] : [数字, 文字, 文字]
>numberB : 数字
>类型别名 :=> 数字
>nameB : 文字
>类型别名 :=> 文字
>skillB : 文字
>类型别名 :=> 文字
>robotB : [数字, 文字, 文字]

[numberB, nameB, skillB] = getRobotB();
>[numberB, nameB, skillB] = getRobotB() : [数字, 文字, 文字]
>[numberB, nameB, skillB] : [数字, 文字, 文字]
>numberB : 数字
>类型别名 :=> 数字
>nameB : 文字
>类型别名 :=> 文字
>skillB : 文字
>类型别名 :=> 文字
>getRobotB() : [数字, 文字, 文字]
>getRobotB : () => [数字, 文字, 文字]

[numberB, nameB, skillB] = [2, "trimmer", "trimming"];
>[numberB, nameB, skillB] = [2, "trimmer", "trimming"] : [数字, 文字, 文字]
>[numberB, nameB, skillB] : [数字, 文字, 文字]
>numberB : 数字
>类型别名 :=> 数字
>nameB : 文字
>类型别名 :=> 文字
>skillB : 文字
>类型别名 :=> 文字
>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>2 : 2
>"trimmer" : "trimmer"
>"trimming" : "trimming"

[nameMB, [primarySkillB, secondarySkillB]] = multiRobotB;
>[nameMB, [primarySkillB, secondarySkillB]] = multiRobotB : [文字, [文字, 文字]]
>[nameMB, [primarySkillB, secondarySkillB]] : [文字, [文字, 文字]]
>nameMB : 文字
>类型别名 :=> 文字
>[primarySkillB, secondarySkillB] : [文字, 文字]
>primarySkillB : 文字
>类型别名 :=> 文字
>secondarySkillB : 文字
>类型别名 :=> 文字
>multiRobotB : [文字, [文字, 文字]]

[nameMB, [primarySkillB, secondarySkillB]] = getMultiRobotB();
>[nameMB, [primarySkillB, secondarySkillB]] = getMultiRobotB() : [文字, [文字, 文字]]
>[nameMB, [primarySkillB, secondarySkillB]] : [文字, [文字, 文字]]
>nameMB : 文字
>类型别名 :=> 文字
>[primarySkillB, secondarySkillB] : [文字, 文字]
>primarySkillB : 文字
>类型别名 :=> 文字
>secondarySkillB : 文字
>类型别名 :=> 文字
>getMultiRobotB() : [文字, [文字, 文字]]
>getMultiRobotB : () => [文字, [文字, 文字]]

[nameMB, [primarySkillB, secondarySkillB]] = ["trimmer", ["trimming", "edging"]];
>[nameMB, [primarySkillB, secondarySkillB]] = ["trimmer", ["trimming", "edging"]] : [文字, [文字, 文字]]
>[nameMB, [primarySkillB, secondarySkillB]] : [文字, [文字, 文字]]
>nameMB : 文字
>类型别名 :=> 文字
>[primarySkillB, secondarySkillB] : [文字, 文字]
>primarySkillB : 文字
>类型别名 :=> 文字
>secondarySkillB : 文字
>类型别名 :=> 文字
>["trimmer", ["trimming", "edging"]] : [文字, [文字, 文字]]
>"trimmer" : "trimmer"
>["trimming", "edging"] : [文字, 文字]
>"trimming" : "trimming"
>"edging" : "edging"

[numberB, ...robotAInfo] = robotB;
>[numberB, ...robotAInfo] = robotB : [数字, 文字, 文字]
>[numberB, ...robotAInfo] : (文字 | 数字)[]
>numberB : 数字
>类型别名 :=> 数字
>...robotAInfo : 文字 | 数字
>robotAInfo : (文字 | 数字)[]
>robotB : [数字, 文字, 文字]

[numberB, ...robotAInfo] = getRobotB();
>[numberB, ...robotAInfo] = getRobotB() : [数字, 文字, 文字]
>[numberB, ...robotAInfo] : (文字 | 数字)[]
>numberB : 数字
>类型别名 :=> 数字
>...robotAInfo : 文字 | 数字
>robotAInfo : (文字 | 数字)[]
>getRobotB() : [数字, 文字, 文字]
>getRobotB : () => [数字, 文字, 文字]

[numberB, ...robotAInfo] = <Robot>[2, "trimmer", "trimming"];
>[numberB, ...robotAInfo] = <Robot>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>[numberB, ...robotAInfo] : (文字 | 数字)[]
>numberB : 数字
>类型别名 :=> 数字
>...robotAInfo : 文字 | 数字
>robotAInfo : (文字 | 数字)[]
><Robot>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>Robot : [数字, 文字, 文字]
>[2, "trimmer", "trimming"] : [数字, 文字, 文字]
>2 : 2
>"trimmer" : "trimmer"
>"trimming" : "trimming"

[...multiRobotAInfo] = multiRobotA;
>[...multiRobotAInfo] = multiRobotA : [文字, [文字, 文字]]
>[...multiRobotAInfo] : (文字 | [文字, 文字])[]
>...multiRobotAInfo : 文字 | [文字, 文字]
>multiRobotAInfo : (文字 | [文字, 文字])[]
>multiRobotA : [文字, [文字, 文字]]

[...multiRobotAInfo] = getMultiRobotB();
>[...multiRobotAInfo] = getMultiRobotB() : [文字, [文字, 文字]]
>[...multiRobotAInfo] : (文字 | [文字, 文字])[]
>...multiRobotAInfo : 文字 | [文字, 文字]
>multiRobotAInfo : (文字 | [文字, 文字])[]
>getMultiRobotB() : [文字, [文字, 文字]]
>getMultiRobotB : () => [文字, [文字, 文字]]

[...multiRobotAInfo] = ["trimmer", ["trimming", "edging"]];
>[...multiRobotAInfo] = ["trimmer", ["trimming", "edging"]] : (文字 | [文字, 文字])[]
>[...multiRobotAInfo] : (文字 | [文字, 文字])[]
>...multiRobotAInfo : 文字 | [文字, 文字]
>multiRobotAInfo : (文字 | [文字, 文字])[]
>["trimmer", ["trimming", "edging"]] : (文字 | [文字, 文字])[]
>"trimmer" : "trimmer"
>["trimming", "edging"] : [文字, 文字]
>"trimming" : "trimming"
>"edging" : "edging"

if (nameA == nameB) {
>nameA == nameB : 真假
>类型别名 :=> 真假
>nameA : 文字
>类型别名 :=> 文字
>nameB : 文字
>类型别名 :=> 文字

    console.log(skillB);
>console.log(skillB) : 无值
>类型别名 :=> 无值
>console.log : (msg: 任意) => 无值
>console : { log(msg: 任意): 无值; }
>log : (msg: 任意) => 无值
>skillB : 文字
>类型别名 :=> 文字
}

function getRobotB() {
>getRobotB : () => [数字, 文字, 文字]

    return robotB;
>robotB : [数字, 文字, 文字]
}

function getMultiRobotB() {
>getMultiRobotB : () => [文字, [文字, 文字]]

    return multiRobotB;
>multiRobotB : [文字, [文字, 文字]]
}
