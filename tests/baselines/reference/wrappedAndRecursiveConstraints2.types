=== tests/cases/conformance/types/typeParameters/typeArgumentLists/wrappedAndRecursiveConstraints2.ts ===
class C<T extends C<T>> { // error
>C : C<T>
>T : T
>C : C<T>
>T : T

    constructor(x: T) { }
>x : T
>T : T
}

var c = new C(1);
>c : C<数字>
>new C(1) : C<数字>
>C : 类为 C
>1 : 1

var c = new C(new C('')); // error
>c : C<数字>
>new C(new C('')) : C<C<文字>>
>C : 类为 C
>new C('') : C<文字>
>C : 类为 C
>'' : ""

