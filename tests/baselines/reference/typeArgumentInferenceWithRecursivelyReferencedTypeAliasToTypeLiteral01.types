=== tests/cases/compiler/typeArgumentInferenceWithRecursivelyReferencedTypeAliasToTypeLiteral01.ts ===
type TreeNode = {
>TreeNode : TreeNode

    name: string;
>name : 文字
>类型别名 :=> 文字

    parent: TreeNode;
>parent : TreeNode
>TreeNode : TreeNode
}

var nodes: TreeNode[];
>nodes : TreeNode[]
>TreeNode : TreeNode

nodes.map(n => n.name);
>nodes.map(n => n.name) : 文字[]
>nodes.map : <U>(callbackfn: (value: TreeNode, index: 数字, array: TreeNode[]) => U, thisArg?: 任意) => U[]
>nodes : TreeNode[]
>map : <U>(callbackfn: (value: TreeNode, index: 数字, array: TreeNode[]) => U, thisArg?: 任意) => U[]
>n => n.name : (n: TreeNode) => 文字
>n : TreeNode
>n.name : 文字
>类型别名 :=> 文字
>n : TreeNode
>name : 文字
>类型别名 :=> 文字

