=== tests/cases/conformance/classes/constructorDeclarations/classConstructorParametersAccessibility2.ts ===
class C1 {
>C1 : C1

    constructor(public x?: number) { }
>x : number
>类型别名 :=> 数字
}
var c1: C1;
>c1 : C1
>C1 : C1

c1.x // OK
>c1.x : number
>类型别名 :=> 数字
>c1 : C1
>x : number
>类型别名 :=> 数字


class C2 {
>C2 : C2

    constructor(private p?: number) { }
>p : number
>类型别名 :=> 数字
}
var c2: C2;
>c2 : C2
>C2 : C2

c2.p // private, error
>c2.p : number
>类型别名 :=> 数字
>c2 : C2
>p : number
>类型别名 :=> 数字


class C3 {
>C3 : C3

    constructor(protected p?: number) { }
>p : number
>类型别名 :=> 数字
}
var c3: C3;
>c3 : C3
>C3 : C3

c3.p // protected, error
>c3.p : number
>类型别名 :=> 数字
>c3 : C3
>p : number
>类型别名 :=> 数字

class Derived extends C3 {
>Derived : Derived
>C3 : C3

    constructor(p: number) {
>p : number
>类型别名 :=> 数字

        super(p);
>super(p) : void
>类型别名 :=> 无值
>super : typeof C3
>p : number
>类型别名 :=> 数字

        this.p; // OK
>this.p : number
>类型别名 :=> 数字
>this : this
>p : number
>类型别名 :=> 数字
    }
}

