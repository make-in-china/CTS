=== tests/cases/conformance/types/primitives/number/numberPropertyAccess.ts ===
var x = 1;
>x : 数字
>类型别名 :=> 数字
>1 : 1

var a = x.toExponential();
>a : 文字
>类型别名 :=> 文字
>x.toExponential() : 文字
>类型别名 :=> 文字
>x.toExponential : (fractionDigits?: 数字) => 文字
>x : 数字
>类型别名 :=> 数字
>toExponential : (fractionDigits?: 数字) => 文字

var b = x.hasOwnProperty('toFixed');
>b : 真假
>类型别名 :=> 真假
>x.hasOwnProperty('toFixed') : 真假
>类型别名 :=> 真假
>x.hasOwnProperty : (v: 文字) => 真假
>x : 数字
>类型别名 :=> 数字
>hasOwnProperty : (v: 文字) => 真假
>'toFixed' : "toFixed"

var c = x['toExponential']();
>c : 文字
>类型别名 :=> 文字
>x['toExponential']() : 文字
>类型别名 :=> 文字
>x['toExponential'] : (fractionDigits?: 数字) => 文字
>x : 数字
>类型别名 :=> 数字
>'toExponential' : "toExponential"

var d = x['hasOwnProperty']('toFixed');
>d : 真假
>类型别名 :=> 真假
>x['hasOwnProperty']('toFixed') : 真假
>类型别名 :=> 真假
>x['hasOwnProperty'] : (v: 文字) => 真假
>x : 数字
>类型别名 :=> 数字
>'hasOwnProperty' : "hasOwnProperty"
>'toFixed' : "toFixed"

