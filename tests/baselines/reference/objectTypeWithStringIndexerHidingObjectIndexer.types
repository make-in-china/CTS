=== tests/cases/conformance/types/members/objectTypeWithStringIndexerHidingObjectIndexer.ts ===
// object types can define string indexers that are more specific than the default 'any' that would be returned
// no errors expected below 

interface Object {
>Object : Object

    [x: string]: Object;
>x : 文字
>类型别名 :=> 文字
>Object : Object
}
var o = {};
>o : {}
>{} : {}

var r = o['']; // should be Object
>r : 任意
>类型别名 :=> 任意
>o[''] : 任意
>类型别名 :=> 任意
>o : {}
>'' : ""

class C {
>C : C

    foo: string;
>foo : 文字
>类型别名 :=> 文字

    [x: string]: string;
>x : 文字
>类型别名 :=> 文字
}
var c: C;
>c : C
>C : C

var r2: string = c[''];
>r2 : 文字
>类型别名 :=> 文字
>c[''] : 文字
>类型别名 :=> 文字
>c : C
>'' : ""

interface I {
>I : I

    bar: string;
>bar : 文字
>类型别名 :=> 文字

    [x: string]: string;
>x : 文字
>类型别名 :=> 文字
}
var i: I;
>i : I
>I : I

var r3: string = i[''];
>r3 : 文字
>类型别名 :=> 文字
>i[''] : 文字
>类型别名 :=> 文字
>i : I
>'' : ""

var o2: {
>o2 : { [x: 文字]: 文字; baz: 文字; }

    baz: string;
>baz : 文字
>类型别名 :=> 文字

    [x: string]: string;
>x : 文字
>类型别名 :=> 文字
}
var r4: string = o2[''];
>r4 : 文字
>类型别名 :=> 文字
>o2[''] : 文字
>类型别名 :=> 文字
>o2 : { [x: 文字]: 文字; baz: 文字; }
>'' : ""



