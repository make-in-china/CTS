=== tests/cases/conformance/es6/templates/taggedTemplateStringsWithOverloadResolution2.ts ===
function foo1(strs: TemplateStringsArray, x: number): string;
>foo1 : { (strs: TemplateStringsArray, x: number): string; (strs: string[], x: number): number; }
>strs : TemplateStringsArray
>TemplateStringsArray : TemplateStringsArray
>x : number
>类型别名 :=> 数字

function foo1(strs: string[], x: number): number;
>foo1 : { (strs: TemplateStringsArray, x: number): string; (strs: string[], x: number): number; }
>strs : string[]
>x : number
>类型别名 :=> 数字

function foo1(...stuff: any[]): any {
>foo1 : { (strs: TemplateStringsArray, x: number): string; (strs: string[], x: number): number; }
>stuff : any[]

    return undefined;
>undefined : undefined
>类型别名 :=> 未定
}

var a = foo1 `${1}`;
>a : string
>类型别名 :=> 文字
>foo1 `${1}` : string
>类型别名 :=> 文字
>foo1 : { (strs: TemplateStringsArray, x: number): string; (strs: string[], x: number): number; }
>`${1}` : string
>类型别名 :=> 文字
>1 : 1

var b = foo1([], 1);
>b : number
>类型别名 :=> 数字
>foo1([], 1) : number
>类型别名 :=> 数字
>foo1 : { (strs: TemplateStringsArray, x: number): string; (strs: string[], x: number): number; }
>[] : undefined[]
>1 : 1

function foo2(strs: string[], x: number): number;
>foo2 : { (strs: string[], x: number): number; (strs: TemplateStringsArray, x: number): string; }
>strs : string[]
>x : number
>类型别名 :=> 数字

function foo2(strs: TemplateStringsArray, x: number): string;
>foo2 : { (strs: string[], x: number): number; (strs: TemplateStringsArray, x: number): string; }
>strs : TemplateStringsArray
>TemplateStringsArray : TemplateStringsArray
>x : number
>类型别名 :=> 数字

function foo2(...stuff: any[]): any {
>foo2 : { (strs: string[], x: number): number; (strs: TemplateStringsArray, x: number): string; }
>stuff : any[]

    return undefined;
>undefined : undefined
>类型别名 :=> 未定
}

var c = foo2 `${1}`;
>c : string
>类型别名 :=> 文字
>foo2 `${1}` : string
>类型别名 :=> 文字
>foo2 : { (strs: string[], x: number): number; (strs: TemplateStringsArray, x: number): string; }
>`${1}` : string
>类型别名 :=> 文字
>1 : 1

var d = foo2([], 1);
>d : number
>类型别名 :=> 数字
>foo2([], 1) : number
>类型别名 :=> 数字
>foo2 : { (strs: string[], x: number): number; (strs: TemplateStringsArray, x: number): string; }
>[] : undefined[]
>1 : 1

