=== tests/cases/conformance/expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithAnyAndNumber.ts ===
var a: any;
>a : 任意
>类型别名 :=> 任意

var b: number;
>b : 数字
>类型别名 :=> 数字

// operator *
var ra1 = a * a;
>ra1 : 数字
>类型别名 :=> 数字
>a * a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var ra2 = a * b;
>ra2 : 数字
>类型别名 :=> 数字
>a * b : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>b : 数字
>类型别名 :=> 数字

var ra3 = a * 0;
>ra3 : 数字
>类型别名 :=> 数字
>a * 0 : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>0 : 0

var ra4 = 0 * a;
>ra4 : 数字
>类型别名 :=> 数字
>0 * a : 数字
>类型别名 :=> 数字
>0 : 0
>a : 任意
>类型别名 :=> 任意

var ra5 = 0 * 0;
>ra5 : 数字
>类型别名 :=> 数字
>0 * 0 : 数字
>类型别名 :=> 数字
>0 : 0
>0 : 0

var ra6 = b * 0;
>ra6 : 数字
>类型别名 :=> 数字
>b * 0 : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>0 : 0

var ra7 = 0 * b;
>ra7 : 数字
>类型别名 :=> 数字
>0 * b : 数字
>类型别名 :=> 数字
>0 : 0
>b : 数字
>类型别名 :=> 数字

var ra8 = b * b;
>ra8 : 数字
>类型别名 :=> 数字
>b * b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

// operator /
var rb1 = a / a;
>rb1 : 数字
>类型别名 :=> 数字
>a / a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var rb2 = a / b;
>rb2 : 数字
>类型别名 :=> 数字
>a / b : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>b : 数字
>类型别名 :=> 数字

var rb3 = a / 0;
>rb3 : 数字
>类型别名 :=> 数字
>a / 0 : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>0 : 0

var rb4 = 0 / a;
>rb4 : 数字
>类型别名 :=> 数字
>0 / a : 数字
>类型别名 :=> 数字
>0 : 0
>a : 任意
>类型别名 :=> 任意

var rb5 = 0 / 0;
>rb5 : 数字
>类型别名 :=> 数字
>0 / 0 : 数字
>类型别名 :=> 数字
>0 : 0
>0 : 0

var rb6 = b / 0;
>rb6 : 数字
>类型别名 :=> 数字
>b / 0 : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>0 : 0

var rb7 = 0 / b;
>rb7 : 数字
>类型别名 :=> 数字
>0 / b : 数字
>类型别名 :=> 数字
>0 : 0
>b : 数字
>类型别名 :=> 数字

var rb8 = b / b;
>rb8 : 数字
>类型别名 :=> 数字
>b / b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

// operator %
var rc1 = a % a;
>rc1 : 数字
>类型别名 :=> 数字
>a % a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var rc2 = a % b;
>rc2 : 数字
>类型别名 :=> 数字
>a % b : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>b : 数字
>类型别名 :=> 数字

var rc3 = a % 0;
>rc3 : 数字
>类型别名 :=> 数字
>a % 0 : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>0 : 0

var rc4 = 0 % a;
>rc4 : 数字
>类型别名 :=> 数字
>0 % a : 数字
>类型别名 :=> 数字
>0 : 0
>a : 任意
>类型别名 :=> 任意

var rc5 = 0 % 0;
>rc5 : 数字
>类型别名 :=> 数字
>0 % 0 : 数字
>类型别名 :=> 数字
>0 : 0
>0 : 0

var rc6 = b % 0;
>rc6 : 数字
>类型别名 :=> 数字
>b % 0 : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>0 : 0

var rc7 = 0 % b;
>rc7 : 数字
>类型别名 :=> 数字
>0 % b : 数字
>类型别名 :=> 数字
>0 : 0
>b : 数字
>类型别名 :=> 数字

var rc8 = b % b;
>rc8 : 数字
>类型别名 :=> 数字
>b % b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

// operator -
var rd1 = a - a;
>rd1 : 数字
>类型别名 :=> 数字
>a - a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var rd2 = a - b;
>rd2 : 数字
>类型别名 :=> 数字
>a - b : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>b : 数字
>类型别名 :=> 数字

var rd3 = a - 0;
>rd3 : 数字
>类型别名 :=> 数字
>a - 0 : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>0 : 0

var rd4 = 0 - a;
>rd4 : 数字
>类型别名 :=> 数字
>0 - a : 数字
>类型别名 :=> 数字
>0 : 0
>a : 任意
>类型别名 :=> 任意

var rd5 = 0 - 0;
>rd5 : 数字
>类型别名 :=> 数字
>0 - 0 : 数字
>类型别名 :=> 数字
>0 : 0
>0 : 0

var rd6 = b - 0;
>rd6 : 数字
>类型别名 :=> 数字
>b - 0 : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>0 : 0

var rd7 = 0 - b;
>rd7 : 数字
>类型别名 :=> 数字
>0 - b : 数字
>类型别名 :=> 数字
>0 : 0
>b : 数字
>类型别名 :=> 数字

var rd8 = b - b;
>rd8 : 数字
>类型别名 :=> 数字
>b - b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

// operator <<
var re1 = a << a;
>re1 : 数字
>类型别名 :=> 数字
>a << a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var re2 = a << b;
>re2 : 数字
>类型别名 :=> 数字
>a << b : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>b : 数字
>类型别名 :=> 数字

var re3 = a << 0;
>re3 : 数字
>类型别名 :=> 数字
>a << 0 : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>0 : 0

var re4 = 0 << a;
>re4 : 数字
>类型别名 :=> 数字
>0 << a : 数字
>类型别名 :=> 数字
>0 : 0
>a : 任意
>类型别名 :=> 任意

var re5 = 0 << 0;
>re5 : 数字
>类型别名 :=> 数字
>0 << 0 : 数字
>类型别名 :=> 数字
>0 : 0
>0 : 0

var re6 = b << 0;
>re6 : 数字
>类型别名 :=> 数字
>b << 0 : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>0 : 0

var re7 = 0 << b;
>re7 : 数字
>类型别名 :=> 数字
>0 << b : 数字
>类型别名 :=> 数字
>0 : 0
>b : 数字
>类型别名 :=> 数字

var re8 = b << b;
>re8 : 数字
>类型别名 :=> 数字
>b << b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

// operator >>
var rf1 = a >> a;
>rf1 : 数字
>类型别名 :=> 数字
>a >> a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var rf2 = a >> b;
>rf2 : 数字
>类型别名 :=> 数字
>a >> b : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>b : 数字
>类型别名 :=> 数字

var rf3 = a >> 0;
>rf3 : 数字
>类型别名 :=> 数字
>a >> 0 : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>0 : 0

var rf4 = 0 >> a;
>rf4 : 数字
>类型别名 :=> 数字
>0 >> a : 数字
>类型别名 :=> 数字
>0 : 0
>a : 任意
>类型别名 :=> 任意

var rf5 = 0 >> 0;
>rf5 : 数字
>类型别名 :=> 数字
>0 >> 0 : 数字
>类型别名 :=> 数字
>0 : 0
>0 : 0

var rf6 = b >> 0;
>rf6 : 数字
>类型别名 :=> 数字
>b >> 0 : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>0 : 0

var rf7 = 0 >> b;
>rf7 : 数字
>类型别名 :=> 数字
>0 >> b : 数字
>类型别名 :=> 数字
>0 : 0
>b : 数字
>类型别名 :=> 数字

var rf8 = b >> b;
>rf8 : 数字
>类型别名 :=> 数字
>b >> b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

// operator >>>
var rg1 = a >>> a;
>rg1 : 数字
>类型别名 :=> 数字
>a >>> a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var rg2 = a >>> b;
>rg2 : 数字
>类型别名 :=> 数字
>a >>> b : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>b : 数字
>类型别名 :=> 数字

var rg3 = a >>> 0;
>rg3 : 数字
>类型别名 :=> 数字
>a >>> 0 : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>0 : 0

var rg4 = 0 >>> a;
>rg4 : 数字
>类型别名 :=> 数字
>0 >>> a : 数字
>类型别名 :=> 数字
>0 : 0
>a : 任意
>类型别名 :=> 任意

var rg5 = 0 >>> 0;
>rg5 : 数字
>类型别名 :=> 数字
>0 >>> 0 : 数字
>类型别名 :=> 数字
>0 : 0
>0 : 0

var rg6 = b >>> 0;
>rg6 : 数字
>类型别名 :=> 数字
>b >>> 0 : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>0 : 0

var rg7 = 0 >>> b;
>rg7 : 数字
>类型别名 :=> 数字
>0 >>> b : 数字
>类型别名 :=> 数字
>0 : 0
>b : 数字
>类型别名 :=> 数字

var rg8 = b >>> b;
>rg8 : 数字
>类型别名 :=> 数字
>b >>> b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

// operator &
var rh1 = a & a;
>rh1 : 数字
>类型别名 :=> 数字
>a & a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var rh2 = a & b;
>rh2 : 数字
>类型别名 :=> 数字
>a & b : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>b : 数字
>类型别名 :=> 数字

var rh3 = a & 0;
>rh3 : 数字
>类型别名 :=> 数字
>a & 0 : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>0 : 0

var rh4 = 0 & a;
>rh4 : 数字
>类型别名 :=> 数字
>0 & a : 数字
>类型别名 :=> 数字
>0 : 0
>a : 任意
>类型别名 :=> 任意

var rh5 = 0 & 0;
>rh5 : 数字
>类型别名 :=> 数字
>0 & 0 : 数字
>类型别名 :=> 数字
>0 : 0
>0 : 0

var rh6 = b & 0;
>rh6 : 数字
>类型别名 :=> 数字
>b & 0 : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>0 : 0

var rh7 = 0 & b;
>rh7 : 数字
>类型别名 :=> 数字
>0 & b : 数字
>类型别名 :=> 数字
>0 : 0
>b : 数字
>类型别名 :=> 数字

var rh8 = b & b;
>rh8 : 数字
>类型别名 :=> 数字
>b & b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

// operator ^
var ri1 = a ^ a;
>ri1 : 数字
>类型别名 :=> 数字
>a ^ a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var ri2 = a ^ b;
>ri2 : 数字
>类型别名 :=> 数字
>a ^ b : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>b : 数字
>类型别名 :=> 数字

var ri3 = a ^ 0;
>ri3 : 数字
>类型别名 :=> 数字
>a ^ 0 : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>0 : 0

var ri4 = 0 ^ a;
>ri4 : 数字
>类型别名 :=> 数字
>0 ^ a : 数字
>类型别名 :=> 数字
>0 : 0
>a : 任意
>类型别名 :=> 任意

var ri5 = 0 ^ 0;
>ri5 : 数字
>类型别名 :=> 数字
>0 ^ 0 : 数字
>类型别名 :=> 数字
>0 : 0
>0 : 0

var ri6 = b ^ 0;
>ri6 : 数字
>类型别名 :=> 数字
>b ^ 0 : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>0 : 0

var ri7 = 0 ^ b;
>ri7 : 数字
>类型别名 :=> 数字
>0 ^ b : 数字
>类型别名 :=> 数字
>0 : 0
>b : 数字
>类型别名 :=> 数字

var ri8 = b ^ b;
>ri8 : 数字
>类型别名 :=> 数字
>b ^ b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

// operator |
var rj1 = a | a;
>rj1 : 数字
>类型别名 :=> 数字
>a | a : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>a : 任意
>类型别名 :=> 任意

var rj2 = a | b;
>rj2 : 数字
>类型别名 :=> 数字
>a | b : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>b : 数字
>类型别名 :=> 数字

var rj3 = a | 0;
>rj3 : 数字
>类型别名 :=> 数字
>a | 0 : 数字
>类型别名 :=> 数字
>a : 任意
>类型别名 :=> 任意
>0 : 0

var rj4 = 0 | a;
>rj4 : 数字
>类型别名 :=> 数字
>0 | a : 数字
>类型别名 :=> 数字
>0 : 0
>a : 任意
>类型别名 :=> 任意

var rj5 = 0 | 0;
>rj5 : 数字
>类型别名 :=> 数字
>0 | 0 : 数字
>类型别名 :=> 数字
>0 : 0
>0 : 0

var rj6 = b | 0;
>rj6 : 数字
>类型别名 :=> 数字
>b | 0 : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>0 : 0

var rj7 = 0 | b;
>rj7 : 数字
>类型别名 :=> 数字
>0 | b : 数字
>类型别名 :=> 数字
>0 : 0
>b : 数字
>类型别名 :=> 数字

var rj8 = b | b;
>rj8 : 数字
>类型别名 :=> 数字
>b | b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字
>b : 数字
>类型别名 :=> 数字

