=== tests/cases/conformance/es6/Symbols/symbolProperty16.ts ===
class C {
>C : C

    private [Symbol.iterator]: { x };
>Symbol.iterator : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>iterator : symbol
>类型别名 :=> 符号
>x : any
>类型别名 :=> 任意
}
interface I {
>I : I

    [Symbol.iterator]: { x };
>Symbol.iterator : symbol
>类型别名 :=> 符号
>Symbol : SymbolConstructor
>iterator : symbol
>类型别名 :=> 符号
>x : any
>类型别名 :=> 任意
}

declare function foo(i: I): I;
>foo : { (i: I): I; (a: any): any; }
>i : I
>I : I
>I : I

declare function foo(a: any): any;
>foo : { (i: I): I; (a: any): any; }
>a : any
>类型别名 :=> 任意

declare function bar(i: C): C;
>bar : { (i: C): C; (a: any): any; }
>i : C
>C : C
>C : C

declare function bar(a: any): any;
>bar : { (i: C): C; (a: any): any; }
>a : any
>类型别名 :=> 任意

foo(new C);
>foo(new C) : any
>类型别名 :=> 任意
>foo : { (i: I): I; (a: any): any; }
>new C : C
>C : typeof C

var i: I;
>i : I
>I : I

bar(i);
>bar(i) : any
>类型别名 :=> 任意
>bar : { (i: C): C; (a: any): any; }
>i : I

