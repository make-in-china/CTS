=== tests/cases/conformance/types/thisType/declarationFiles.ts ===
class C1 {
>C1 : C1

    x: this;
>x : 本体

    f(x: this): this { return undefined; }
>f : (x: 本体) => 本体
>x : 本体
>undefined : 未定
>类型别名 :=> 未定

    constructor(x: this) { }
>x : 任意
>类型别名 :=> 任意
}

class C2 {
>C2 : C2

    [x: string]: this;
>x : 文字
>类型别名 :=> 文字
}

interface Foo<T> {
>Foo : Foo<T>
>T : T

    x: T;
>x : T
>T : T

    y: this;
>y : 本体
}

class C3 {
>C3 : C3

    a: this[];
>a : 本体[]

    b: [this, this];
>b : [本体, 本体]

    c: this | Date;
>c : 本体 | Date
>Date : Date

    d: this & Date;
>d : 本体 & Date
>Date : Date

    e: (((this)));
>e : 本体

    f: (x: this) => this;
>f : (x: 本体) => 本体
>x : 本体

    g: new (x: this) => this;
>g : 新建 (x: 本体) => 本体
>x : 本体

    h: Foo<this>;
>h : Foo<本体>
>Foo : Foo<T>

    i: Foo<this | (() => this)>;
>i : Foo<本体 | (() => 本体)>
>Foo : Foo<T>

    j: (x: any) => x is this;
>j : (x: 任意) => x 作为 本体
>x : 任意
>类型别名 :=> 任意
>x : 任意
>类型别名 :=> 任意
}

class C4 {
>C4 : C4

    x1 = { a: this };
>x1 : { a: 本体; }
>{ a: this } : { a: 本体; }
>a : 本体
>this : 本体

    x2 = [this];
>x2 : 本体[]
>[this] : 本体[]
>this : 本体

    x3 = [{ a: this }];
>x3 : { a: 本体; }[]
>[{ a: this }] : { a: 本体; }[]
>{ a: this } : { a: 本体; }
>a : 本体
>this : 本体

    x4 = () => this;
>x4 : () => 本体
>() => this : () => 本体
>this : 本体

    f1() {
>f1 : () => { a: 本体; }

        return { a: this };
>{ a: this } : { a: 本体; }
>a : 本体
>this : 本体
    }
    f2() {
>f2 : () => 本体[]

        return [this];
>[this] : 本体[]
>this : 本体
    }
    f3() {
>f3 : () => { a: 本体; }[]

        return [{ a: this }];
>[{ a: this }] : { a: 本体; }[]
>{ a: this } : { a: 本体; }
>a : 本体
>this : 本体
    }
    f4() {
>f4 : () => () => 本体

        return () => this;
>() => this : () => 本体
>this : 本体
    }
}

